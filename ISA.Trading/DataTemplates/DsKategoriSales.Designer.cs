//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.7905
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Trading.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DsKategoriSales")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DsKategoriSales : global::System.Data.DataSet {
        
        private Data1DataTable tableData1;
        
        private Data2DataTable tableData2;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DsKategoriSales() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DsKategoriSales(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data1"] != null)) {
                    base.Tables.Add(new Data1DataTable(ds.Tables["Data1"]));
                }
                if ((ds.Tables["Data2"] != null)) {
                    base.Tables.Add(new Data2DataTable(ds.Tables["Data2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data1DataTable Data1 {
            get {
                return this.tableData1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data2DataTable Data2 {
            get {
                return this.tableData2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DsKategoriSales cln = ((DsKategoriSales)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data1"] != null)) {
                    base.Tables.Add(new Data1DataTable(ds.Tables["Data1"]));
                }
                if ((ds.Tables["Data2"] != null)) {
                    base.Tables.Add(new Data2DataTable(ds.Tables["Data2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableData1 = ((Data1DataTable)(base.Tables["Data1"]));
            if ((initTable == true)) {
                if ((this.tableData1 != null)) {
                    this.tableData1.InitVars();
                }
            }
            this.tableData2 = ((Data2DataTable)(base.Tables["Data2"]));
            if ((initTable == true)) {
                if ((this.tableData2 != null)) {
                    this.tableData2.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DsKategoriSales";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsKategoriSales.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData1 = new Data1DataTable();
            base.Tables.Add(this.tableData1);
            this.tableData2 = new Data2DataTable();
            base.Tables.Add(this.tableData2);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DsKategoriSales ds = new DsKategoriSales();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void Data1RowChangeEventHandler(object sender, Data1RowChangeEvent e);
        
        public delegate void Data2RowChangeEventHandler(object sender, Data2RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Data1DataTable : global::System.Data.TypedTableBase<Data1Row> {
            
            private global::System.Data.DataColumn columnkodegudang;
            
            private global::System.Data.DataColumn columnNamaDepo;
            
            private global::System.Data.DataColumn columnDistribusiBE;
            
            private global::System.Data.DataColumn columnDistribusiNonBE;
            
            private global::System.Data.DataColumn columnRetailBE;
            
            private global::System.Data.DataColumn columnRetailNonBE;
            
            private global::System.Data.DataColumn columnBengkelBE;
            
            private global::System.Data.DataColumn columnBengkelNonBE;
            
            private global::System.Data.DataColumn columnBengkelLuar;
            
            private global::System.Data.DataColumn columnTotalBE;
            
            private global::System.Data.DataColumn columnTotalNonBE;
            
            private global::System.Data.DataColumn columnJasaService;
            
            private global::System.Data.DataColumn columnRLKotor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1DataTable() {
                this.TableName = "Data1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Data1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kodegudangColumn {
                get {
                    return this.columnkodegudang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaDepoColumn {
                get {
                    return this.columnNamaDepo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistribusiBEColumn {
                get {
                    return this.columnDistribusiBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistribusiNonBEColumn {
                get {
                    return this.columnDistribusiNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RetailBEColumn {
                get {
                    return this.columnRetailBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RetailNonBEColumn {
                get {
                    return this.columnRetailNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BengkelBEColumn {
                get {
                    return this.columnBengkelBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BengkelNonBEColumn {
                get {
                    return this.columnBengkelNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BengkelLuarColumn {
                get {
                    return this.columnBengkelLuar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalBEColumn {
                get {
                    return this.columnTotalBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalNonBEColumn {
                get {
                    return this.columnTotalNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JasaServiceColumn {
                get {
                    return this.columnJasaService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RLKotorColumn {
                get {
                    return this.columnRLKotor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row this[int index] {
                get {
                    return ((Data1Row)(this.Rows[index]));
                }
            }
            
            public event Data1RowChangeEventHandler Data1RowChanging;
            
            public event Data1RowChangeEventHandler Data1RowChanged;
            
            public event Data1RowChangeEventHandler Data1RowDeleting;
            
            public event Data1RowChangeEventHandler Data1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddData1Row(Data1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row AddData1Row(string kodegudang, string NamaDepo, string DistribusiBE, string DistribusiNonBE, string RetailBE, string RetailNonBE, string BengkelBE, string BengkelNonBE, string BengkelLuar, string TotalBE, string TotalNonBE, string JasaService, string RLKotor) {
                Data1Row rowData1Row = ((Data1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        kodegudang,
                        NamaDepo,
                        DistribusiBE,
                        DistribusiNonBE,
                        RetailBE,
                        RetailNonBE,
                        BengkelBE,
                        BengkelNonBE,
                        BengkelLuar,
                        TotalBE,
                        TotalNonBE,
                        JasaService,
                        RLKotor};
                rowData1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowData1Row);
                return rowData1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Data1DataTable cln = ((Data1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Data1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkodegudang = base.Columns["kodegudang"];
                this.columnNamaDepo = base.Columns["NamaDepo"];
                this.columnDistribusiBE = base.Columns["DistribusiBE"];
                this.columnDistribusiNonBE = base.Columns["DistribusiNonBE"];
                this.columnRetailBE = base.Columns["RetailBE"];
                this.columnRetailNonBE = base.Columns["RetailNonBE"];
                this.columnBengkelBE = base.Columns["BengkelBE"];
                this.columnBengkelNonBE = base.Columns["BengkelNonBE"];
                this.columnBengkelLuar = base.Columns["BengkelLuar"];
                this.columnTotalBE = base.Columns["TotalBE"];
                this.columnTotalNonBE = base.Columns["TotalNonBE"];
                this.columnJasaService = base.Columns["JasaService"];
                this.columnRLKotor = base.Columns["RLKotor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkodegudang = new global::System.Data.DataColumn("kodegudang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkodegudang);
                this.columnNamaDepo = new global::System.Data.DataColumn("NamaDepo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaDepo);
                this.columnDistribusiBE = new global::System.Data.DataColumn("DistribusiBE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistribusiBE);
                this.columnDistribusiNonBE = new global::System.Data.DataColumn("DistribusiNonBE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistribusiNonBE);
                this.columnRetailBE = new global::System.Data.DataColumn("RetailBE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetailBE);
                this.columnRetailNonBE = new global::System.Data.DataColumn("RetailNonBE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetailNonBE);
                this.columnBengkelBE = new global::System.Data.DataColumn("BengkelBE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBengkelBE);
                this.columnBengkelNonBE = new global::System.Data.DataColumn("BengkelNonBE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBengkelNonBE);
                this.columnBengkelLuar = new global::System.Data.DataColumn("BengkelLuar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBengkelLuar);
                this.columnTotalBE = new global::System.Data.DataColumn("TotalBE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBE);
                this.columnTotalNonBE = new global::System.Data.DataColumn("TotalNonBE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNonBE);
                this.columnJasaService = new global::System.Data.DataColumn("JasaService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJasaService);
                this.columnRLKotor = new global::System.Data.DataColumn("RLKotor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRLKotor);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row NewData1Row() {
                return ((Data1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Data1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Data1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data1RowChanged != null)) {
                    this.Data1RowChanged(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data1RowChanging != null)) {
                    this.Data1RowChanging(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data1RowDeleted != null)) {
                    this.Data1RowDeleted(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data1RowDeleting != null)) {
                    this.Data1RowDeleting(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveData1Row(Data1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsKategoriSales ds = new DsKategoriSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Data1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Data2DataTable : global::System.Data.TypedTableBase<Data2Row> {
            
            private global::System.Data.DataColumn columnKota;
            
            private global::System.Data.DataColumn columntokoid;
            
            private global::System.Data.DataColumn columnnamatoko;
            
            private global::System.Data.DataColumn columnwilid;
            
            private global::System.Data.DataColumn columnkodesales;
            
            private global::System.Data.DataColumn columntglsuratjalan;
            
            private global::System.Data.DataColumn columnnodo;
            
            private global::System.Data.DataColumn columnnosuratjalan;
            
            private global::System.Data.DataColumn columnbarangid;
            
            private global::System.Data.DataColumn columnnamastok;
            
            private global::System.Data.DataColumn columnsatjual;
            
            private global::System.Data.DataColumn columnqtysj;
            
            private global::System.Data.DataColumn columnhrgjual;
            
            private global::System.Data.DataColumn columnstatuslaba;
            
            private global::System.Data.DataColumn columnkodegudang;
            
            private global::System.Data.DataColumn columnhpp;
            
            private global::System.Data.DataColumn columnjenis;
            
            private global::System.Data.DataColumn columnketerangan;
            
            private global::System.Data.DataColumn columnRowid;
            
            private global::System.Data.DataColumn columnKategoriSales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2DataTable() {
                this.TableName = "Data2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Data2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaColumn {
                get {
                    return this.columnKota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tokoidColumn {
                get {
                    return this.columntokoid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namatokoColumn {
                get {
                    return this.columnnamatoko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wilidColumn {
                get {
                    return this.columnwilid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kodesalesColumn {
                get {
                    return this.columnkodesales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tglsuratjalanColumn {
                get {
                    return this.columntglsuratjalan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nodoColumn {
                get {
                    return this.columnnodo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nosuratjalanColumn {
                get {
                    return this.columnnosuratjalan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn barangidColumn {
                get {
                    return this.columnbarangid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namastokColumn {
                get {
                    return this.columnnamastok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn satjualColumn {
                get {
                    return this.columnsatjual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtysjColumn {
                get {
                    return this.columnqtysj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hrgjualColumn {
                get {
                    return this.columnhrgjual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statuslabaColumn {
                get {
                    return this.columnstatuslaba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kodegudangColumn {
                get {
                    return this.columnkodegudang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hppColumn {
                get {
                    return this.columnhpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jenisColumn {
                get {
                    return this.columnjenis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keteranganColumn {
                get {
                    return this.columnketerangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowidColumn {
                get {
                    return this.columnRowid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KategoriSalesColumn {
                get {
                    return this.columnKategoriSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row this[int index] {
                get {
                    return ((Data2Row)(this.Rows[index]));
                }
            }
            
            public event Data2RowChangeEventHandler Data2RowChanging;
            
            public event Data2RowChangeEventHandler Data2RowChanged;
            
            public event Data2RowChangeEventHandler Data2RowDeleting;
            
            public event Data2RowChangeEventHandler Data2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddData2Row(Data2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row AddData2Row(
                        string Kota, 
                        string tokoid, 
                        string namatoko, 
                        string wilid, 
                        string kodesales, 
                        string tglsuratjalan, 
                        string nodo, 
                        string nosuratjalan, 
                        string barangid, 
                        string namastok, 
                        string satjual, 
                        string qtysj, 
                        string hrgjual, 
                        string statuslaba, 
                        string kodegudang, 
                        string hpp, 
                        string jenis, 
                        string keterangan, 
                        string Rowid, 
                        string KategoriSales) {
                Data2Row rowData2Row = ((Data2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Kota,
                        tokoid,
                        namatoko,
                        wilid,
                        kodesales,
                        tglsuratjalan,
                        nodo,
                        nosuratjalan,
                        barangid,
                        namastok,
                        satjual,
                        qtysj,
                        hrgjual,
                        statuslaba,
                        kodegudang,
                        hpp,
                        jenis,
                        keterangan,
                        Rowid,
                        KategoriSales};
                rowData2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowData2Row);
                return rowData2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Data2DataTable cln = ((Data2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Data2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKota = base.Columns["Kota"];
                this.columntokoid = base.Columns["tokoid"];
                this.columnnamatoko = base.Columns["namatoko"];
                this.columnwilid = base.Columns["wilid"];
                this.columnkodesales = base.Columns["kodesales"];
                this.columntglsuratjalan = base.Columns["tglsuratjalan"];
                this.columnnodo = base.Columns["nodo"];
                this.columnnosuratjalan = base.Columns["nosuratjalan"];
                this.columnbarangid = base.Columns["barangid"];
                this.columnnamastok = base.Columns["namastok"];
                this.columnsatjual = base.Columns["satjual"];
                this.columnqtysj = base.Columns["qtysj"];
                this.columnhrgjual = base.Columns["hrgjual"];
                this.columnstatuslaba = base.Columns["statuslaba"];
                this.columnkodegudang = base.Columns["kodegudang"];
                this.columnhpp = base.Columns["hpp"];
                this.columnjenis = base.Columns["jenis"];
                this.columnketerangan = base.Columns["keterangan"];
                this.columnRowid = base.Columns["Rowid"];
                this.columnKategoriSales = base.Columns["KategoriSales"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKota = new global::System.Data.DataColumn("Kota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKota);
                this.columntokoid = new global::System.Data.DataColumn("tokoid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntokoid);
                this.columnnamatoko = new global::System.Data.DataColumn("namatoko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnamatoko);
                this.columnwilid = new global::System.Data.DataColumn("wilid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwilid);
                this.columnkodesales = new global::System.Data.DataColumn("kodesales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkodesales);
                this.columntglsuratjalan = new global::System.Data.DataColumn("tglsuratjalan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntglsuratjalan);
                this.columnnodo = new global::System.Data.DataColumn("nodo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnodo);
                this.columnnosuratjalan = new global::System.Data.DataColumn("nosuratjalan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnosuratjalan);
                this.columnbarangid = new global::System.Data.DataColumn("barangid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbarangid);
                this.columnnamastok = new global::System.Data.DataColumn("namastok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnamastok);
                this.columnsatjual = new global::System.Data.DataColumn("satjual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsatjual);
                this.columnqtysj = new global::System.Data.DataColumn("qtysj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqtysj);
                this.columnhrgjual = new global::System.Data.DataColumn("hrgjual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhrgjual);
                this.columnstatuslaba = new global::System.Data.DataColumn("statuslaba", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatuslaba);
                this.columnkodegudang = new global::System.Data.DataColumn("kodegudang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkodegudang);
                this.columnhpp = new global::System.Data.DataColumn("hpp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhpp);
                this.columnjenis = new global::System.Data.DataColumn("jenis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjenis);
                this.columnketerangan = new global::System.Data.DataColumn("keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnketerangan);
                this.columnRowid = new global::System.Data.DataColumn("Rowid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowid);
                this.columnKategoriSales = new global::System.Data.DataColumn("KategoriSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKategoriSales);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row NewData2Row() {
                return ((Data2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Data2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Data2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data2RowChanged != null)) {
                    this.Data2RowChanged(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data2RowChanging != null)) {
                    this.Data2RowChanging(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data2RowDeleted != null)) {
                    this.Data2RowDeleted(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data2RowDeleting != null)) {
                    this.Data2RowDeleting(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveData2Row(Data2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsKategoriSales ds = new DsKategoriSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Data2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Data1Row : global::System.Data.DataRow {
            
            private Data1DataTable tableData1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData1 = ((Data1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kodegudang {
                get {
                    try {
                        return ((string)(this[this.tableData1.kodegudangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kodegudang\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.kodegudangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaDepo {
                get {
                    try {
                        return ((string)(this[this.tableData1.NamaDepoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaDepo\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.NamaDepoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistribusiBE {
                get {
                    try {
                        return ((string)(this[this.tableData1.DistribusiBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistribusiBE\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.DistribusiBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistribusiNonBE {
                get {
                    try {
                        return ((string)(this[this.tableData1.DistribusiNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistribusiNonBE\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.DistribusiNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RetailBE {
                get {
                    try {
                        return ((string)(this[this.tableData1.RetailBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetailBE\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.RetailBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RetailNonBE {
                get {
                    try {
                        return ((string)(this[this.tableData1.RetailNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetailNonBE\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.RetailNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BengkelBE {
                get {
                    try {
                        return ((string)(this[this.tableData1.BengkelBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BengkelBE\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.BengkelBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BengkelNonBE {
                get {
                    try {
                        return ((string)(this[this.tableData1.BengkelNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BengkelNonBE\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.BengkelNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BengkelLuar {
                get {
                    try {
                        return ((string)(this[this.tableData1.BengkelLuarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BengkelLuar\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.BengkelLuarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalBE {
                get {
                    try {
                        return ((string)(this[this.tableData1.TotalBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalBE\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.TotalBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalNonBE {
                get {
                    try {
                        return ((string)(this[this.tableData1.TotalNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalNonBE\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.TotalNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JasaService {
                get {
                    try {
                        return ((string)(this[this.tableData1.JasaServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JasaService\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.JasaServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RLKotor {
                get {
                    try {
                        return ((string)(this[this.tableData1.RLKotorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RLKotor\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.RLKotorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskodegudangNull() {
                return this.IsNull(this.tableData1.kodegudangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkodegudangNull() {
                this[this.tableData1.kodegudangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaDepoNull() {
                return this.IsNull(this.tableData1.NamaDepoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaDepoNull() {
                this[this.tableData1.NamaDepoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistribusiBENull() {
                return this.IsNull(this.tableData1.DistribusiBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistribusiBENull() {
                this[this.tableData1.DistribusiBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistribusiNonBENull() {
                return this.IsNull(this.tableData1.DistribusiNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistribusiNonBENull() {
                this[this.tableData1.DistribusiNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetailBENull() {
                return this.IsNull(this.tableData1.RetailBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetailBENull() {
                this[this.tableData1.RetailBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetailNonBENull() {
                return this.IsNull(this.tableData1.RetailNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetailNonBENull() {
                this[this.tableData1.RetailNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBengkelBENull() {
                return this.IsNull(this.tableData1.BengkelBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBengkelBENull() {
                this[this.tableData1.BengkelBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBengkelNonBENull() {
                return this.IsNull(this.tableData1.BengkelNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBengkelNonBENull() {
                this[this.tableData1.BengkelNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBengkelLuarNull() {
                return this.IsNull(this.tableData1.BengkelLuarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBengkelLuarNull() {
                this[this.tableData1.BengkelLuarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalBENull() {
                return this.IsNull(this.tableData1.TotalBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalBENull() {
                this[this.tableData1.TotalBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNonBENull() {
                return this.IsNull(this.tableData1.TotalNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNonBENull() {
                this[this.tableData1.TotalNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJasaServiceNull() {
                return this.IsNull(this.tableData1.JasaServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJasaServiceNull() {
                this[this.tableData1.JasaServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRLKotorNull() {
                return this.IsNull(this.tableData1.RLKotorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRLKotorNull() {
                this[this.tableData1.RLKotorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Data2Row : global::System.Data.DataRow {
            
            private Data2DataTable tableData2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData2 = ((Data2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kota {
                get {
                    try {
                        return ((string)(this[this.tableData2.KotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kota\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.KotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tokoid {
                get {
                    try {
                        return ((string)(this[this.tableData2.tokoidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tokoid\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.tokoidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string namatoko {
                get {
                    try {
                        return ((string)(this[this.tableData2.namatokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'namatoko\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.namatokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wilid {
                get {
                    try {
                        return ((string)(this[this.tableData2.wilidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'wilid\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.wilidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kodesales {
                get {
                    try {
                        return ((string)(this[this.tableData2.kodesalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kodesales\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.kodesalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tglsuratjalan {
                get {
                    try {
                        return ((string)(this[this.tableData2.tglsuratjalanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tglsuratjalan\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.tglsuratjalanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nodo {
                get {
                    try {
                        return ((string)(this[this.tableData2.nodoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nodo\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.nodoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nosuratjalan {
                get {
                    try {
                        return ((string)(this[this.tableData2.nosuratjalanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nosuratjalan\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.nosuratjalanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string barangid {
                get {
                    try {
                        return ((string)(this[this.tableData2.barangidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'barangid\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.barangidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string namastok {
                get {
                    try {
                        return ((string)(this[this.tableData2.namastokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'namastok\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.namastokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string satjual {
                get {
                    try {
                        return ((string)(this[this.tableData2.satjualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'satjual\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.satjualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string qtysj {
                get {
                    try {
                        return ((string)(this[this.tableData2.qtysjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qtysj\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.qtysjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hrgjual {
                get {
                    try {
                        return ((string)(this[this.tableData2.hrgjualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hrgjual\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.hrgjualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string statuslaba {
                get {
                    try {
                        return ((string)(this[this.tableData2.statuslabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statuslaba\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.statuslabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kodegudang {
                get {
                    try {
                        return ((string)(this[this.tableData2.kodegudangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kodegudang\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.kodegudangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hpp {
                get {
                    try {
                        return ((string)(this[this.tableData2.hppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hpp\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.hppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jenis {
                get {
                    try {
                        return ((string)(this[this.tableData2.jenisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jenis\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.jenisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keterangan {
                get {
                    try {
                        return ((string)(this[this.tableData2.keteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'keterangan\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.keteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rowid {
                get {
                    try {
                        return ((string)(this[this.tableData2.RowidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rowid\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.RowidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KategoriSales {
                get {
                    try {
                        return ((string)(this[this.tableData2.KategoriSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KategoriSales\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.KategoriSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKotaNull() {
                return this.IsNull(this.tableData2.KotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKotaNull() {
                this[this.tableData2.KotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstokoidNull() {
                return this.IsNull(this.tableData2.tokoidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettokoidNull() {
                this[this.tableData2.tokoidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnamatokoNull() {
                return this.IsNull(this.tableData2.namatokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnamatokoNull() {
                this[this.tableData2.namatokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswilidNull() {
                return this.IsNull(this.tableData2.wilidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwilidNull() {
                this[this.tableData2.wilidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskodesalesNull() {
                return this.IsNull(this.tableData2.kodesalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkodesalesNull() {
                this[this.tableData2.kodesalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstglsuratjalanNull() {
                return this.IsNull(this.tableData2.tglsuratjalanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettglsuratjalanNull() {
                this[this.tableData2.tglsuratjalanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnodoNull() {
                return this.IsNull(this.tableData2.nodoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnodoNull() {
                this[this.tableData2.nodoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnosuratjalanNull() {
                return this.IsNull(this.tableData2.nosuratjalanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnosuratjalanNull() {
                this[this.tableData2.nosuratjalanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbarangidNull() {
                return this.IsNull(this.tableData2.barangidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbarangidNull() {
                this[this.tableData2.barangidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnamastokNull() {
                return this.IsNull(this.tableData2.namastokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnamastokNull() {
                this[this.tableData2.namastokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssatjualNull() {
                return this.IsNull(this.tableData2.satjualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsatjualNull() {
                this[this.tableData2.satjualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtysjNull() {
                return this.IsNull(this.tableData2.qtysjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtysjNull() {
                this[this.tableData2.qtysjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshrgjualNull() {
                return this.IsNull(this.tableData2.hrgjualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethrgjualNull() {
                this[this.tableData2.hrgjualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatuslabaNull() {
                return this.IsNull(this.tableData2.statuslabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatuslabaNull() {
                this[this.tableData2.statuslabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskodegudangNull() {
                return this.IsNull(this.tableData2.kodegudangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkodegudangNull() {
                this[this.tableData2.kodegudangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshppNull() {
                return this.IsNull(this.tableData2.hppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethppNull() {
                this[this.tableData2.hppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjenisNull() {
                return this.IsNull(this.tableData2.jenisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjenisNull() {
                this[this.tableData2.jenisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsketeranganNull() {
                return this.IsNull(this.tableData2.keteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetketeranganNull() {
                this[this.tableData2.keteranganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowidNull() {
                return this.IsNull(this.tableData2.RowidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowidNull() {
                this[this.tableData2.RowidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKategoriSalesNull() {
                return this.IsNull(this.tableData2.KategoriSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKategoriSalesNull() {
                this[this.tableData2.KategoriSalesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Data1RowChangeEvent : global::System.EventArgs {
            
            private Data1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1RowChangeEvent(Data1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Data2RowChangeEvent : global::System.EventArgs {
            
            private Data2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2RowChangeEvent(Data2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591