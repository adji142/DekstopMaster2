//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8825
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Trading.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsOpname")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsOpname : global::System.Data.DataSet {
        
        private DataDataTable tableData;
        
        private Data1DataTable tableData1;
        
        private SamplingDataTable tableSampling;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsOpname() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsOpname(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                if ((ds.Tables["Data1"] != null)) {
                    base.Tables.Add(new Data1DataTable(ds.Tables["Data1"]));
                }
                if ((ds.Tables["Sampling"] != null)) {
                    base.Tables.Add(new SamplingDataTable(ds.Tables["Sampling"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data1DataTable Data1 {
            get {
                return this.tableData1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SamplingDataTable Sampling {
            get {
                return this.tableSampling;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsOpname cln = ((dsOpname)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                if ((ds.Tables["Data1"] != null)) {
                    base.Tables.Add(new Data1DataTable(ds.Tables["Data1"]));
                }
                if ((ds.Tables["Sampling"] != null)) {
                    base.Tables.Add(new SamplingDataTable(ds.Tables["Sampling"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
            this.tableData1 = ((Data1DataTable)(base.Tables["Data1"]));
            if ((initTable == true)) {
                if ((this.tableData1 != null)) {
                    this.tableData1.InitVars();
                }
            }
            this.tableSampling = ((SamplingDataTable)(base.Tables["Sampling"]));
            if ((initTable == true)) {
                if ((this.tableSampling != null)) {
                    this.tableSampling.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsOpname";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsOpname.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
            this.tableData1 = new Data1DataTable();
            base.Tables.Add(this.tableData1);
            this.tableSampling = new SamplingDataTable();
            base.Tables.Add(this.tableSampling);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSampling() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsOpname ds = new dsOpname();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        
        public delegate void Data1RowChangeEventHandler(object sender, Data1RowChangeEvent e);
        
        public delegate void SamplingRowChangeEventHandler(object sender, SamplingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.TypedTableBase<DataRow> {
            
            private global::System.Data.DataColumn columnNamaStok;
            
            private global::System.Data.DataColumn columnStatusPasif;
            
            private global::System.Data.DataColumn columnKodeBarang;
            
            private global::System.Data.DataColumn columnTglOpname;
            
            private global::System.Data.DataColumn columnTglHitung1;
            
            private global::System.Data.DataColumn columnTglHitung2;
            
            private global::System.Data.DataColumn columnTglHitung3;
            
            private global::System.Data.DataColumn columnHPP;
            
            private global::System.Data.DataColumn columnUser;
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnTotal1;
            
            private global::System.Data.DataColumn columnTotal2;
            
            private global::System.Data.DataColumn columnTotal3;
            
            private global::System.Data.DataColumn columnRowID1;
            
            private global::System.Data.DataColumn columnRowID2;
            
            private global::System.Data.DataColumn columnRowID3;
            
            private global::System.Data.DataColumn columnPenghitung1;
            
            private global::System.Data.DataColumn columnPenghitung2;
            
            private global::System.Data.DataColumn columnPenghitung3;
            
            private global::System.Data.DataColumn columnForm1;
            
            private global::System.Data.DataColumn columnForm2;
            
            private global::System.Data.DataColumn columnForm3;
            
            private global::System.Data.DataColumn columnQtyAwal;
            
            private global::System.Data.DataColumn columnSatJual;
            
            private global::System.Data.DataColumn columnKodeRak;
            
            private global::System.Data.DataColumn columnLokasi;
            
            private global::System.Data.DataColumn columnBaik1;
            
            private global::System.Data.DataColumn columnCacat1;
            
            private global::System.Data.DataColumn columnRusak1;
            
            private global::System.Data.DataColumn columnBaik2;
            
            private global::System.Data.DataColumn columnCacat2;
            
            private global::System.Data.DataColumn columnRusak2;
            
            private global::System.Data.DataColumn columnBaik3;
            
            private global::System.Data.DataColumn columnCacat3;
            
            private global::System.Data.DataColumn columnRusak3;
            
            private global::System.Data.DataColumn columnBaik;
            
            private global::System.Data.DataColumn columnCacat;
            
            private global::System.Data.DataColumn columnRusak;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnAVGJual;
            
            private global::System.Data.DataColumn columnMaximum;
            
            private global::System.Data.DataColumn columnMinimum;
            
            private global::System.Data.DataColumn columnSatuan;
            
            private global::System.Data.DataColumn columnQtyGIT;
            
            private global::System.Data.DataColumn columnQtyGudang;
            
            private global::System.Data.DataColumn columnRpGIT;
            
            private global::System.Data.DataColumn columnRak;
            
            private global::System.Data.DataColumn columnQtyAkhir;
            
            private global::System.Data.DataColumn columnKeterangan;
            
            private global::System.Data.DataColumn columnKodeRak1;
            
            private global::System.Data.DataColumn columnKodeRak2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStokColumn {
                get {
                    return this.columnNamaStok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusPasifColumn {
                get {
                    return this.columnStatusPasif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeBarangColumn {
                get {
                    return this.columnKodeBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglOpnameColumn {
                get {
                    return this.columnTglOpname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglHitung1Column {
                get {
                    return this.columnTglHitung1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglHitung2Column {
                get {
                    return this.columnTglHitung2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglHitung3Column {
                get {
                    return this.columnTglHitung3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HPPColumn {
                get {
                    return this.columnHPP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserColumn {
                get {
                    return this.columnUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total1Column {
                get {
                    return this.columnTotal1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total2Column {
                get {
                    return this.columnTotal2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total3Column {
                get {
                    return this.columnTotal3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowID1Column {
                get {
                    return this.columnRowID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowID2Column {
                get {
                    return this.columnRowID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowID3Column {
                get {
                    return this.columnRowID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Penghitung1Column {
                get {
                    return this.columnPenghitung1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Penghitung2Column {
                get {
                    return this.columnPenghitung2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Penghitung3Column {
                get {
                    return this.columnPenghitung3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Form1Column {
                get {
                    return this.columnForm1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Form2Column {
                get {
                    return this.columnForm2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Form3Column {
                get {
                    return this.columnForm3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyAwalColumn {
                get {
                    return this.columnQtyAwal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatJualColumn {
                get {
                    return this.columnSatJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeRakColumn {
                get {
                    return this.columnKodeRak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LokasiColumn {
                get {
                    return this.columnLokasi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Baik1Column {
                get {
                    return this.columnBaik1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cacat1Column {
                get {
                    return this.columnCacat1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rusak1Column {
                get {
                    return this.columnRusak1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Baik2Column {
                get {
                    return this.columnBaik2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cacat2Column {
                get {
                    return this.columnCacat2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rusak2Column {
                get {
                    return this.columnRusak2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Baik3Column {
                get {
                    return this.columnBaik3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cacat3Column {
                get {
                    return this.columnCacat3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rusak3Column {
                get {
                    return this.columnRusak3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaikColumn {
                get {
                    return this.columnBaik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CacatColumn {
                get {
                    return this.columnCacat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RusakColumn {
                get {
                    return this.columnRusak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVGJualColumn {
                get {
                    return this.columnAVGJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaximumColumn {
                get {
                    return this.columnMaximum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinimumColumn {
                get {
                    return this.columnMinimum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatuanColumn {
                get {
                    return this.columnSatuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyGITColumn {
                get {
                    return this.columnQtyGIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyGudangColumn {
                get {
                    return this.columnQtyGudang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpGITColumn {
                get {
                    return this.columnRpGIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RakColumn {
                get {
                    return this.columnRak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyAkhirColumn {
                get {
                    return this.columnQtyAkhir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeteranganColumn {
                get {
                    return this.columnKeterangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeRak1Column {
                get {
                    return this.columnKodeRak1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeRak2Column {
                get {
                    return this.columnKodeRak2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            
            public event DataRowChangeEventHandler DataRowChanging;
            
            public event DataRowChangeEventHandler DataRowChanged;
            
            public event DataRowChangeEventHandler DataRowDeleting;
            
            public event DataRowChangeEventHandler DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow AddDataRow(
                        string NamaStok, 
                        string StatusPasif, 
                        string KodeBarang, 
                        System.DateTime TglOpname, 
                        System.DateTime TglHitung1, 
                        System.DateTime TglHitung2, 
                        System.DateTime TglHitung3, 
                        int HPP, 
                        string User, 
                        string RowID, 
                        int Total1, 
                        int Total2, 
                        int Total3, 
                        string RowID1, 
                        string RowID2, 
                        string RowID3, 
                        string Penghitung1, 
                        string Penghitung2, 
                        string Penghitung3, 
                        string Form1, 
                        string Form2, 
                        string Form3, 
                        int QtyAwal, 
                        string SatJual, 
                        string KodeRak, 
                        string Lokasi, 
                        int Baik1, 
                        int Cacat1, 
                        int Rusak1, 
                        int Baik2, 
                        int Cacat2, 
                        int Rusak2, 
                        int Baik3, 
                        int Cacat3, 
                        int Rusak3, 
                        string Baik, 
                        string Cacat, 
                        string Rusak, 
                        string Total, 
                        string AVGJual, 
                        string Maximum, 
                        string Minimum, 
                        string Satuan, 
                        string QtyGIT, 
                        string QtyGudang, 
                        double RpGIT, 
                        string Rak, 
                        string QtyAkhir, 
                        string Keterangan, 
                        string KodeRak1, 
                        string KodeRak2) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaStok,
                        StatusPasif,
                        KodeBarang,
                        TglOpname,
                        TglHitung1,
                        TglHitung2,
                        TglHitung3,
                        HPP,
                        User,
                        RowID,
                        Total1,
                        Total2,
                        Total3,
                        RowID1,
                        RowID2,
                        RowID3,
                        Penghitung1,
                        Penghitung2,
                        Penghitung3,
                        Form1,
                        Form2,
                        Form3,
                        QtyAwal,
                        SatJual,
                        KodeRak,
                        Lokasi,
                        Baik1,
                        Cacat1,
                        Rusak1,
                        Baik2,
                        Cacat2,
                        Rusak2,
                        Baik3,
                        Cacat3,
                        Rusak3,
                        Baik,
                        Cacat,
                        Rusak,
                        Total,
                        AVGJual,
                        Maximum,
                        Minimum,
                        Satuan,
                        QtyGIT,
                        QtyGudang,
                        RpGIT,
                        Rak,
                        QtyAkhir,
                        Keterangan,
                        KodeRak1,
                        KodeRak2};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaStok = base.Columns["NamaStok"];
                this.columnStatusPasif = base.Columns["StatusPasif"];
                this.columnKodeBarang = base.Columns["KodeBarang"];
                this.columnTglOpname = base.Columns["TglOpname"];
                this.columnTglHitung1 = base.Columns["TglHitung1"];
                this.columnTglHitung2 = base.Columns["TglHitung2"];
                this.columnTglHitung3 = base.Columns["TglHitung3"];
                this.columnHPP = base.Columns["HPP"];
                this.columnUser = base.Columns["User"];
                this.columnRowID = base.Columns["RowID"];
                this.columnTotal1 = base.Columns["Total1"];
                this.columnTotal2 = base.Columns["Total2"];
                this.columnTotal3 = base.Columns["Total3"];
                this.columnRowID1 = base.Columns["RowID1"];
                this.columnRowID2 = base.Columns["RowID2"];
                this.columnRowID3 = base.Columns["RowID3"];
                this.columnPenghitung1 = base.Columns["Penghitung1"];
                this.columnPenghitung2 = base.Columns["Penghitung2"];
                this.columnPenghitung3 = base.Columns["Penghitung3"];
                this.columnForm1 = base.Columns["Form1"];
                this.columnForm2 = base.Columns["Form2"];
                this.columnForm3 = base.Columns["Form3"];
                this.columnQtyAwal = base.Columns["QtyAwal"];
                this.columnSatJual = base.Columns["SatJual"];
                this.columnKodeRak = base.Columns["KodeRak"];
                this.columnLokasi = base.Columns["Lokasi"];
                this.columnBaik1 = base.Columns["Baik1"];
                this.columnCacat1 = base.Columns["Cacat1"];
                this.columnRusak1 = base.Columns["Rusak1"];
                this.columnBaik2 = base.Columns["Baik2"];
                this.columnCacat2 = base.Columns["Cacat2"];
                this.columnRusak2 = base.Columns["Rusak2"];
                this.columnBaik3 = base.Columns["Baik3"];
                this.columnCacat3 = base.Columns["Cacat3"];
                this.columnRusak3 = base.Columns["Rusak3"];
                this.columnBaik = base.Columns["Baik"];
                this.columnCacat = base.Columns["Cacat"];
                this.columnRusak = base.Columns["Rusak"];
                this.columnTotal = base.Columns["Total"];
                this.columnAVGJual = base.Columns["AVGJual"];
                this.columnMaximum = base.Columns["Maximum"];
                this.columnMinimum = base.Columns["Minimum"];
                this.columnSatuan = base.Columns["Satuan"];
                this.columnQtyGIT = base.Columns["QtyGIT"];
                this.columnQtyGudang = base.Columns["QtyGudang"];
                this.columnRpGIT = base.Columns["RpGIT"];
                this.columnRak = base.Columns["Rak"];
                this.columnQtyAkhir = base.Columns["QtyAkhir"];
                this.columnKeterangan = base.Columns["Keterangan"];
                this.columnKodeRak1 = base.Columns["KodeRak1"];
                this.columnKodeRak2 = base.Columns["KodeRak2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaStok = new global::System.Data.DataColumn("NamaStok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStok);
                this.columnStatusPasif = new global::System.Data.DataColumn("StatusPasif", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusPasif);
                this.columnKodeBarang = new global::System.Data.DataColumn("KodeBarang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeBarang);
                this.columnTglOpname = new global::System.Data.DataColumn("TglOpname", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglOpname);
                this.columnTglHitung1 = new global::System.Data.DataColumn("TglHitung1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglHitung1);
                this.columnTglHitung2 = new global::System.Data.DataColumn("TglHitung2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglHitung2);
                this.columnTglHitung3 = new global::System.Data.DataColumn("TglHitung3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglHitung3);
                this.columnHPP = new global::System.Data.DataColumn("HPP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHPP);
                this.columnUser = new global::System.Data.DataColumn("User", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser);
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnTotal1 = new global::System.Data.DataColumn("Total1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal1);
                this.columnTotal2 = new global::System.Data.DataColumn("Total2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal2);
                this.columnTotal3 = new global::System.Data.DataColumn("Total3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal3);
                this.columnRowID1 = new global::System.Data.DataColumn("RowID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID1);
                this.columnRowID2 = new global::System.Data.DataColumn("RowID2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID2);
                this.columnRowID3 = new global::System.Data.DataColumn("RowID3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID3);
                this.columnPenghitung1 = new global::System.Data.DataColumn("Penghitung1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenghitung1);
                this.columnPenghitung2 = new global::System.Data.DataColumn("Penghitung2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenghitung2);
                this.columnPenghitung3 = new global::System.Data.DataColumn("Penghitung3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenghitung3);
                this.columnForm1 = new global::System.Data.DataColumn("Form1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm1);
                this.columnForm2 = new global::System.Data.DataColumn("Form2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm2);
                this.columnForm3 = new global::System.Data.DataColumn("Form3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForm3);
                this.columnQtyAwal = new global::System.Data.DataColumn("QtyAwal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyAwal);
                this.columnSatJual = new global::System.Data.DataColumn("SatJual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatJual);
                this.columnKodeRak = new global::System.Data.DataColumn("KodeRak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeRak);
                this.columnLokasi = new global::System.Data.DataColumn("Lokasi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLokasi);
                this.columnBaik1 = new global::System.Data.DataColumn("Baik1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaik1);
                this.columnCacat1 = new global::System.Data.DataColumn("Cacat1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacat1);
                this.columnRusak1 = new global::System.Data.DataColumn("Rusak1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRusak1);
                this.columnBaik2 = new global::System.Data.DataColumn("Baik2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaik2);
                this.columnCacat2 = new global::System.Data.DataColumn("Cacat2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacat2);
                this.columnRusak2 = new global::System.Data.DataColumn("Rusak2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRusak2);
                this.columnBaik3 = new global::System.Data.DataColumn("Baik3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaik3);
                this.columnCacat3 = new global::System.Data.DataColumn("Cacat3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacat3);
                this.columnRusak3 = new global::System.Data.DataColumn("Rusak3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRusak3);
                this.columnBaik = new global::System.Data.DataColumn("Baik", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaik);
                this.columnCacat = new global::System.Data.DataColumn("Cacat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCacat);
                this.columnRusak = new global::System.Data.DataColumn("Rusak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRusak);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnAVGJual = new global::System.Data.DataColumn("AVGJual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGJual);
                this.columnMaximum = new global::System.Data.DataColumn("Maximum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaximum);
                this.columnMinimum = new global::System.Data.DataColumn("Minimum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimum);
                this.columnSatuan = new global::System.Data.DataColumn("Satuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatuan);
                this.columnQtyGIT = new global::System.Data.DataColumn("QtyGIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyGIT);
                this.columnQtyGudang = new global::System.Data.DataColumn("QtyGudang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyGudang);
                this.columnRpGIT = new global::System.Data.DataColumn("RpGIT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpGIT);
                this.columnRak = new global::System.Data.DataColumn("Rak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRak);
                this.columnQtyAkhir = new global::System.Data.DataColumn("QtyAkhir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyAkhir);
                this.columnKeterangan = new global::System.Data.DataColumn("Keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeterangan);
                this.columnKodeRak1 = new global::System.Data.DataColumn("KodeRak1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeRak1);
                this.columnKodeRak2 = new global::System.Data.DataColumn("KodeRak2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeRak2);
                this.columnRpGIT.DefaultValue = ((double)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsOpname ds = new dsOpname();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Data1DataTable : global::System.Data.TypedTableBase<Data1Row> {
            
            private global::System.Data.DataColumn columnNamaStok;
            
            private global::System.Data.DataColumn columnTglOpname;
            
            private global::System.Data.DataColumn columnQtyAwal;
            
            private global::System.Data.DataColumn columnQtyJual;
            
            private global::System.Data.DataColumn columnQtyBeli;
            
            private global::System.Data.DataColumn columnQtyRetJual;
            
            private global::System.Data.DataColumn columnQtyRetBeli;
            
            private global::System.Data.DataColumn columnQtyMutasi;
            
            private global::System.Data.DataColumn columnQtyKoreksi;
            
            private global::System.Data.DataColumn columnQtyAntarGudang;
            
            private global::System.Data.DataColumn columnQtySelisih;
            
            private global::System.Data.DataColumn columnQtyKons;
            
            private global::System.Data.DataColumn columnKodeGudang;
            
            private global::System.Data.DataColumn columnBarangID;
            
            private global::System.Data.DataColumn columnStok;
            
            private global::System.Data.DataColumn columnQTyMutasiMasuk;
            
            private global::System.Data.DataColumn columnQtyMutasiKeluar;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnTglNota;
            
            private global::System.Data.DataColumn columnQtyAkhir;
            
            private global::System.Data.DataColumn columnKoreksiMasuk;
            
            private global::System.Data.DataColumn columnKoreksiKeluar;
            
            private global::System.Data.DataColumn columnRpStok;
            
            private global::System.Data.DataColumn columnNoNota;
            
            private global::System.Data.DataColumn columnRak;
            
            private global::System.Data.DataColumn columnNRpAwal;
            
            private global::System.Data.DataColumn columnNRpAkhir;
            
            private global::System.Data.DataColumn columnKodeBarang;
            
            private global::System.Data.DataColumn columnSatuan;
            
            private global::System.Data.DataColumn columnQtyOrder;
            
            private global::System.Data.DataColumn columnTglHistory;
            
            private global::System.Data.DataColumn columnAdjOpname;
            
            private global::System.Data.DataColumn columnQtyGIT;
            
            private global::System.Data.DataColumn columnQtyGudang;
            
            private global::System.Data.DataColumn columnRpGIT;
            
            private global::System.Data.DataColumn columnDataColumn1;
            
            private global::System.Data.DataColumn columnQtyKorBeli;
            
            private global::System.Data.DataColumn columnQtyKorRetBeli;
            
            private global::System.Data.DataColumn columnQtyKorJual;
            
            private global::System.Data.DataColumn columnQtyKorRetJual;
            
            private global::System.Data.DataColumn columnAdjClosing;
            
            private global::System.Data.DataColumn columnQtyPinjam;
            
            private global::System.Data.DataColumn columnQtyBuffer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1DataTable() {
                this.TableName = "Data1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Data1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStokColumn {
                get {
                    return this.columnNamaStok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglOpnameColumn {
                get {
                    return this.columnTglOpname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyAwalColumn {
                get {
                    return this.columnQtyAwal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyJualColumn {
                get {
                    return this.columnQtyJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyBeliColumn {
                get {
                    return this.columnQtyBeli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyRetJualColumn {
                get {
                    return this.columnQtyRetJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyRetBeliColumn {
                get {
                    return this.columnQtyRetBeli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyMutasiColumn {
                get {
                    return this.columnQtyMutasi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyKoreksiColumn {
                get {
                    return this.columnQtyKoreksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyAntarGudangColumn {
                get {
                    return this.columnQtyAntarGudang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtySelisihColumn {
                get {
                    return this.columnQtySelisih;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyKonsColumn {
                get {
                    return this.columnQtyKons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeGudangColumn {
                get {
                    return this.columnKodeGudang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarangIDColumn {
                get {
                    return this.columnBarangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StokColumn {
                get {
                    return this.columnStok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTyMutasiMasukColumn {
                get {
                    return this.columnQTyMutasiMasuk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyMutasiKeluarColumn {
                get {
                    return this.columnQtyMutasiKeluar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglNotaColumn {
                get {
                    return this.columnTglNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyAkhirColumn {
                get {
                    return this.columnQtyAkhir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KoreksiMasukColumn {
                get {
                    return this.columnKoreksiMasuk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KoreksiKeluarColumn {
                get {
                    return this.columnKoreksiKeluar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpStokColumn {
                get {
                    return this.columnRpStok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoNotaColumn {
                get {
                    return this.columnNoNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RakColumn {
                get {
                    return this.columnRak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NRpAwalColumn {
                get {
                    return this.columnNRpAwal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NRpAkhirColumn {
                get {
                    return this.columnNRpAkhir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeBarangColumn {
                get {
                    return this.columnKodeBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatuanColumn {
                get {
                    return this.columnSatuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyOrderColumn {
                get {
                    return this.columnQtyOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglHistoryColumn {
                get {
                    return this.columnTglHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjOpnameColumn {
                get {
                    return this.columnAdjOpname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyGITColumn {
                get {
                    return this.columnQtyGIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyGudangColumn {
                get {
                    return this.columnQtyGudang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpGITColumn {
                get {
                    return this.columnRpGIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn1Column {
                get {
                    return this.columnDataColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyKorBeliColumn {
                get {
                    return this.columnQtyKorBeli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyKorRetBeliColumn {
                get {
                    return this.columnQtyKorRetBeli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyKorJualColumn {
                get {
                    return this.columnQtyKorJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyKorRetJualColumn {
                get {
                    return this.columnQtyKorRetJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjClosingColumn {
                get {
                    return this.columnAdjClosing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyPinjamColumn {
                get {
                    return this.columnQtyPinjam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyBufferColumn {
                get {
                    return this.columnQtyBuffer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row this[int index] {
                get {
                    return ((Data1Row)(this.Rows[index]));
                }
            }
            
            public event Data1RowChangeEventHandler Data1RowChanging;
            
            public event Data1RowChangeEventHandler Data1RowChanged;
            
            public event Data1RowChangeEventHandler Data1RowDeleting;
            
            public event Data1RowChangeEventHandler Data1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddData1Row(Data1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row AddData1Row(
                        string NamaStok, 
                        string TglOpname, 
                        int QtyAwal, 
                        string QtyJual, 
                        string QtyBeli, 
                        string QtyRetJual, 
                        string QtyRetBeli, 
                        string QtyMutasi, 
                        string QtyKoreksi, 
                        string QtyAntarGudang, 
                        string QtySelisih, 
                        string QtyKons, 
                        string KodeGudang, 
                        string BarangID, 
                        string Stok, 
                        string QTyMutasiMasuk, 
                        string QtyMutasiKeluar, 
                        string Customer, 
                        System.DateTime TglNota, 
                        string QtyAkhir, 
                        string KoreksiMasuk, 
                        string KoreksiKeluar, 
                        int RpStok, 
                        string NoNota, 
                        string Rak, 
                        string NRpAwal, 
                        string NRpAkhir, 
                        string KodeBarang, 
                        string Satuan, 
                        string QtyOrder, 
                        string TglHistory, 
                        string AdjOpname, 
                        string QtyGIT, 
                        string QtyGudang, 
                        string RpGIT, 
                        string DataColumn1, 
                        string QtyKorBeli, 
                        string QtyKorRetBeli, 
                        string QtyKorJual, 
                        string QtyKorRetJual, 
                        string AdjClosing, 
                        string QtyPinjam, 
                        string QtyBuffer) {
                Data1Row rowData1Row = ((Data1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaStok,
                        TglOpname,
                        QtyAwal,
                        QtyJual,
                        QtyBeli,
                        QtyRetJual,
                        QtyRetBeli,
                        QtyMutasi,
                        QtyKoreksi,
                        QtyAntarGudang,
                        QtySelisih,
                        QtyKons,
                        KodeGudang,
                        BarangID,
                        Stok,
                        QTyMutasiMasuk,
                        QtyMutasiKeluar,
                        Customer,
                        TglNota,
                        QtyAkhir,
                        KoreksiMasuk,
                        KoreksiKeluar,
                        RpStok,
                        NoNota,
                        Rak,
                        NRpAwal,
                        NRpAkhir,
                        KodeBarang,
                        Satuan,
                        QtyOrder,
                        TglHistory,
                        AdjOpname,
                        QtyGIT,
                        QtyGudang,
                        RpGIT,
                        DataColumn1,
                        QtyKorBeli,
                        QtyKorRetBeli,
                        QtyKorJual,
                        QtyKorRetJual,
                        AdjClosing,
                        QtyPinjam,
                        QtyBuffer};
                rowData1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowData1Row);
                return rowData1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Data1DataTable cln = ((Data1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Data1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaStok = base.Columns["NamaStok"];
                this.columnTglOpname = base.Columns["TglOpname"];
                this.columnQtyAwal = base.Columns["QtyAwal"];
                this.columnQtyJual = base.Columns["QtyJual"];
                this.columnQtyBeli = base.Columns["QtyBeli"];
                this.columnQtyRetJual = base.Columns["QtyRetJual"];
                this.columnQtyRetBeli = base.Columns["QtyRetBeli"];
                this.columnQtyMutasi = base.Columns["QtyMutasi"];
                this.columnQtyKoreksi = base.Columns["QtyKoreksi"];
                this.columnQtyAntarGudang = base.Columns["QtyAntarGudang"];
                this.columnQtySelisih = base.Columns["QtySelisih"];
                this.columnQtyKons = base.Columns["QtyKons"];
                this.columnKodeGudang = base.Columns["KodeGudang"];
                this.columnBarangID = base.Columns["BarangID"];
                this.columnStok = base.Columns["Stok"];
                this.columnQTyMutasiMasuk = base.Columns["QTyMutasiMasuk"];
                this.columnQtyMutasiKeluar = base.Columns["QtyMutasiKeluar"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnTglNota = base.Columns["TglNota"];
                this.columnQtyAkhir = base.Columns["QtyAkhir"];
                this.columnKoreksiMasuk = base.Columns["KoreksiMasuk"];
                this.columnKoreksiKeluar = base.Columns["KoreksiKeluar"];
                this.columnRpStok = base.Columns["RpStok"];
                this.columnNoNota = base.Columns["NoNota"];
                this.columnRak = base.Columns["Rak"];
                this.columnNRpAwal = base.Columns["NRpAwal"];
                this.columnNRpAkhir = base.Columns["NRpAkhir"];
                this.columnKodeBarang = base.Columns["KodeBarang"];
                this.columnSatuan = base.Columns["Satuan"];
                this.columnQtyOrder = base.Columns["QtyOrder"];
                this.columnTglHistory = base.Columns["TglHistory"];
                this.columnAdjOpname = base.Columns["AdjOpname"];
                this.columnQtyGIT = base.Columns["QtyGIT"];
                this.columnQtyGudang = base.Columns["QtyGudang"];
                this.columnRpGIT = base.Columns["RpGIT"];
                this.columnDataColumn1 = base.Columns["DataColumn1"];
                this.columnQtyKorBeli = base.Columns["QtyKorBeli"];
                this.columnQtyKorRetBeli = base.Columns["QtyKorRetBeli"];
                this.columnQtyKorJual = base.Columns["QtyKorJual"];
                this.columnQtyKorRetJual = base.Columns["QtyKorRetJual"];
                this.columnAdjClosing = base.Columns["AdjClosing"];
                this.columnQtyPinjam = base.Columns["QtyPinjam"];
                this.columnQtyBuffer = base.Columns["QtyBuffer"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaStok = new global::System.Data.DataColumn("NamaStok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStok);
                this.columnTglOpname = new global::System.Data.DataColumn("TglOpname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglOpname);
                this.columnQtyAwal = new global::System.Data.DataColumn("QtyAwal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyAwal);
                this.columnQtyJual = new global::System.Data.DataColumn("QtyJual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyJual);
                this.columnQtyBeli = new global::System.Data.DataColumn("QtyBeli", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyBeli);
                this.columnQtyRetJual = new global::System.Data.DataColumn("QtyRetJual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyRetJual);
                this.columnQtyRetBeli = new global::System.Data.DataColumn("QtyRetBeli", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyRetBeli);
                this.columnQtyMutasi = new global::System.Data.DataColumn("QtyMutasi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyMutasi);
                this.columnQtyKoreksi = new global::System.Data.DataColumn("QtyKoreksi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyKoreksi);
                this.columnQtyAntarGudang = new global::System.Data.DataColumn("QtyAntarGudang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyAntarGudang);
                this.columnQtySelisih = new global::System.Data.DataColumn("QtySelisih", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtySelisih);
                this.columnQtyKons = new global::System.Data.DataColumn("QtyKons", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyKons);
                this.columnKodeGudang = new global::System.Data.DataColumn("KodeGudang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeGudang);
                this.columnBarangID = new global::System.Data.DataColumn("BarangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarangID);
                this.columnStok = new global::System.Data.DataColumn("Stok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStok);
                this.columnQTyMutasiMasuk = new global::System.Data.DataColumn("QTyMutasiMasuk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTyMutasiMasuk);
                this.columnQtyMutasiKeluar = new global::System.Data.DataColumn("QtyMutasiKeluar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyMutasiKeluar);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnTglNota = new global::System.Data.DataColumn("TglNota", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglNota);
                this.columnQtyAkhir = new global::System.Data.DataColumn("QtyAkhir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyAkhir);
                this.columnKoreksiMasuk = new global::System.Data.DataColumn("KoreksiMasuk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKoreksiMasuk);
                this.columnKoreksiKeluar = new global::System.Data.DataColumn("KoreksiKeluar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKoreksiKeluar);
                this.columnRpStok = new global::System.Data.DataColumn("RpStok", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpStok);
                this.columnNoNota = new global::System.Data.DataColumn("NoNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoNota);
                this.columnRak = new global::System.Data.DataColumn("Rak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRak);
                this.columnNRpAwal = new global::System.Data.DataColumn("NRpAwal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNRpAwal);
                this.columnNRpAkhir = new global::System.Data.DataColumn("NRpAkhir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNRpAkhir);
                this.columnKodeBarang = new global::System.Data.DataColumn("KodeBarang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeBarang);
                this.columnSatuan = new global::System.Data.DataColumn("Satuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatuan);
                this.columnQtyOrder = new global::System.Data.DataColumn("QtyOrder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyOrder);
                this.columnTglHistory = new global::System.Data.DataColumn("TglHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglHistory);
                this.columnAdjOpname = new global::System.Data.DataColumn("AdjOpname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjOpname);
                this.columnQtyGIT = new global::System.Data.DataColumn("QtyGIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyGIT);
                this.columnQtyGudang = new global::System.Data.DataColumn("QtyGudang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyGudang);
                this.columnRpGIT = new global::System.Data.DataColumn("RpGIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpGIT);
                this.columnDataColumn1 = new global::System.Data.DataColumn("DataColumn1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn1);
                this.columnQtyKorBeli = new global::System.Data.DataColumn("QtyKorBeli", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyKorBeli);
                this.columnQtyKorRetBeli = new global::System.Data.DataColumn("QtyKorRetBeli", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyKorRetBeli);
                this.columnQtyKorJual = new global::System.Data.DataColumn("QtyKorJual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyKorJual);
                this.columnQtyKorRetJual = new global::System.Data.DataColumn("QtyKorRetJual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyKorRetJual);
                this.columnAdjClosing = new global::System.Data.DataColumn("AdjClosing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjClosing);
                this.columnQtyPinjam = new global::System.Data.DataColumn("QtyPinjam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyPinjam);
                this.columnQtyBuffer = new global::System.Data.DataColumn("QtyBuffer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyBuffer);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row NewData1Row() {
                return ((Data1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Data1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Data1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data1RowChanged != null)) {
                    this.Data1RowChanged(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data1RowChanging != null)) {
                    this.Data1RowChanging(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data1RowDeleted != null)) {
                    this.Data1RowDeleted(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data1RowDeleting != null)) {
                    this.Data1RowDeleting(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveData1Row(Data1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsOpname ds = new dsOpname();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Data1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SamplingDataTable : global::System.Data.TypedTableBase<SamplingRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnKodeBarang;
            
            private global::System.Data.DataColumn columnNamaStok;
            
            private global::System.Data.DataColumn columnSatJual;
            
            private global::System.Data.DataColumn columnStokAkhir;
            
            private global::System.Data.DataColumn columnQtyOpname;
            
            private global::System.Data.DataColumn columnSelisih;
            
            private global::System.Data.DataColumn columnTglOpname;
            
            private global::System.Data.DataColumn columnKeterangan;
            
            private global::System.Data.DataColumn columnKodeRak1;
            
            private global::System.Data.DataColumn columnKodeRak2;
            
            private global::System.Data.DataColumn columnKodeRak3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SamplingDataTable() {
                this.TableName = "Sampling";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SamplingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SamplingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeBarangColumn {
                get {
                    return this.columnKodeBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStokColumn {
                get {
                    return this.columnNamaStok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatJualColumn {
                get {
                    return this.columnSatJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StokAkhirColumn {
                get {
                    return this.columnStokAkhir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyOpnameColumn {
                get {
                    return this.columnQtyOpname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelisihColumn {
                get {
                    return this.columnSelisih;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglOpnameColumn {
                get {
                    return this.columnTglOpname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeteranganColumn {
                get {
                    return this.columnKeterangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeRak1Column {
                get {
                    return this.columnKodeRak1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeRak2Column {
                get {
                    return this.columnKodeRak2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeRak3Column {
                get {
                    return this.columnKodeRak3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SamplingRow this[int index] {
                get {
                    return ((SamplingRow)(this.Rows[index]));
                }
            }
            
            public event SamplingRowChangeEventHandler SamplingRowChanging;
            
            public event SamplingRowChangeEventHandler SamplingRowChanged;
            
            public event SamplingRowChangeEventHandler SamplingRowDeleting;
            
            public event SamplingRowChangeEventHandler SamplingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSamplingRow(SamplingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SamplingRow AddSamplingRow(string RowID, string KodeBarang, string NamaStok, string SatJual, string StokAkhir, string QtyOpname, string Selisih, string TglOpname, string Keterangan, string KodeRak1, string KodeRak2, string KodeRak3) {
                SamplingRow rowSamplingRow = ((SamplingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        KodeBarang,
                        NamaStok,
                        SatJual,
                        StokAkhir,
                        QtyOpname,
                        Selisih,
                        TglOpname,
                        Keterangan,
                        KodeRak1,
                        KodeRak2,
                        KodeRak3};
                rowSamplingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSamplingRow);
                return rowSamplingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SamplingDataTable cln = ((SamplingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SamplingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnKodeBarang = base.Columns["KodeBarang"];
                this.columnNamaStok = base.Columns["NamaStok"];
                this.columnSatJual = base.Columns["SatJual"];
                this.columnStokAkhir = base.Columns["StokAkhir"];
                this.columnQtyOpname = base.Columns["QtyOpname"];
                this.columnSelisih = base.Columns["Selisih"];
                this.columnTglOpname = base.Columns["TglOpname"];
                this.columnKeterangan = base.Columns["Keterangan"];
                this.columnKodeRak1 = base.Columns["KodeRak1"];
                this.columnKodeRak2 = base.Columns["KodeRak2"];
                this.columnKodeRak3 = base.Columns["KodeRak3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnKodeBarang = new global::System.Data.DataColumn("KodeBarang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeBarang);
                this.columnNamaStok = new global::System.Data.DataColumn("NamaStok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStok);
                this.columnSatJual = new global::System.Data.DataColumn("SatJual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatJual);
                this.columnStokAkhir = new global::System.Data.DataColumn("StokAkhir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStokAkhir);
                this.columnQtyOpname = new global::System.Data.DataColumn("QtyOpname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyOpname);
                this.columnSelisih = new global::System.Data.DataColumn("Selisih", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelisih);
                this.columnTglOpname = new global::System.Data.DataColumn("TglOpname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglOpname);
                this.columnKeterangan = new global::System.Data.DataColumn("Keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeterangan);
                this.columnKodeRak1 = new global::System.Data.DataColumn("KodeRak1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeRak1);
                this.columnKodeRak2 = new global::System.Data.DataColumn("KodeRak2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeRak2);
                this.columnKodeRak3 = new global::System.Data.DataColumn("KodeRak3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeRak3);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SamplingRow NewSamplingRow() {
                return ((SamplingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SamplingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SamplingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SamplingRowChanged != null)) {
                    this.SamplingRowChanged(this, new SamplingRowChangeEvent(((SamplingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SamplingRowChanging != null)) {
                    this.SamplingRowChanging(this, new SamplingRowChangeEvent(((SamplingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SamplingRowDeleted != null)) {
                    this.SamplingRowDeleted(this, new SamplingRowChangeEvent(((SamplingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SamplingRowDeleting != null)) {
                    this.SamplingRowDeleting(this, new SamplingRowChangeEvent(((SamplingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSamplingRow(SamplingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsOpname ds = new dsOpname();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SamplingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataRow : global::System.Data.DataRow {
            
            private DataDataTable tableData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStok {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaStokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStok\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaStokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatusPasif {
                get {
                    try {
                        return ((string)(this[this.tableData.StatusPasifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusPasif\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.StatusPasifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeBarang {
                get {
                    try {
                        return ((string)(this[this.tableData.KodeBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeBarang\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KodeBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TglOpname {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.TglOpnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglOpname\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglOpnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TglHitung1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.TglHitung1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglHitung1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglHitung1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TglHitung2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.TglHitung2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglHitung2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglHitung2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TglHitung3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.TglHitung3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglHitung3\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglHitung3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HPP {
                get {
                    try {
                        return ((int)(this[this.tableData.HPPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HPP\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.HPPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string User {
                get {
                    try {
                        return ((string)(this[this.tableData.UserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.UserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RowID {
                get {
                    try {
                        return ((string)(this[this.tableData.RowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total1 {
                get {
                    try {
                        return ((int)(this[this.tableData.Total1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Total1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total2 {
                get {
                    try {
                        return ((int)(this[this.tableData.Total2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Total2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total3 {
                get {
                    try {
                        return ((int)(this[this.tableData.Total3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total3\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Total3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RowID1 {
                get {
                    try {
                        return ((string)(this[this.tableData.RowID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowID1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RowID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RowID2 {
                get {
                    try {
                        return ((string)(this[this.tableData.RowID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowID2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RowID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RowID3 {
                get {
                    try {
                        return ((string)(this[this.tableData.RowID3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowID3\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RowID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Penghitung1 {
                get {
                    try {
                        return ((string)(this[this.tableData.Penghitung1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Penghitung1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Penghitung1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Penghitung2 {
                get {
                    try {
                        return ((string)(this[this.tableData.Penghitung2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Penghitung2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Penghitung2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Penghitung3 {
                get {
                    try {
                        return ((string)(this[this.tableData.Penghitung3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Penghitung3\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Penghitung3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Form1 {
                get {
                    try {
                        return ((string)(this[this.tableData.Form1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Form1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Form2 {
                get {
                    try {
                        return ((string)(this[this.tableData.Form2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Form2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Form3 {
                get {
                    try {
                        return ((string)(this[this.tableData.Form3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Form3\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Form3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyAwal {
                get {
                    try {
                        return ((int)(this[this.tableData.QtyAwalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyAwal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.QtyAwalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatJual {
                get {
                    try {
                        return ((string)(this[this.tableData.SatJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatJual\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SatJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeRak {
                get {
                    try {
                        return ((string)(this[this.tableData.KodeRakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeRak\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KodeRakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lokasi {
                get {
                    try {
                        return ((string)(this[this.tableData.LokasiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lokasi\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.LokasiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Baik1 {
                get {
                    try {
                        return ((int)(this[this.tableData.Baik1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Baik1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Baik1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cacat1 {
                get {
                    try {
                        return ((int)(this[this.tableData.Cacat1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cacat1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Cacat1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Rusak1 {
                get {
                    try {
                        return ((int)(this[this.tableData.Rusak1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rusak1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Rusak1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Baik2 {
                get {
                    try {
                        return ((int)(this[this.tableData.Baik2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Baik2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Baik2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cacat2 {
                get {
                    try {
                        return ((int)(this[this.tableData.Cacat2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cacat2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Cacat2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Rusak2 {
                get {
                    try {
                        return ((int)(this[this.tableData.Rusak2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rusak2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Rusak2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Baik3 {
                get {
                    try {
                        return ((int)(this[this.tableData.Baik3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Baik3\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Baik3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cacat3 {
                get {
                    try {
                        return ((int)(this[this.tableData.Cacat3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cacat3\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Cacat3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Rusak3 {
                get {
                    try {
                        return ((int)(this[this.tableData.Rusak3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rusak3\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Rusak3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Baik {
                get {
                    try {
                        return ((string)(this[this.tableData.BaikColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Baik\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BaikColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cacat {
                get {
                    try {
                        return ((string)(this[this.tableData.CacatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cacat\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.CacatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rusak {
                get {
                    try {
                        return ((string)(this[this.tableData.RusakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rusak\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RusakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total {
                get {
                    try {
                        return ((string)(this[this.tableData.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AVGJual {
                get {
                    try {
                        return ((string)(this[this.tableData.AVGJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGJual\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AVGJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Maximum {
                get {
                    try {
                        return ((string)(this[this.tableData.MaximumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Maximum\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.MaximumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Minimum {
                get {
                    try {
                        return ((string)(this[this.tableData.MinimumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Minimum\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.MinimumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Satuan {
                get {
                    try {
                        return ((string)(this[this.tableData.SatuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Satuan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SatuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyGIT {
                get {
                    try {
                        return ((string)(this[this.tableData.QtyGITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyGIT\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.QtyGITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyGudang {
                get {
                    try {
                        return ((string)(this[this.tableData.QtyGudangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyGudang\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.QtyGudangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RpGIT {
                get {
                    try {
                        return ((double)(this[this.tableData.RpGITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpGIT\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RpGITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rak {
                get {
                    try {
                        return ((string)(this[this.tableData.RakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rak\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyAkhir {
                get {
                    try {
                        return ((string)(this[this.tableData.QtyAkhirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyAkhir\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.QtyAkhirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Keterangan {
                get {
                    try {
                        return ((string)(this[this.tableData.KeteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Keterangan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KeteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeRak1 {
                get {
                    try {
                        return ((string)(this[this.tableData.KodeRak1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeRak1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KodeRak1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeRak2 {
                get {
                    try {
                        return ((string)(this[this.tableData.KodeRak2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeRak2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KodeRak2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStokNull() {
                return this.IsNull(this.tableData.NamaStokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStokNull() {
                this[this.tableData.NamaStokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusPasifNull() {
                return this.IsNull(this.tableData.StatusPasifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusPasifNull() {
                this[this.tableData.StatusPasifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeBarangNull() {
                return this.IsNull(this.tableData.KodeBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeBarangNull() {
                this[this.tableData.KodeBarangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglOpnameNull() {
                return this.IsNull(this.tableData.TglOpnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglOpnameNull() {
                this[this.tableData.TglOpnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglHitung1Null() {
                return this.IsNull(this.tableData.TglHitung1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglHitung1Null() {
                this[this.tableData.TglHitung1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglHitung2Null() {
                return this.IsNull(this.tableData.TglHitung2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglHitung2Null() {
                this[this.tableData.TglHitung2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglHitung3Null() {
                return this.IsNull(this.tableData.TglHitung3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglHitung3Null() {
                this[this.tableData.TglHitung3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHPPNull() {
                return this.IsNull(this.tableData.HPPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHPPNull() {
                this[this.tableData.HPPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNull() {
                return this.IsNull(this.tableData.UserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNull() {
                this[this.tableData.UserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowIDNull() {
                return this.IsNull(this.tableData.RowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowIDNull() {
                this[this.tableData.RowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal1Null() {
                return this.IsNull(this.tableData.Total1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal1Null() {
                this[this.tableData.Total1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal2Null() {
                return this.IsNull(this.tableData.Total2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal2Null() {
                this[this.tableData.Total2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal3Null() {
                return this.IsNull(this.tableData.Total3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal3Null() {
                this[this.tableData.Total3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowID1Null() {
                return this.IsNull(this.tableData.RowID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowID1Null() {
                this[this.tableData.RowID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowID2Null() {
                return this.IsNull(this.tableData.RowID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowID2Null() {
                this[this.tableData.RowID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowID3Null() {
                return this.IsNull(this.tableData.RowID3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowID3Null() {
                this[this.tableData.RowID3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenghitung1Null() {
                return this.IsNull(this.tableData.Penghitung1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenghitung1Null() {
                this[this.tableData.Penghitung1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenghitung2Null() {
                return this.IsNull(this.tableData.Penghitung2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenghitung2Null() {
                this[this.tableData.Penghitung2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenghitung3Null() {
                return this.IsNull(this.tableData.Penghitung3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenghitung3Null() {
                this[this.tableData.Penghitung3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForm1Null() {
                return this.IsNull(this.tableData.Form1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForm1Null() {
                this[this.tableData.Form1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForm2Null() {
                return this.IsNull(this.tableData.Form2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForm2Null() {
                this[this.tableData.Form2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForm3Null() {
                return this.IsNull(this.tableData.Form3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForm3Null() {
                this[this.tableData.Form3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyAwalNull() {
                return this.IsNull(this.tableData.QtyAwalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyAwalNull() {
                this[this.tableData.QtyAwalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatJualNull() {
                return this.IsNull(this.tableData.SatJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatJualNull() {
                this[this.tableData.SatJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeRakNull() {
                return this.IsNull(this.tableData.KodeRakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeRakNull() {
                this[this.tableData.KodeRakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLokasiNull() {
                return this.IsNull(this.tableData.LokasiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLokasiNull() {
                this[this.tableData.LokasiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaik1Null() {
                return this.IsNull(this.tableData.Baik1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaik1Null() {
                this[this.tableData.Baik1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCacat1Null() {
                return this.IsNull(this.tableData.Cacat1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCacat1Null() {
                this[this.tableData.Cacat1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRusak1Null() {
                return this.IsNull(this.tableData.Rusak1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRusak1Null() {
                this[this.tableData.Rusak1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaik2Null() {
                return this.IsNull(this.tableData.Baik2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaik2Null() {
                this[this.tableData.Baik2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCacat2Null() {
                return this.IsNull(this.tableData.Cacat2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCacat2Null() {
                this[this.tableData.Cacat2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRusak2Null() {
                return this.IsNull(this.tableData.Rusak2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRusak2Null() {
                this[this.tableData.Rusak2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaik3Null() {
                return this.IsNull(this.tableData.Baik3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaik3Null() {
                this[this.tableData.Baik3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCacat3Null() {
                return this.IsNull(this.tableData.Cacat3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCacat3Null() {
                this[this.tableData.Cacat3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRusak3Null() {
                return this.IsNull(this.tableData.Rusak3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRusak3Null() {
                this[this.tableData.Rusak3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaikNull() {
                return this.IsNull(this.tableData.BaikColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaikNull() {
                this[this.tableData.BaikColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCacatNull() {
                return this.IsNull(this.tableData.CacatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCacatNull() {
                this[this.tableData.CacatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRusakNull() {
                return this.IsNull(this.tableData.RusakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRusakNull() {
                this[this.tableData.RusakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableData.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableData.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVGJualNull() {
                return this.IsNull(this.tableData.AVGJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVGJualNull() {
                this[this.tableData.AVGJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaximumNull() {
                return this.IsNull(this.tableData.MaximumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaximumNull() {
                this[this.tableData.MaximumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimumNull() {
                return this.IsNull(this.tableData.MinimumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimumNull() {
                this[this.tableData.MinimumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatuanNull() {
                return this.IsNull(this.tableData.SatuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatuanNull() {
                this[this.tableData.SatuanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyGITNull() {
                return this.IsNull(this.tableData.QtyGITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyGITNull() {
                this[this.tableData.QtyGITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyGudangNull() {
                return this.IsNull(this.tableData.QtyGudangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyGudangNull() {
                this[this.tableData.QtyGudangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpGITNull() {
                return this.IsNull(this.tableData.RpGITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpGITNull() {
                this[this.tableData.RpGITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRakNull() {
                return this.IsNull(this.tableData.RakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRakNull() {
                this[this.tableData.RakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyAkhirNull() {
                return this.IsNull(this.tableData.QtyAkhirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyAkhirNull() {
                this[this.tableData.QtyAkhirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeteranganNull() {
                return this.IsNull(this.tableData.KeteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeteranganNull() {
                this[this.tableData.KeteranganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeRak1Null() {
                return this.IsNull(this.tableData.KodeRak1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeRak1Null() {
                this[this.tableData.KodeRak1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeRak2Null() {
                return this.IsNull(this.tableData.KodeRak2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeRak2Null() {
                this[this.tableData.KodeRak2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Data1Row : global::System.Data.DataRow {
            
            private Data1DataTable tableData1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData1 = ((Data1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStok {
                get {
                    try {
                        return ((string)(this[this.tableData1.NamaStokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStok\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.NamaStokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglOpname {
                get {
                    try {
                        return ((string)(this[this.tableData1.TglOpnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglOpname\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.TglOpnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyAwal {
                get {
                    try {
                        return ((int)(this[this.tableData1.QtyAwalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyAwal\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyAwalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyJual {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyJual\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyBeli {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyBeliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyBeli\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyBeliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyRetJual {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyRetJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyRetJual\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyRetJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyRetBeli {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyRetBeliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyRetBeli\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyRetBeliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyMutasi {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyMutasiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyMutasi\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyMutasiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyKoreksi {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyKoreksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyKoreksi\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyKoreksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyAntarGudang {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyAntarGudangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyAntarGudang\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyAntarGudangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtySelisih {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtySelisihColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtySelisih\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtySelisihColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyKons {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyKonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyKons\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyKonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeGudang {
                get {
                    try {
                        return ((string)(this[this.tableData1.KodeGudangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeGudang\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.KodeGudangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BarangID {
                get {
                    try {
                        return ((string)(this[this.tableData1.BarangIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarangID\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.BarangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Stok {
                get {
                    try {
                        return ((string)(this[this.tableData1.StokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stok\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.StokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QTyMutasiMasuk {
                get {
                    try {
                        return ((string)(this[this.tableData1.QTyMutasiMasukColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTyMutasiMasuk\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QTyMutasiMasukColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyMutasiKeluar {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyMutasiKeluarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyMutasiKeluar\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyMutasiKeluarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tableData1.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TglNota {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData1.TglNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglNota\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.TglNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyAkhir {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyAkhirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyAkhir\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyAkhirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KoreksiMasuk {
                get {
                    try {
                        return ((string)(this[this.tableData1.KoreksiMasukColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KoreksiMasuk\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.KoreksiMasukColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KoreksiKeluar {
                get {
                    try {
                        return ((string)(this[this.tableData1.KoreksiKeluarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KoreksiKeluar\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.KoreksiKeluarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RpStok {
                get {
                    try {
                        return ((int)(this[this.tableData1.RpStokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpStok\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.RpStokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoNota {
                get {
                    try {
                        return ((string)(this[this.tableData1.NoNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoNota\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.NoNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rak {
                get {
                    try {
                        return ((string)(this[this.tableData1.RakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rak\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.RakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NRpAwal {
                get {
                    try {
                        return ((string)(this[this.tableData1.NRpAwalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NRpAwal\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.NRpAwalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NRpAkhir {
                get {
                    try {
                        return ((string)(this[this.tableData1.NRpAkhirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NRpAkhir\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.NRpAkhirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeBarang {
                get {
                    try {
                        return ((string)(this[this.tableData1.KodeBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeBarang\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.KodeBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Satuan {
                get {
                    try {
                        return ((string)(this[this.tableData1.SatuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Satuan\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.SatuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyOrder {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyOrder\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglHistory {
                get {
                    try {
                        return ((string)(this[this.tableData1.TglHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglHistory\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.TglHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AdjOpname {
                get {
                    try {
                        return ((string)(this[this.tableData1.AdjOpnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjOpname\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.AdjOpnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyGIT {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyGITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyGIT\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyGITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyGudang {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyGudangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyGudang\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyGudangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpGIT {
                get {
                    try {
                        return ((string)(this[this.tableData1.RpGITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpGIT\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.RpGITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn1 {
                get {
                    try {
                        return ((string)(this[this.tableData1.DataColumn1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataColumn1\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.DataColumn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyKorBeli {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyKorBeliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyKorBeli\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyKorBeliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyKorRetBeli {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyKorRetBeliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyKorRetBeli\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyKorRetBeliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyKorJual {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyKorJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyKorJual\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyKorJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyKorRetJual {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyKorRetJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyKorRetJual\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyKorRetJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AdjClosing {
                get {
                    try {
                        return ((string)(this[this.tableData1.AdjClosingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjClosing\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.AdjClosingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyPinjam {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyPinjamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyPinjam\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyPinjamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyBuffer {
                get {
                    try {
                        return ((string)(this[this.tableData1.QtyBufferColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyBuffer\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyBufferColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStokNull() {
                return this.IsNull(this.tableData1.NamaStokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStokNull() {
                this[this.tableData1.NamaStokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglOpnameNull() {
                return this.IsNull(this.tableData1.TglOpnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglOpnameNull() {
                this[this.tableData1.TglOpnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyAwalNull() {
                return this.IsNull(this.tableData1.QtyAwalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyAwalNull() {
                this[this.tableData1.QtyAwalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyJualNull() {
                return this.IsNull(this.tableData1.QtyJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyJualNull() {
                this[this.tableData1.QtyJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyBeliNull() {
                return this.IsNull(this.tableData1.QtyBeliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyBeliNull() {
                this[this.tableData1.QtyBeliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyRetJualNull() {
                return this.IsNull(this.tableData1.QtyRetJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyRetJualNull() {
                this[this.tableData1.QtyRetJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyRetBeliNull() {
                return this.IsNull(this.tableData1.QtyRetBeliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyRetBeliNull() {
                this[this.tableData1.QtyRetBeliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyMutasiNull() {
                return this.IsNull(this.tableData1.QtyMutasiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyMutasiNull() {
                this[this.tableData1.QtyMutasiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyKoreksiNull() {
                return this.IsNull(this.tableData1.QtyKoreksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyKoreksiNull() {
                this[this.tableData1.QtyKoreksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyAntarGudangNull() {
                return this.IsNull(this.tableData1.QtyAntarGudangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyAntarGudangNull() {
                this[this.tableData1.QtyAntarGudangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtySelisihNull() {
                return this.IsNull(this.tableData1.QtySelisihColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtySelisihNull() {
                this[this.tableData1.QtySelisihColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyKonsNull() {
                return this.IsNull(this.tableData1.QtyKonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyKonsNull() {
                this[this.tableData1.QtyKonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeGudangNull() {
                return this.IsNull(this.tableData1.KodeGudangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeGudangNull() {
                this[this.tableData1.KodeGudangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarangIDNull() {
                return this.IsNull(this.tableData1.BarangIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarangIDNull() {
                this[this.tableData1.BarangIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStokNull() {
                return this.IsNull(this.tableData1.StokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStokNull() {
                this[this.tableData1.StokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTyMutasiMasukNull() {
                return this.IsNull(this.tableData1.QTyMutasiMasukColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTyMutasiMasukNull() {
                this[this.tableData1.QTyMutasiMasukColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyMutasiKeluarNull() {
                return this.IsNull(this.tableData1.QtyMutasiKeluarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyMutasiKeluarNull() {
                this[this.tableData1.QtyMutasiKeluarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tableData1.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tableData1.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglNotaNull() {
                return this.IsNull(this.tableData1.TglNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglNotaNull() {
                this[this.tableData1.TglNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyAkhirNull() {
                return this.IsNull(this.tableData1.QtyAkhirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyAkhirNull() {
                this[this.tableData1.QtyAkhirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKoreksiMasukNull() {
                return this.IsNull(this.tableData1.KoreksiMasukColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKoreksiMasukNull() {
                this[this.tableData1.KoreksiMasukColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKoreksiKeluarNull() {
                return this.IsNull(this.tableData1.KoreksiKeluarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKoreksiKeluarNull() {
                this[this.tableData1.KoreksiKeluarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpStokNull() {
                return this.IsNull(this.tableData1.RpStokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpStokNull() {
                this[this.tableData1.RpStokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoNotaNull() {
                return this.IsNull(this.tableData1.NoNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoNotaNull() {
                this[this.tableData1.NoNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRakNull() {
                return this.IsNull(this.tableData1.RakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRakNull() {
                this[this.tableData1.RakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNRpAwalNull() {
                return this.IsNull(this.tableData1.NRpAwalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNRpAwalNull() {
                this[this.tableData1.NRpAwalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNRpAkhirNull() {
                return this.IsNull(this.tableData1.NRpAkhirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNRpAkhirNull() {
                this[this.tableData1.NRpAkhirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeBarangNull() {
                return this.IsNull(this.tableData1.KodeBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeBarangNull() {
                this[this.tableData1.KodeBarangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatuanNull() {
                return this.IsNull(this.tableData1.SatuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatuanNull() {
                this[this.tableData1.SatuanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyOrderNull() {
                return this.IsNull(this.tableData1.QtyOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyOrderNull() {
                this[this.tableData1.QtyOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglHistoryNull() {
                return this.IsNull(this.tableData1.TglHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglHistoryNull() {
                this[this.tableData1.TglHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjOpnameNull() {
                return this.IsNull(this.tableData1.AdjOpnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjOpnameNull() {
                this[this.tableData1.AdjOpnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyGITNull() {
                return this.IsNull(this.tableData1.QtyGITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyGITNull() {
                this[this.tableData1.QtyGITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyGudangNull() {
                return this.IsNull(this.tableData1.QtyGudangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyGudangNull() {
                this[this.tableData1.QtyGudangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpGITNull() {
                return this.IsNull(this.tableData1.RpGITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpGITNull() {
                this[this.tableData1.RpGITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn1Null() {
                return this.IsNull(this.tableData1.DataColumn1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn1Null() {
                this[this.tableData1.DataColumn1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyKorBeliNull() {
                return this.IsNull(this.tableData1.QtyKorBeliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyKorBeliNull() {
                this[this.tableData1.QtyKorBeliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyKorRetBeliNull() {
                return this.IsNull(this.tableData1.QtyKorRetBeliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyKorRetBeliNull() {
                this[this.tableData1.QtyKorRetBeliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyKorJualNull() {
                return this.IsNull(this.tableData1.QtyKorJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyKorJualNull() {
                this[this.tableData1.QtyKorJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyKorRetJualNull() {
                return this.IsNull(this.tableData1.QtyKorRetJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyKorRetJualNull() {
                this[this.tableData1.QtyKorRetJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjClosingNull() {
                return this.IsNull(this.tableData1.AdjClosingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjClosingNull() {
                this[this.tableData1.AdjClosingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyPinjamNull() {
                return this.IsNull(this.tableData1.QtyPinjamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyPinjamNull() {
                this[this.tableData1.QtyPinjamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyBufferNull() {
                return this.IsNull(this.tableData1.QtyBufferColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyBufferNull() {
                this[this.tableData1.QtyBufferColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SamplingRow : global::System.Data.DataRow {
            
            private SamplingDataTable tableSampling;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SamplingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSampling = ((SamplingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RowID {
                get {
                    try {
                        return ((string)(this[this.tableSampling.RowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowID\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeBarang {
                get {
                    try {
                        return ((string)(this[this.tableSampling.KodeBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeBarang\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.KodeBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStok {
                get {
                    try {
                        return ((string)(this[this.tableSampling.NamaStokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStok\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.NamaStokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatJual {
                get {
                    try {
                        return ((string)(this[this.tableSampling.SatJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatJual\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.SatJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StokAkhir {
                get {
                    try {
                        return ((string)(this[this.tableSampling.StokAkhirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StokAkhir\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.StokAkhirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyOpname {
                get {
                    try {
                        return ((string)(this[this.tableSampling.QtyOpnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyOpname\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.QtyOpnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selisih {
                get {
                    try {
                        return ((string)(this[this.tableSampling.SelisihColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selisih\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.SelisihColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglOpname {
                get {
                    try {
                        return ((string)(this[this.tableSampling.TglOpnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglOpname\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.TglOpnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Keterangan {
                get {
                    try {
                        return ((string)(this[this.tableSampling.KeteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Keterangan\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.KeteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeRak1 {
                get {
                    try {
                        return ((string)(this[this.tableSampling.KodeRak1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeRak1\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.KodeRak1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeRak2 {
                get {
                    try {
                        return ((string)(this[this.tableSampling.KodeRak2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeRak2\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.KodeRak2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeRak3 {
                get {
                    try {
                        return ((string)(this[this.tableSampling.KodeRak3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeRak3\' in table \'Sampling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSampling.KodeRak3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowIDNull() {
                return this.IsNull(this.tableSampling.RowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowIDNull() {
                this[this.tableSampling.RowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeBarangNull() {
                return this.IsNull(this.tableSampling.KodeBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeBarangNull() {
                this[this.tableSampling.KodeBarangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStokNull() {
                return this.IsNull(this.tableSampling.NamaStokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStokNull() {
                this[this.tableSampling.NamaStokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatJualNull() {
                return this.IsNull(this.tableSampling.SatJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatJualNull() {
                this[this.tableSampling.SatJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStokAkhirNull() {
                return this.IsNull(this.tableSampling.StokAkhirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStokAkhirNull() {
                this[this.tableSampling.StokAkhirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyOpnameNull() {
                return this.IsNull(this.tableSampling.QtyOpnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyOpnameNull() {
                this[this.tableSampling.QtyOpnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelisihNull() {
                return this.IsNull(this.tableSampling.SelisihColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelisihNull() {
                this[this.tableSampling.SelisihColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglOpnameNull() {
                return this.IsNull(this.tableSampling.TglOpnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglOpnameNull() {
                this[this.tableSampling.TglOpnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeteranganNull() {
                return this.IsNull(this.tableSampling.KeteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeteranganNull() {
                this[this.tableSampling.KeteranganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeRak1Null() {
                return this.IsNull(this.tableSampling.KodeRak1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeRak1Null() {
                this[this.tableSampling.KodeRak1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeRak2Null() {
                return this.IsNull(this.tableSampling.KodeRak2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeRak2Null() {
                this[this.tableSampling.KodeRak2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeRak3Null() {
                return this.IsNull(this.tableSampling.KodeRak3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeRak3Null() {
                this[this.tableSampling.KodeRak3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            
            private DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Data1RowChangeEvent : global::System.EventArgs {
            
            private Data1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1RowChangeEvent(Data1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SamplingRowChangeEvent : global::System.EventArgs {
            
            private SamplingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SamplingRowChangeEvent(SamplingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SamplingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591