//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Finance.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsPlafonBaru")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsPlafonBaru : global::System.Data.DataSet {
        
        private DataDataTable tableData;
        
        private UpdateJSTokoDataTable tableUpdateJSToko;
        
        private JSTokoIntiDataTable tableJSTokoInti;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsPlafonBaru() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsPlafonBaru(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                if ((ds.Tables["UpdateJSToko"] != null)) {
                    base.Tables.Add(new UpdateJSTokoDataTable(ds.Tables["UpdateJSToko"]));
                }
                if ((ds.Tables["JSTokoInti"] != null)) {
                    base.Tables.Add(new JSTokoIntiDataTable(ds.Tables["JSTokoInti"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UpdateJSTokoDataTable UpdateJSToko {
            get {
                return this.tableUpdateJSToko;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JSTokoIntiDataTable JSTokoInti {
            get {
                return this.tableJSTokoInti;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsPlafonBaru cln = ((dsPlafonBaru)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                if ((ds.Tables["UpdateJSToko"] != null)) {
                    base.Tables.Add(new UpdateJSTokoDataTable(ds.Tables["UpdateJSToko"]));
                }
                if ((ds.Tables["JSTokoInti"] != null)) {
                    base.Tables.Add(new JSTokoIntiDataTable(ds.Tables["JSTokoInti"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
            this.tableUpdateJSToko = ((UpdateJSTokoDataTable)(base.Tables["UpdateJSToko"]));
            if ((initTable == true)) {
                if ((this.tableUpdateJSToko != null)) {
                    this.tableUpdateJSToko.InitVars();
                }
            }
            this.tableJSTokoInti = ((JSTokoIntiDataTable)(base.Tables["JSTokoInti"]));
            if ((initTable == true)) {
                if ((this.tableJSTokoInti != null)) {
                    this.tableJSTokoInti.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsPlafonBaru";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsPlafonBaru.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
            this.tableUpdateJSToko = new UpdateJSTokoDataTable();
            base.Tables.Add(this.tableUpdateJSToko);
            this.tableJSTokoInti = new JSTokoIntiDataTable();
            base.Tables.Add(this.tableJSTokoInti);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUpdateJSToko() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeJSTokoInti() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsPlafonBaru ds = new dsPlafonBaru();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        
        public delegate void UpdateJSTokoRowChangeEventHandler(object sender, UpdateJSTokoRowChangeEvent e);
        
        public delegate void JSTokoIntiRowChangeEventHandler(object sender, JSTokoIntiRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.TypedTableBase<DataRow> {
            
            private global::System.Data.DataColumn columnTokoID;
            
            private global::System.Data.DataColumn columnNamaToko;
            
            private global::System.Data.DataColumn columnTotalBayar;
            
            private global::System.Data.DataColumn columnRatarataBayar;
            
            private global::System.Data.DataColumn columnPotensiBerkembang;
            
            private global::System.Data.DataColumn columnKemampuanBayar;
            
            private global::System.Data.DataColumn columnPlafon;
            
            private global::System.Data.DataColumn columnPiutangNota;
            
            private global::System.Data.DataColumn columnGiroTolak;
            
            private global::System.Data.DataColumn columnGITNotaJual;
            
            private global::System.Data.DataColumn columnDODlmProses;
            
            private global::System.Data.DataColumn columnSisaPiutang;
            
            private global::System.Data.DataColumn columnKeterangan;
            
            private global::System.Data.DataColumn columnWilID;
            
            private global::System.Data.DataColumn columnAlamat;
            
            private global::System.Data.DataColumn columnPlafonTambahan;
            
            private global::System.Data.DataColumn columnTotalPlafon;
            
            private global::System.Data.DataColumn columnTargetOmset;
            
            private global::System.Data.DataColumn columnStatusPN;
            
            private global::System.Data.DataColumn columnTW;
            
            private global::System.Data.DataColumn columnJS;
            
            private global::System.Data.DataColumn columnJangkaWaktuKredit;
            
            private global::System.Data.DataColumn columnHariSales;
            
            private global::System.Data.DataColumn columnHariKirim;
            
            private global::System.Data.DataColumn columnMaxJual;
            
            private global::System.Data.DataColumn columnMaxBayar;
            
            private global::System.Data.DataColumn columnRLB;
            
            private global::System.Data.DataColumn columnLP;
            
            private global::System.Data.DataColumn columnSisaPlafon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TokoIDColumn {
                get {
                    return this.columnTokoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaTokoColumn {
                get {
                    return this.columnNamaToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalBayarColumn {
                get {
                    return this.columnTotalBayar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RatarataBayarColumn {
                get {
                    return this.columnRatarataBayar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PotensiBerkembangColumn {
                get {
                    return this.columnPotensiBerkembang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KemampuanBayarColumn {
                get {
                    return this.columnKemampuanBayar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlafonColumn {
                get {
                    return this.columnPlafon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiutangNotaColumn {
                get {
                    return this.columnPiutangNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiroTolakColumn {
                get {
                    return this.columnGiroTolak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GITNotaJualColumn {
                get {
                    return this.columnGITNotaJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DODlmProsesColumn {
                get {
                    return this.columnDODlmProses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SisaPiutangColumn {
                get {
                    return this.columnSisaPiutang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeteranganColumn {
                get {
                    return this.columnKeterangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WilIDColumn {
                get {
                    return this.columnWilID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlamatColumn {
                get {
                    return this.columnAlamat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlafonTambahanColumn {
                get {
                    return this.columnPlafonTambahan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPlafonColumn {
                get {
                    return this.columnTotalPlafon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetOmsetColumn {
                get {
                    return this.columnTargetOmset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusPNColumn {
                get {
                    return this.columnStatusPN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWColumn {
                get {
                    return this.columnTW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JSColumn {
                get {
                    return this.columnJS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JangkaWaktuKreditColumn {
                get {
                    return this.columnJangkaWaktuKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HariSalesColumn {
                get {
                    return this.columnHariSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HariKirimColumn {
                get {
                    return this.columnHariKirim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaxJualColumn {
                get {
                    return this.columnMaxJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaxBayarColumn {
                get {
                    return this.columnMaxBayar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RLBColumn {
                get {
                    return this.columnRLB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LPColumn {
                get {
                    return this.columnLP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SisaPlafonColumn {
                get {
                    return this.columnSisaPlafon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            
            public event DataRowChangeEventHandler DataRowChanging;
            
            public event DataRowChangeEventHandler DataRowChanged;
            
            public event DataRowChangeEventHandler DataRowDeleting;
            
            public event DataRowChangeEventHandler DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow AddDataRow(
                        string TokoID, 
                        string NamaToko, 
                        decimal TotalBayar, 
                        decimal RatarataBayar, 
                        decimal PotensiBerkembang, 
                        decimal KemampuanBayar, 
                        decimal Plafon, 
                        decimal PiutangNota, 
                        decimal GiroTolak, 
                        decimal GITNotaJual, 
                        decimal DODlmProses, 
                        decimal SisaPiutang, 
                        string Keterangan, 
                        string WilID, 
                        string Alamat, 
                        string PlafonTambahan, 
                        string TotalPlafon, 
                        string TargetOmset, 
                        string StatusPN, 
                        string TW, 
                        string JS, 
                        string JangkaWaktuKredit, 
                        string HariSales, 
                        string HariKirim, 
                        string MaxJual, 
                        string MaxBayar, 
                        string RLB, 
                        string LP, 
                        string SisaPlafon) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TokoID,
                        NamaToko,
                        TotalBayar,
                        RatarataBayar,
                        PotensiBerkembang,
                        KemampuanBayar,
                        Plafon,
                        PiutangNota,
                        GiroTolak,
                        GITNotaJual,
                        DODlmProses,
                        SisaPiutang,
                        Keterangan,
                        WilID,
                        Alamat,
                        PlafonTambahan,
                        TotalPlafon,
                        TargetOmset,
                        StatusPN,
                        TW,
                        JS,
                        JangkaWaktuKredit,
                        HariSales,
                        HariKirim,
                        MaxJual,
                        MaxBayar,
                        RLB,
                        LP,
                        SisaPlafon};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTokoID = base.Columns["TokoID"];
                this.columnNamaToko = base.Columns["NamaToko"];
                this.columnTotalBayar = base.Columns["TotalBayar"];
                this.columnRatarataBayar = base.Columns["RatarataBayar"];
                this.columnPotensiBerkembang = base.Columns["PotensiBerkembang"];
                this.columnKemampuanBayar = base.Columns["KemampuanBayar"];
                this.columnPlafon = base.Columns["Plafon"];
                this.columnPiutangNota = base.Columns["PiutangNota"];
                this.columnGiroTolak = base.Columns["GiroTolak"];
                this.columnGITNotaJual = base.Columns["GITNotaJual"];
                this.columnDODlmProses = base.Columns["DODlmProses"];
                this.columnSisaPiutang = base.Columns["SisaPiutang"];
                this.columnKeterangan = base.Columns["Keterangan"];
                this.columnWilID = base.Columns["WilID"];
                this.columnAlamat = base.Columns["Alamat"];
                this.columnPlafonTambahan = base.Columns["PlafonTambahan"];
                this.columnTotalPlafon = base.Columns["TotalPlafon"];
                this.columnTargetOmset = base.Columns["TargetOmset"];
                this.columnStatusPN = base.Columns["StatusPN"];
                this.columnTW = base.Columns["TW"];
                this.columnJS = base.Columns["JS"];
                this.columnJangkaWaktuKredit = base.Columns["JangkaWaktuKredit"];
                this.columnHariSales = base.Columns["HariSales"];
                this.columnHariKirim = base.Columns["HariKirim"];
                this.columnMaxJual = base.Columns["MaxJual"];
                this.columnMaxBayar = base.Columns["MaxBayar"];
                this.columnRLB = base.Columns["RLB"];
                this.columnLP = base.Columns["LP"];
                this.columnSisaPlafon = base.Columns["SisaPlafon"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTokoID = new global::System.Data.DataColumn("TokoID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTokoID);
                this.columnNamaToko = new global::System.Data.DataColumn("NamaToko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaToko);
                this.columnTotalBayar = new global::System.Data.DataColumn("TotalBayar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBayar);
                this.columnRatarataBayar = new global::System.Data.DataColumn("RatarataBayar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatarataBayar);
                this.columnPotensiBerkembang = new global::System.Data.DataColumn("PotensiBerkembang", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPotensiBerkembang);
                this.columnKemampuanBayar = new global::System.Data.DataColumn("KemampuanBayar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKemampuanBayar);
                this.columnPlafon = new global::System.Data.DataColumn("Plafon", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlafon);
                this.columnPiutangNota = new global::System.Data.DataColumn("PiutangNota", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiutangNota);
                this.columnGiroTolak = new global::System.Data.DataColumn("GiroTolak", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiroTolak);
                this.columnGITNotaJual = new global::System.Data.DataColumn("GITNotaJual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGITNotaJual);
                this.columnDODlmProses = new global::System.Data.DataColumn("DODlmProses", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDODlmProses);
                this.columnSisaPiutang = new global::System.Data.DataColumn("SisaPiutang", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSisaPiutang);
                this.columnKeterangan = new global::System.Data.DataColumn("Keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeterangan);
                this.columnWilID = new global::System.Data.DataColumn("WilID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWilID);
                this.columnAlamat = new global::System.Data.DataColumn("Alamat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlamat);
                this.columnPlafonTambahan = new global::System.Data.DataColumn("PlafonTambahan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlafonTambahan);
                this.columnTotalPlafon = new global::System.Data.DataColumn("TotalPlafon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPlafon);
                this.columnTargetOmset = new global::System.Data.DataColumn("TargetOmset", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetOmset);
                this.columnStatusPN = new global::System.Data.DataColumn("StatusPN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusPN);
                this.columnTW = new global::System.Data.DataColumn("TW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTW);
                this.columnJS = new global::System.Data.DataColumn("JS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJS);
                this.columnJangkaWaktuKredit = new global::System.Data.DataColumn("JangkaWaktuKredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJangkaWaktuKredit);
                this.columnHariSales = new global::System.Data.DataColumn("HariSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHariSales);
                this.columnHariKirim = new global::System.Data.DataColumn("HariKirim", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHariKirim);
                this.columnMaxJual = new global::System.Data.DataColumn("MaxJual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxJual);
                this.columnMaxBayar = new global::System.Data.DataColumn("MaxBayar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxBayar);
                this.columnRLB = new global::System.Data.DataColumn("RLB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRLB);
                this.columnLP = new global::System.Data.DataColumn("LP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLP);
                this.columnSisaPlafon = new global::System.Data.DataColumn("SisaPlafon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSisaPlafon);
                this.columnTokoID.AllowDBNull = false;
                this.columnTokoID.MaxLength = 7;
                this.columnNamaToko.AllowDBNull = false;
                this.columnNamaToko.MaxLength = 31;
                this.columnPiutangNota.ReadOnly = true;
                this.columnGiroTolak.ReadOnly = true;
                this.columnGITNotaJual.ReadOnly = true;
                this.columnDODlmProses.ReadOnly = true;
                this.columnSisaPiutang.ReadOnly = true;
                this.columnKeterangan.ReadOnly = true;
                this.columnKeterangan.MaxLength = 12;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPlafonBaru ds = new dsPlafonBaru();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UpdateJSTokoDataTable : global::System.Data.TypedTableBase<UpdateJSTokoRow> {
            
            private global::System.Data.DataColumn columnKodeToko;
            
            private global::System.Data.DataColumn columnTokoID;
            
            private global::System.Data.DataColumn columnNamaToko;
            
            private global::System.Data.DataColumn columnWilID;
            
            private global::System.Data.DataColumn columnAlamat;
            
            private global::System.Data.DataColumn columnDaerah;
            
            private global::System.Data.DataColumn columnKota;
            
            private global::System.Data.DataColumn columnHariSales;
            
            private global::System.Data.DataColumn columnNomNetto;
            
            private global::System.Data.DataColumn columnRataNetto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateJSTokoDataTable() {
                this.TableName = "UpdateJSToko";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UpdateJSTokoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UpdateJSTokoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeTokoColumn {
                get {
                    return this.columnKodeToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TokoIDColumn {
                get {
                    return this.columnTokoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaTokoColumn {
                get {
                    return this.columnNamaToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WilIDColumn {
                get {
                    return this.columnWilID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlamatColumn {
                get {
                    return this.columnAlamat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaerahColumn {
                get {
                    return this.columnDaerah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaColumn {
                get {
                    return this.columnKota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HariSalesColumn {
                get {
                    return this.columnHariSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomNettoColumn {
                get {
                    return this.columnNomNetto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RataNettoColumn {
                get {
                    return this.columnRataNetto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateJSTokoRow this[int index] {
                get {
                    return ((UpdateJSTokoRow)(this.Rows[index]));
                }
            }
            
            public event UpdateJSTokoRowChangeEventHandler UpdateJSTokoRowChanging;
            
            public event UpdateJSTokoRowChangeEventHandler UpdateJSTokoRowChanged;
            
            public event UpdateJSTokoRowChangeEventHandler UpdateJSTokoRowDeleting;
            
            public event UpdateJSTokoRowChangeEventHandler UpdateJSTokoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUpdateJSTokoRow(UpdateJSTokoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateJSTokoRow AddUpdateJSTokoRow(string KodeToko, string TokoID, string NamaToko, string WilID, string Alamat, string Daerah, string Kota, int HariSales, decimal NomNetto, decimal RataNetto) {
                UpdateJSTokoRow rowUpdateJSTokoRow = ((UpdateJSTokoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeToko,
                        TokoID,
                        NamaToko,
                        WilID,
                        Alamat,
                        Daerah,
                        Kota,
                        HariSales,
                        NomNetto,
                        RataNetto};
                rowUpdateJSTokoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUpdateJSTokoRow);
                return rowUpdateJSTokoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateJSTokoRow FindByKodeToko(string KodeToko) {
                return ((UpdateJSTokoRow)(this.Rows.Find(new object[] {
                            KodeToko})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UpdateJSTokoDataTable cln = ((UpdateJSTokoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UpdateJSTokoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeToko = base.Columns["KodeToko"];
                this.columnTokoID = base.Columns["TokoID"];
                this.columnNamaToko = base.Columns["NamaToko"];
                this.columnWilID = base.Columns["WilID"];
                this.columnAlamat = base.Columns["Alamat"];
                this.columnDaerah = base.Columns["Daerah"];
                this.columnKota = base.Columns["Kota"];
                this.columnHariSales = base.Columns["HariSales"];
                this.columnNomNetto = base.Columns["NomNetto"];
                this.columnRataNetto = base.Columns["RataNetto"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeToko = new global::System.Data.DataColumn("KodeToko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeToko);
                this.columnTokoID = new global::System.Data.DataColumn("TokoID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTokoID);
                this.columnNamaToko = new global::System.Data.DataColumn("NamaToko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaToko);
                this.columnWilID = new global::System.Data.DataColumn("WilID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWilID);
                this.columnAlamat = new global::System.Data.DataColumn("Alamat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlamat);
                this.columnDaerah = new global::System.Data.DataColumn("Daerah", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaerah);
                this.columnKota = new global::System.Data.DataColumn("Kota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKota);
                this.columnHariSales = new global::System.Data.DataColumn("HariSales", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHariSales);
                this.columnNomNetto = new global::System.Data.DataColumn("NomNetto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomNetto);
                this.columnRataNetto = new global::System.Data.DataColumn("RataNetto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRataNetto);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKodeToko}, true));
                this.columnKodeToko.AllowDBNull = false;
                this.columnKodeToko.Unique = true;
                this.columnKodeToko.MaxLength = 19;
                this.columnTokoID.AllowDBNull = false;
                this.columnTokoID.MaxLength = 7;
                this.columnNamaToko.AllowDBNull = false;
                this.columnNamaToko.MaxLength = 31;
                this.columnWilID.AllowDBNull = false;
                this.columnWilID.MaxLength = 7;
                this.columnAlamat.AllowDBNull = false;
                this.columnAlamat.MaxLength = 60;
                this.columnDaerah.AllowDBNull = false;
                this.columnDaerah.MaxLength = 25;
                this.columnKota.AllowDBNull = false;
                this.columnKota.MaxLength = 20;
                this.columnHariSales.AllowDBNull = false;
                this.columnNomNetto.ReadOnly = true;
                this.columnRataNetto.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateJSTokoRow NewUpdateJSTokoRow() {
                return ((UpdateJSTokoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UpdateJSTokoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UpdateJSTokoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UpdateJSTokoRowChanged != null)) {
                    this.UpdateJSTokoRowChanged(this, new UpdateJSTokoRowChangeEvent(((UpdateJSTokoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UpdateJSTokoRowChanging != null)) {
                    this.UpdateJSTokoRowChanging(this, new UpdateJSTokoRowChangeEvent(((UpdateJSTokoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UpdateJSTokoRowDeleted != null)) {
                    this.UpdateJSTokoRowDeleted(this, new UpdateJSTokoRowChangeEvent(((UpdateJSTokoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UpdateJSTokoRowDeleting != null)) {
                    this.UpdateJSTokoRowDeleting(this, new UpdateJSTokoRowChangeEvent(((UpdateJSTokoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUpdateJSTokoRow(UpdateJSTokoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPlafonBaru ds = new dsPlafonBaru();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UpdateJSTokoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JSTokoIntiDataTable : global::System.Data.TypedTableBase<JSTokoIntiRow> {
            
            private global::System.Data.DataColumn columnNamaToko;
            
            private global::System.Data.DataColumn columnKota;
            
            private global::System.Data.DataColumn columnAlamat;
            
            private global::System.Data.DataColumn columnWilID;
            
            private global::System.Data.DataColumn columnTokoID;
            
            private global::System.Data.DataColumn columnTargetToko;
            
            private global::System.Data.DataColumn columnJSLama;
            
            private global::System.Data.DataColumn columnJSBaru;
            
            private global::System.Data.DataColumn columnPlafonLama;
            
            private global::System.Data.DataColumn columnPlafonBaru;
            
            private global::System.Data.DataColumn columntambahanexpired;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JSTokoIntiDataTable() {
                this.TableName = "JSTokoInti";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal JSTokoIntiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected JSTokoIntiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaTokoColumn {
                get {
                    return this.columnNamaToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaColumn {
                get {
                    return this.columnKota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlamatColumn {
                get {
                    return this.columnAlamat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WilIDColumn {
                get {
                    return this.columnWilID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TokoIDColumn {
                get {
                    return this.columnTokoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetTokoColumn {
                get {
                    return this.columnTargetToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JSLamaColumn {
                get {
                    return this.columnJSLama;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JSBaruColumn {
                get {
                    return this.columnJSBaru;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlafonLamaColumn {
                get {
                    return this.columnPlafonLama;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlafonBaruColumn {
                get {
                    return this.columnPlafonBaru;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tambahanexpiredColumn {
                get {
                    return this.columntambahanexpired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JSTokoIntiRow this[int index] {
                get {
                    return ((JSTokoIntiRow)(this.Rows[index]));
                }
            }
            
            public event JSTokoIntiRowChangeEventHandler JSTokoIntiRowChanging;
            
            public event JSTokoIntiRowChangeEventHandler JSTokoIntiRowChanged;
            
            public event JSTokoIntiRowChangeEventHandler JSTokoIntiRowDeleting;
            
            public event JSTokoIntiRowChangeEventHandler JSTokoIntiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddJSTokoIntiRow(JSTokoIntiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JSTokoIntiRow AddJSTokoIntiRow(string NamaToko, string Kota, string Alamat, string WilID, string TokoID, string TargetToko, string JSLama, string JSBaru, string PlafonLama, string PlafonBaru, string tambahanexpired) {
                JSTokoIntiRow rowJSTokoIntiRow = ((JSTokoIntiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaToko,
                        Kota,
                        Alamat,
                        WilID,
                        TokoID,
                        TargetToko,
                        JSLama,
                        JSBaru,
                        PlafonLama,
                        PlafonBaru,
                        tambahanexpired};
                rowJSTokoIntiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJSTokoIntiRow);
                return rowJSTokoIntiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                JSTokoIntiDataTable cln = ((JSTokoIntiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JSTokoIntiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaToko = base.Columns["NamaToko"];
                this.columnKota = base.Columns["Kota"];
                this.columnAlamat = base.Columns["Alamat"];
                this.columnWilID = base.Columns["WilID"];
                this.columnTokoID = base.Columns["TokoID"];
                this.columnTargetToko = base.Columns["TargetToko"];
                this.columnJSLama = base.Columns["JSLama"];
                this.columnJSBaru = base.Columns["JSBaru"];
                this.columnPlafonLama = base.Columns["PlafonLama"];
                this.columnPlafonBaru = base.Columns["PlafonBaru"];
                this.columntambahanexpired = base.Columns["tambahanexpired"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaToko = new global::System.Data.DataColumn("NamaToko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaToko);
                this.columnKota = new global::System.Data.DataColumn("Kota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKota);
                this.columnAlamat = new global::System.Data.DataColumn("Alamat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlamat);
                this.columnWilID = new global::System.Data.DataColumn("WilID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWilID);
                this.columnTokoID = new global::System.Data.DataColumn("TokoID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTokoID);
                this.columnTargetToko = new global::System.Data.DataColumn("TargetToko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetToko);
                this.columnJSLama = new global::System.Data.DataColumn("JSLama", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJSLama);
                this.columnJSBaru = new global::System.Data.DataColumn("JSBaru", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJSBaru);
                this.columnPlafonLama = new global::System.Data.DataColumn("PlafonLama", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlafonLama);
                this.columnPlafonBaru = new global::System.Data.DataColumn("PlafonBaru", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlafonBaru);
                this.columntambahanexpired = new global::System.Data.DataColumn("tambahanexpired", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntambahanexpired);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JSTokoIntiRow NewJSTokoIntiRow() {
                return ((JSTokoIntiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JSTokoIntiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(JSTokoIntiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JSTokoIntiRowChanged != null)) {
                    this.JSTokoIntiRowChanged(this, new JSTokoIntiRowChangeEvent(((JSTokoIntiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JSTokoIntiRowChanging != null)) {
                    this.JSTokoIntiRowChanging(this, new JSTokoIntiRowChangeEvent(((JSTokoIntiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JSTokoIntiRowDeleted != null)) {
                    this.JSTokoIntiRowDeleted(this, new JSTokoIntiRowChangeEvent(((JSTokoIntiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JSTokoIntiRowDeleting != null)) {
                    this.JSTokoIntiRowDeleting(this, new JSTokoIntiRowChangeEvent(((JSTokoIntiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveJSTokoIntiRow(JSTokoIntiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPlafonBaru ds = new dsPlafonBaru();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JSTokoIntiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataRow : global::System.Data.DataRow {
            
            private DataDataTable tableData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TokoID {
                get {
                    return ((string)(this[this.tableData.TokoIDColumn]));
                }
                set {
                    this[this.tableData.TokoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaToko {
                get {
                    return ((string)(this[this.tableData.NamaTokoColumn]));
                }
                set {
                    this[this.tableData.NamaTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalBayar {
                get {
                    try {
                        return ((decimal)(this[this.tableData.TotalBayarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalBayar\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TotalBayarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RatarataBayar {
                get {
                    try {
                        return ((decimal)(this[this.tableData.RatarataBayarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RatarataBayar\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RatarataBayarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PotensiBerkembang {
                get {
                    try {
                        return ((decimal)(this[this.tableData.PotensiBerkembangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PotensiBerkembang\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.PotensiBerkembangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal KemampuanBayar {
                get {
                    try {
                        return ((decimal)(this[this.tableData.KemampuanBayarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KemampuanBayar\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KemampuanBayarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Plafon {
                get {
                    try {
                        return ((decimal)(this[this.tableData.PlafonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Plafon\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.PlafonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PiutangNota {
                get {
                    try {
                        return ((decimal)(this[this.tableData.PiutangNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiutangNota\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.PiutangNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GiroTolak {
                get {
                    try {
                        return ((decimal)(this[this.tableData.GiroTolakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GiroTolak\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.GiroTolakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GITNotaJual {
                get {
                    try {
                        return ((decimal)(this[this.tableData.GITNotaJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GITNotaJual\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.GITNotaJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DODlmProses {
                get {
                    try {
                        return ((decimal)(this[this.tableData.DODlmProsesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DODlmProses\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DODlmProsesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SisaPiutang {
                get {
                    try {
                        return ((decimal)(this[this.tableData.SisaPiutangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SisaPiutang\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SisaPiutangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Keterangan {
                get {
                    try {
                        return ((string)(this[this.tableData.KeteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Keterangan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KeteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WilID {
                get {
                    try {
                        return ((string)(this[this.tableData.WilIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WilID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.WilIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Alamat {
                get {
                    try {
                        return ((string)(this[this.tableData.AlamatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alamat\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AlamatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlafonTambahan {
                get {
                    try {
                        return ((string)(this[this.tableData.PlafonTambahanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlafonTambahan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.PlafonTambahanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalPlafon {
                get {
                    try {
                        return ((string)(this[this.tableData.TotalPlafonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPlafon\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TotalPlafonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TargetOmset {
                get {
                    try {
                        return ((string)(this[this.tableData.TargetOmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetOmset\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TargetOmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatusPN {
                get {
                    try {
                        return ((string)(this[this.tableData.StatusPNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusPN\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.StatusPNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TW {
                get {
                    try {
                        return ((string)(this[this.tableData.TWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TW\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JS {
                get {
                    try {
                        return ((string)(this[this.tableData.JSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JS\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JangkaWaktuKredit {
                get {
                    try {
                        return ((string)(this[this.tableData.JangkaWaktuKreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JangkaWaktuKredit\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JangkaWaktuKreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HariSales {
                get {
                    try {
                        return ((string)(this[this.tableData.HariSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HariSales\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.HariSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HariKirim {
                get {
                    try {
                        return ((string)(this[this.tableData.HariKirimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HariKirim\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.HariKirimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaxJual {
                get {
                    try {
                        return ((string)(this[this.tableData.MaxJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxJual\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.MaxJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaxBayar {
                get {
                    try {
                        return ((string)(this[this.tableData.MaxBayarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxBayar\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.MaxBayarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RLB {
                get {
                    try {
                        return ((string)(this[this.tableData.RLBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RLB\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RLBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LP {
                get {
                    try {
                        return ((string)(this[this.tableData.LPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LP\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.LPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SisaPlafon {
                get {
                    try {
                        return ((string)(this[this.tableData.SisaPlafonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SisaPlafon\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SisaPlafonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalBayarNull() {
                return this.IsNull(this.tableData.TotalBayarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalBayarNull() {
                this[this.tableData.TotalBayarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRatarataBayarNull() {
                return this.IsNull(this.tableData.RatarataBayarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRatarataBayarNull() {
                this[this.tableData.RatarataBayarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPotensiBerkembangNull() {
                return this.IsNull(this.tableData.PotensiBerkembangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPotensiBerkembangNull() {
                this[this.tableData.PotensiBerkembangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKemampuanBayarNull() {
                return this.IsNull(this.tableData.KemampuanBayarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKemampuanBayarNull() {
                this[this.tableData.KemampuanBayarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlafonNull() {
                return this.IsNull(this.tableData.PlafonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlafonNull() {
                this[this.tableData.PlafonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiutangNotaNull() {
                return this.IsNull(this.tableData.PiutangNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiutangNotaNull() {
                this[this.tableData.PiutangNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiroTolakNull() {
                return this.IsNull(this.tableData.GiroTolakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiroTolakNull() {
                this[this.tableData.GiroTolakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGITNotaJualNull() {
                return this.IsNull(this.tableData.GITNotaJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGITNotaJualNull() {
                this[this.tableData.GITNotaJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDODlmProsesNull() {
                return this.IsNull(this.tableData.DODlmProsesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDODlmProsesNull() {
                this[this.tableData.DODlmProsesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSisaPiutangNull() {
                return this.IsNull(this.tableData.SisaPiutangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSisaPiutangNull() {
                this[this.tableData.SisaPiutangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeteranganNull() {
                return this.IsNull(this.tableData.KeteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeteranganNull() {
                this[this.tableData.KeteranganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWilIDNull() {
                return this.IsNull(this.tableData.WilIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWilIDNull() {
                this[this.tableData.WilIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlamatNull() {
                return this.IsNull(this.tableData.AlamatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlamatNull() {
                this[this.tableData.AlamatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlafonTambahanNull() {
                return this.IsNull(this.tableData.PlafonTambahanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlafonTambahanNull() {
                this[this.tableData.PlafonTambahanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPlafonNull() {
                return this.IsNull(this.tableData.TotalPlafonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPlafonNull() {
                this[this.tableData.TotalPlafonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetOmsetNull() {
                return this.IsNull(this.tableData.TargetOmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetOmsetNull() {
                this[this.tableData.TargetOmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusPNNull() {
                return this.IsNull(this.tableData.StatusPNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusPNNull() {
                this[this.tableData.StatusPNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTWNull() {
                return this.IsNull(this.tableData.TWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTWNull() {
                this[this.tableData.TWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJSNull() {
                return this.IsNull(this.tableData.JSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJSNull() {
                this[this.tableData.JSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJangkaWaktuKreditNull() {
                return this.IsNull(this.tableData.JangkaWaktuKreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJangkaWaktuKreditNull() {
                this[this.tableData.JangkaWaktuKreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHariSalesNull() {
                return this.IsNull(this.tableData.HariSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHariSalesNull() {
                this[this.tableData.HariSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHariKirimNull() {
                return this.IsNull(this.tableData.HariKirimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHariKirimNull() {
                this[this.tableData.HariKirimColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxJualNull() {
                return this.IsNull(this.tableData.MaxJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxJualNull() {
                this[this.tableData.MaxJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxBayarNull() {
                return this.IsNull(this.tableData.MaxBayarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxBayarNull() {
                this[this.tableData.MaxBayarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRLBNull() {
                return this.IsNull(this.tableData.RLBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRLBNull() {
                this[this.tableData.RLBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLPNull() {
                return this.IsNull(this.tableData.LPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLPNull() {
                this[this.tableData.LPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSisaPlafonNull() {
                return this.IsNull(this.tableData.SisaPlafonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSisaPlafonNull() {
                this[this.tableData.SisaPlafonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UpdateJSTokoRow : global::System.Data.DataRow {
            
            private UpdateJSTokoDataTable tableUpdateJSToko;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UpdateJSTokoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUpdateJSToko = ((UpdateJSTokoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeToko {
                get {
                    return ((string)(this[this.tableUpdateJSToko.KodeTokoColumn]));
                }
                set {
                    this[this.tableUpdateJSToko.KodeTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TokoID {
                get {
                    return ((string)(this[this.tableUpdateJSToko.TokoIDColumn]));
                }
                set {
                    this[this.tableUpdateJSToko.TokoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaToko {
                get {
                    return ((string)(this[this.tableUpdateJSToko.NamaTokoColumn]));
                }
                set {
                    this[this.tableUpdateJSToko.NamaTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WilID {
                get {
                    return ((string)(this[this.tableUpdateJSToko.WilIDColumn]));
                }
                set {
                    this[this.tableUpdateJSToko.WilIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Alamat {
                get {
                    return ((string)(this[this.tableUpdateJSToko.AlamatColumn]));
                }
                set {
                    this[this.tableUpdateJSToko.AlamatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Daerah {
                get {
                    return ((string)(this[this.tableUpdateJSToko.DaerahColumn]));
                }
                set {
                    this[this.tableUpdateJSToko.DaerahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kota {
                get {
                    return ((string)(this[this.tableUpdateJSToko.KotaColumn]));
                }
                set {
                    this[this.tableUpdateJSToko.KotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HariSales {
                get {
                    return ((int)(this[this.tableUpdateJSToko.HariSalesColumn]));
                }
                set {
                    this[this.tableUpdateJSToko.HariSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NomNetto {
                get {
                    try {
                        return ((decimal)(this[this.tableUpdateJSToko.NomNettoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NomNetto\' in table \'UpdateJSToko\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdateJSToko.NomNettoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RataNetto {
                get {
                    try {
                        return ((decimal)(this[this.tableUpdateJSToko.RataNettoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RataNetto\' in table \'UpdateJSToko\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdateJSToko.RataNettoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomNettoNull() {
                return this.IsNull(this.tableUpdateJSToko.NomNettoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomNettoNull() {
                this[this.tableUpdateJSToko.NomNettoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRataNettoNull() {
                return this.IsNull(this.tableUpdateJSToko.RataNettoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRataNettoNull() {
                this[this.tableUpdateJSToko.RataNettoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class JSTokoIntiRow : global::System.Data.DataRow {
            
            private JSTokoIntiDataTable tableJSTokoInti;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal JSTokoIntiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJSTokoInti = ((JSTokoIntiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaToko {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.NamaTokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaToko\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.NamaTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kota {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.KotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kota\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.KotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Alamat {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.AlamatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alamat\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.AlamatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WilID {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.WilIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WilID\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.WilIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TokoID {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.TokoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TokoID\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.TokoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TargetToko {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.TargetTokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetToko\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.TargetTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JSLama {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.JSLamaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JSLama\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.JSLamaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JSBaru {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.JSBaruColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JSBaru\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.JSBaruColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlafonLama {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.PlafonLamaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlafonLama\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.PlafonLamaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlafonBaru {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.PlafonBaruColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlafonBaru\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.PlafonBaruColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tambahanexpired {
                get {
                    try {
                        return ((string)(this[this.tableJSTokoInti.tambahanexpiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tambahanexpired\' in table \'JSTokoInti\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJSTokoInti.tambahanexpiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaTokoNull() {
                return this.IsNull(this.tableJSTokoInti.NamaTokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaTokoNull() {
                this[this.tableJSTokoInti.NamaTokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKotaNull() {
                return this.IsNull(this.tableJSTokoInti.KotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKotaNull() {
                this[this.tableJSTokoInti.KotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlamatNull() {
                return this.IsNull(this.tableJSTokoInti.AlamatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlamatNull() {
                this[this.tableJSTokoInti.AlamatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWilIDNull() {
                return this.IsNull(this.tableJSTokoInti.WilIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWilIDNull() {
                this[this.tableJSTokoInti.WilIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTokoIDNull() {
                return this.IsNull(this.tableJSTokoInti.TokoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTokoIDNull() {
                this[this.tableJSTokoInti.TokoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetTokoNull() {
                return this.IsNull(this.tableJSTokoInti.TargetTokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetTokoNull() {
                this[this.tableJSTokoInti.TargetTokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJSLamaNull() {
                return this.IsNull(this.tableJSTokoInti.JSLamaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJSLamaNull() {
                this[this.tableJSTokoInti.JSLamaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJSBaruNull() {
                return this.IsNull(this.tableJSTokoInti.JSBaruColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJSBaruNull() {
                this[this.tableJSTokoInti.JSBaruColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlafonLamaNull() {
                return this.IsNull(this.tableJSTokoInti.PlafonLamaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlafonLamaNull() {
                this[this.tableJSTokoInti.PlafonLamaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlafonBaruNull() {
                return this.IsNull(this.tableJSTokoInti.PlafonBaruColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlafonBaruNull() {
                this[this.tableJSTokoInti.PlafonBaruColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstambahanexpiredNull() {
                return this.IsNull(this.tableJSTokoInti.tambahanexpiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettambahanexpiredNull() {
                this[this.tableJSTokoInti.tambahanexpiredColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            
            private DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UpdateJSTokoRowChangeEvent : global::System.EventArgs {
            
            private UpdateJSTokoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateJSTokoRowChangeEvent(UpdateJSTokoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UpdateJSTokoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class JSTokoIntiRowChangeEvent : global::System.EventArgs {
            
            private JSTokoIntiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JSTokoIntiRowChangeEvent(JSTokoIntiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JSTokoIntiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591