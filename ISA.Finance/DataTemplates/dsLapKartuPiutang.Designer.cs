//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8762
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Finance.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsLapKartuPiutang")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsLapKartuPiutang : global::System.Data.DataSet {
        
        private DetailDataTable tableDetail;
        
        private RekapDataTable tableRekap;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsLapKartuPiutang() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsLapKartuPiutang(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Detail"] != null)) {
                    base.Tables.Add(new DetailDataTable(ds.Tables["Detail"]));
                }
                if ((ds.Tables["Rekap"] != null)) {
                    base.Tables.Add(new RekapDataTable(ds.Tables["Rekap"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DetailDataTable Detail {
            get {
                return this.tableDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RekapDataTable Rekap {
            get {
                return this.tableRekap;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsLapKartuPiutang cln = ((dsLapKartuPiutang)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Detail"] != null)) {
                    base.Tables.Add(new DetailDataTable(ds.Tables["Detail"]));
                }
                if ((ds.Tables["Rekap"] != null)) {
                    base.Tables.Add(new RekapDataTable(ds.Tables["Rekap"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDetail = ((DetailDataTable)(base.Tables["Detail"]));
            if ((initTable == true)) {
                if ((this.tableDetail != null)) {
                    this.tableDetail.InitVars();
                }
            }
            this.tableRekap = ((RekapDataTable)(base.Tables["Rekap"]));
            if ((initTable == true)) {
                if ((this.tableRekap != null)) {
                    this.tableRekap.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsLapKartuPiutang";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsLapKartuPiutang.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDetail = new DetailDataTable();
            base.Tables.Add(this.tableDetail);
            this.tableRekap = new RekapDataTable();
            base.Tables.Add(this.tableRekap);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRekap() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsLapKartuPiutang ds = new dsLapKartuPiutang();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DetailRowChangeEventHandler(object sender, DetailRowChangeEvent e);
        
        public delegate void RekapRowChangeEventHandler(object sender, RekapRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DetailDataTable : global::System.Data.TypedTableBase<DetailRow> {
            
            private global::System.Data.DataColumn columnBulan;
            
            private global::System.Data.DataColumn columnNamaBulan;
            
            private global::System.Data.DataColumn columnTahun;
            
            private global::System.Data.DataColumn columnTahunBulan;
            
            private global::System.Data.DataColumn columnRpJual;
            
            private global::System.Data.DataColumn columnRpKas;
            
            private global::System.Data.DataColumn columnRpTransfer;
            
            private global::System.Data.DataColumn columnRpGiroCair;
            
            private global::System.Data.DataColumn columnRpRetur;
            
            private global::System.Data.DataColumn columnRpLainlain;
            
            private global::System.Data.DataColumn columnTempTransaksi;
            
            private global::System.Data.DataColumn columnTotalTransaksi;
            
            private global::System.Data.DataColumn columnGiroDiterima;
            
            private global::System.Data.DataColumn columnGiroCair;
            
            private global::System.Data.DataColumn columnGiroDitolak;
            
            private global::System.Data.DataColumn columnTempTransaksiGiro;
            
            private global::System.Data.DataColumn columnTotalPiutanggiro;
            
            private global::System.Data.DataColumn columnRpBayarSubTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailDataTable() {
                this.TableName = "Detail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BulanColumn {
                get {
                    return this.columnBulan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBulanColumn {
                get {
                    return this.columnNamaBulan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TahunColumn {
                get {
                    return this.columnTahun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TahunBulanColumn {
                get {
                    return this.columnTahunBulan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpJualColumn {
                get {
                    return this.columnRpJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpKasColumn {
                get {
                    return this.columnRpKas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpTransferColumn {
                get {
                    return this.columnRpTransfer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpGiroCairColumn {
                get {
                    return this.columnRpGiroCair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpReturColumn {
                get {
                    return this.columnRpRetur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpLainlainColumn {
                get {
                    return this.columnRpLainlain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TempTransaksiColumn {
                get {
                    return this.columnTempTransaksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalTransaksiColumn {
                get {
                    return this.columnTotalTransaksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiroDiterimaColumn {
                get {
                    return this.columnGiroDiterima;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiroCairColumn {
                get {
                    return this.columnGiroCair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiroDitolakColumn {
                get {
                    return this.columnGiroDitolak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TempTransaksiGiroColumn {
                get {
                    return this.columnTempTransaksiGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPiutanggiroColumn {
                get {
                    return this.columnTotalPiutanggiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpBayarSubTotalColumn {
                get {
                    return this.columnRpBayarSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailRow this[int index] {
                get {
                    return ((DetailRow)(this.Rows[index]));
                }
            }
            
            public event DetailRowChangeEventHandler DetailRowChanging;
            
            public event DetailRowChangeEventHandler DetailRowChanged;
            
            public event DetailRowChangeEventHandler DetailRowDeleting;
            
            public event DetailRowChangeEventHandler DetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDetailRow(DetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailRow AddDetailRow(
                        int Bulan, 
                        string NamaBulan, 
                        string Tahun, 
                        string TahunBulan, 
                        int RpJual, 
                        int RpKas, 
                        int RpTransfer, 
                        int RpGiroCair, 
                        int RpRetur, 
                        int RpLainlain, 
                        int TempTransaksi, 
                        int TotalTransaksi, 
                        int GiroDiterima, 
                        int GiroCair, 
                        int GiroDitolak, 
                        int TempTransaksiGiro, 
                        int TotalPiutanggiro, 
                        string RpBayarSubTotal) {
                DetailRow rowDetailRow = ((DetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Bulan,
                        NamaBulan,
                        Tahun,
                        TahunBulan,
                        RpJual,
                        RpKas,
                        RpTransfer,
                        RpGiroCair,
                        RpRetur,
                        RpLainlain,
                        TempTransaksi,
                        TotalTransaksi,
                        GiroDiterima,
                        GiroCair,
                        GiroDitolak,
                        TempTransaksiGiro,
                        TotalPiutanggiro,
                        RpBayarSubTotal};
                rowDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDetailRow);
                return rowDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DetailDataTable cln = ((DetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBulan = base.Columns["Bulan"];
                this.columnNamaBulan = base.Columns["NamaBulan"];
                this.columnTahun = base.Columns["Tahun"];
                this.columnTahunBulan = base.Columns["TahunBulan"];
                this.columnRpJual = base.Columns["RpJual"];
                this.columnRpKas = base.Columns["RpKas"];
                this.columnRpTransfer = base.Columns["RpTransfer"];
                this.columnRpGiroCair = base.Columns["RpGiroCair"];
                this.columnRpRetur = base.Columns["RpRetur"];
                this.columnRpLainlain = base.Columns["RpLainlain"];
                this.columnTempTransaksi = base.Columns["TempTransaksi"];
                this.columnTotalTransaksi = base.Columns["TotalTransaksi"];
                this.columnGiroDiterima = base.Columns["GiroDiterima"];
                this.columnGiroCair = base.Columns["GiroCair"];
                this.columnGiroDitolak = base.Columns["GiroDitolak"];
                this.columnTempTransaksiGiro = base.Columns["TempTransaksiGiro"];
                this.columnTotalPiutanggiro = base.Columns["TotalPiutanggiro"];
                this.columnRpBayarSubTotal = base.Columns["RpBayarSubTotal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBulan = new global::System.Data.DataColumn("Bulan", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBulan);
                this.columnNamaBulan = new global::System.Data.DataColumn("NamaBulan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBulan);
                this.columnTahun = new global::System.Data.DataColumn("Tahun", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTahun);
                this.columnTahunBulan = new global::System.Data.DataColumn("TahunBulan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTahunBulan);
                this.columnRpJual = new global::System.Data.DataColumn("RpJual", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpJual);
                this.columnRpKas = new global::System.Data.DataColumn("RpKas", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpKas);
                this.columnRpTransfer = new global::System.Data.DataColumn("RpTransfer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpTransfer);
                this.columnRpGiroCair = new global::System.Data.DataColumn("RpGiroCair", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpGiroCair);
                this.columnRpRetur = new global::System.Data.DataColumn("RpRetur", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpRetur);
                this.columnRpLainlain = new global::System.Data.DataColumn("RpLainlain", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpLainlain);
                this.columnTempTransaksi = new global::System.Data.DataColumn("TempTransaksi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempTransaksi);
                this.columnTotalTransaksi = new global::System.Data.DataColumn("TotalTransaksi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTransaksi);
                this.columnGiroDiterima = new global::System.Data.DataColumn("GiroDiterima", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiroDiterima);
                this.columnGiroCair = new global::System.Data.DataColumn("GiroCair", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiroCair);
                this.columnGiroDitolak = new global::System.Data.DataColumn("GiroDitolak", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiroDitolak);
                this.columnTempTransaksiGiro = new global::System.Data.DataColumn("TempTransaksiGiro", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempTransaksiGiro);
                this.columnTotalPiutanggiro = new global::System.Data.DataColumn("TotalPiutanggiro", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPiutanggiro);
                this.columnRpBayarSubTotal = new global::System.Data.DataColumn("RpBayarSubTotal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpBayarSubTotal);
                this.columnBulan.ReadOnly = true;
                this.columnNamaBulan.ReadOnly = true;
                this.columnNamaBulan.MaxLength = 10;
                this.columnTahun.ReadOnly = true;
                this.columnTahun.MaxLength = 1;
                this.columnTahunBulan.ReadOnly = true;
                this.columnTahunBulan.MaxLength = 7;
                this.columnRpJual.ReadOnly = true;
                this.columnRpKas.ReadOnly = true;
                this.columnRpTransfer.ReadOnly = true;
                this.columnRpGiroCair.ReadOnly = true;
                this.columnRpRetur.ReadOnly = true;
                this.columnRpLainlain.ReadOnly = true;
                this.columnTempTransaksi.ReadOnly = true;
                this.columnTotalTransaksi.ReadOnly = true;
                this.columnGiroDiterima.ReadOnly = true;
                this.columnGiroCair.ReadOnly = true;
                this.columnGiroDitolak.ReadOnly = true;
                this.columnTempTransaksiGiro.ReadOnly = true;
                this.columnTotalPiutanggiro.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailRow NewDetailRow() {
                return ((DetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DetailRowChanged != null)) {
                    this.DetailRowChanged(this, new DetailRowChangeEvent(((DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DetailRowChanging != null)) {
                    this.DetailRowChanging(this, new DetailRowChangeEvent(((DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DetailRowDeleted != null)) {
                    this.DetailRowDeleted(this, new DetailRowChangeEvent(((DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DetailRowDeleting != null)) {
                    this.DetailRowDeleting(this, new DetailRowChangeEvent(((DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDetailRow(DetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsLapKartuPiutang ds = new dsLapKartuPiutang();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RekapDataTable : global::System.Data.TypedTableBase<RekapRow> {
            
            private global::System.Data.DataColumn columnTotalTempo;
            
            private global::System.Data.DataColumn columnTotalPlafon;
            
            private global::System.Data.DataColumn columnRataJual;
            
            private global::System.Data.DataColumn columnMaxBayar;
            
            private global::System.Data.DataColumn columnTotalSaldoPiutang;
            
            private global::System.Data.DataColumn columnTotalOverdue;
            
            private global::System.Data.DataColumn columnRasioBayar;
            
            private global::System.Data.DataColumn columnTotalRetur;
            
            private global::System.Data.DataColumn columnRataTagih;
            
            private global::System.Data.DataColumn columnRpGIT;
            
            private global::System.Data.DataColumn columnPlafon;
            
            private global::System.Data.DataColumn columnPlafonTambahan;
            
            private global::System.Data.DataColumn columnSisaPlafon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RekapDataTable() {
                this.TableName = "Rekap";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RekapDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RekapDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalTempoColumn {
                get {
                    return this.columnTotalTempo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPlafonColumn {
                get {
                    return this.columnTotalPlafon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RataJualColumn {
                get {
                    return this.columnRataJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaxBayarColumn {
                get {
                    return this.columnMaxBayar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalSaldoPiutangColumn {
                get {
                    return this.columnTotalSaldoPiutang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalOverdueColumn {
                get {
                    return this.columnTotalOverdue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RasioBayarColumn {
                get {
                    return this.columnRasioBayar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalReturColumn {
                get {
                    return this.columnTotalRetur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RataTagihColumn {
                get {
                    return this.columnRataTagih;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpGITColumn {
                get {
                    return this.columnRpGIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlafonColumn {
                get {
                    return this.columnPlafon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlafonTambahanColumn {
                get {
                    return this.columnPlafonTambahan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SisaPlafonColumn {
                get {
                    return this.columnSisaPlafon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RekapRow this[int index] {
                get {
                    return ((RekapRow)(this.Rows[index]));
                }
            }
            
            public event RekapRowChangeEventHandler RekapRowChanging;
            
            public event RekapRowChangeEventHandler RekapRowChanged;
            
            public event RekapRowChangeEventHandler RekapRowDeleting;
            
            public event RekapRowChangeEventHandler RekapRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRekapRow(RekapRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RekapRow AddRekapRow(int TotalTempo, int TotalPlafon, int RataJual, int MaxBayar, int TotalSaldoPiutang, int TotalOverdue, int RasioBayar, string TotalRetur, string RataTagih, string RpGIT, string Plafon, string PlafonTambahan, string SisaPlafon) {
                RekapRow rowRekapRow = ((RekapRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TotalTempo,
                        TotalPlafon,
                        RataJual,
                        MaxBayar,
                        TotalSaldoPiutang,
                        TotalOverdue,
                        RasioBayar,
                        TotalRetur,
                        RataTagih,
                        RpGIT,
                        Plafon,
                        PlafonTambahan,
                        SisaPlafon};
                rowRekapRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRekapRow);
                return rowRekapRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RekapDataTable cln = ((RekapDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RekapDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTotalTempo = base.Columns["TotalTempo"];
                this.columnTotalPlafon = base.Columns["TotalPlafon"];
                this.columnRataJual = base.Columns["RataJual"];
                this.columnMaxBayar = base.Columns["MaxBayar"];
                this.columnTotalSaldoPiutang = base.Columns["TotalSaldoPiutang"];
                this.columnTotalOverdue = base.Columns["TotalOverdue"];
                this.columnRasioBayar = base.Columns["RasioBayar"];
                this.columnTotalRetur = base.Columns["TotalRetur"];
                this.columnRataTagih = base.Columns["RataTagih"];
                this.columnRpGIT = base.Columns["RpGIT"];
                this.columnPlafon = base.Columns["Plafon"];
                this.columnPlafonTambahan = base.Columns["PlafonTambahan"];
                this.columnSisaPlafon = base.Columns["SisaPlafon"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTotalTempo = new global::System.Data.DataColumn("TotalTempo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTempo);
                this.columnTotalPlafon = new global::System.Data.DataColumn("TotalPlafon", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPlafon);
                this.columnRataJual = new global::System.Data.DataColumn("RataJual", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRataJual);
                this.columnMaxBayar = new global::System.Data.DataColumn("MaxBayar", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxBayar);
                this.columnTotalSaldoPiutang = new global::System.Data.DataColumn("TotalSaldoPiutang", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSaldoPiutang);
                this.columnTotalOverdue = new global::System.Data.DataColumn("TotalOverdue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalOverdue);
                this.columnRasioBayar = new global::System.Data.DataColumn("RasioBayar", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRasioBayar);
                this.columnTotalRetur = new global::System.Data.DataColumn("TotalRetur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalRetur);
                this.columnRataTagih = new global::System.Data.DataColumn("RataTagih", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRataTagih);
                this.columnRpGIT = new global::System.Data.DataColumn("RpGIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpGIT);
                this.columnPlafon = new global::System.Data.DataColumn("Plafon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlafon);
                this.columnPlafonTambahan = new global::System.Data.DataColumn("PlafonTambahan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlafonTambahan);
                this.columnSisaPlafon = new global::System.Data.DataColumn("SisaPlafon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSisaPlafon);
                this.columnTotalTempo.ReadOnly = true;
                this.columnTotalPlafon.ReadOnly = true;
                this.columnRataJual.ReadOnly = true;
                this.columnMaxBayar.ReadOnly = true;
                this.columnTotalSaldoPiutang.ReadOnly = true;
                this.columnTotalOverdue.ReadOnly = true;
                this.columnRasioBayar.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RekapRow NewRekapRow() {
                return ((RekapRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RekapRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RekapRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RekapRowChanged != null)) {
                    this.RekapRowChanged(this, new RekapRowChangeEvent(((RekapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RekapRowChanging != null)) {
                    this.RekapRowChanging(this, new RekapRowChangeEvent(((RekapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RekapRowDeleted != null)) {
                    this.RekapRowDeleted(this, new RekapRowChangeEvent(((RekapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RekapRowDeleting != null)) {
                    this.RekapRowDeleting(this, new RekapRowChangeEvent(((RekapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRekapRow(RekapRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsLapKartuPiutang ds = new dsLapKartuPiutang();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RekapDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DetailRow : global::System.Data.DataRow {
            
            private DetailDataTable tableDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDetail = ((DetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Bulan {
                get {
                    try {
                        return ((int)(this[this.tableDetail.BulanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bulan\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.BulanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBulan {
                get {
                    try {
                        return ((string)(this[this.tableDetail.NamaBulanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBulan\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.NamaBulanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tahun {
                get {
                    try {
                        return ((string)(this[this.tableDetail.TahunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tahun\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.TahunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TahunBulan {
                get {
                    try {
                        return ((string)(this[this.tableDetail.TahunBulanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TahunBulan\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.TahunBulanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RpJual {
                get {
                    try {
                        return ((int)(this[this.tableDetail.RpJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpJual\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.RpJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RpKas {
                get {
                    try {
                        return ((int)(this[this.tableDetail.RpKasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpKas\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.RpKasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RpTransfer {
                get {
                    try {
                        return ((int)(this[this.tableDetail.RpTransferColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpTransfer\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.RpTransferColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RpGiroCair {
                get {
                    try {
                        return ((int)(this[this.tableDetail.RpGiroCairColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpGiroCair\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.RpGiroCairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RpRetur {
                get {
                    try {
                        return ((int)(this[this.tableDetail.RpReturColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpRetur\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.RpReturColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RpLainlain {
                get {
                    try {
                        return ((int)(this[this.tableDetail.RpLainlainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpLainlain\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.RpLainlainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TempTransaksi {
                get {
                    try {
                        return ((int)(this[this.tableDetail.TempTransaksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TempTransaksi\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.TempTransaksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalTransaksi {
                get {
                    try {
                        return ((int)(this[this.tableDetail.TotalTransaksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTransaksi\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.TotalTransaksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GiroDiterima {
                get {
                    try {
                        return ((int)(this[this.tableDetail.GiroDiterimaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GiroDiterima\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.GiroDiterimaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GiroCair {
                get {
                    try {
                        return ((int)(this[this.tableDetail.GiroCairColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GiroCair\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.GiroCairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GiroDitolak {
                get {
                    try {
                        return ((int)(this[this.tableDetail.GiroDitolakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GiroDitolak\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.GiroDitolakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TempTransaksiGiro {
                get {
                    try {
                        return ((int)(this[this.tableDetail.TempTransaksiGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TempTransaksiGiro\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.TempTransaksiGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalPiutanggiro {
                get {
                    try {
                        return ((int)(this[this.tableDetail.TotalPiutanggiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPiutanggiro\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.TotalPiutanggiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpBayarSubTotal {
                get {
                    try {
                        return ((string)(this[this.tableDetail.RpBayarSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpBayarSubTotal\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.RpBayarSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBulanNull() {
                return this.IsNull(this.tableDetail.BulanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBulanNull() {
                this[this.tableDetail.BulanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBulanNull() {
                return this.IsNull(this.tableDetail.NamaBulanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBulanNull() {
                this[this.tableDetail.NamaBulanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTahunNull() {
                return this.IsNull(this.tableDetail.TahunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTahunNull() {
                this[this.tableDetail.TahunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTahunBulanNull() {
                return this.IsNull(this.tableDetail.TahunBulanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTahunBulanNull() {
                this[this.tableDetail.TahunBulanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpJualNull() {
                return this.IsNull(this.tableDetail.RpJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpJualNull() {
                this[this.tableDetail.RpJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpKasNull() {
                return this.IsNull(this.tableDetail.RpKasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpKasNull() {
                this[this.tableDetail.RpKasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpTransferNull() {
                return this.IsNull(this.tableDetail.RpTransferColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpTransferNull() {
                this[this.tableDetail.RpTransferColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpGiroCairNull() {
                return this.IsNull(this.tableDetail.RpGiroCairColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpGiroCairNull() {
                this[this.tableDetail.RpGiroCairColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpReturNull() {
                return this.IsNull(this.tableDetail.RpReturColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpReturNull() {
                this[this.tableDetail.RpReturColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpLainlainNull() {
                return this.IsNull(this.tableDetail.RpLainlainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpLainlainNull() {
                this[this.tableDetail.RpLainlainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTempTransaksiNull() {
                return this.IsNull(this.tableDetail.TempTransaksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTempTransaksiNull() {
                this[this.tableDetail.TempTransaksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalTransaksiNull() {
                return this.IsNull(this.tableDetail.TotalTransaksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalTransaksiNull() {
                this[this.tableDetail.TotalTransaksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiroDiterimaNull() {
                return this.IsNull(this.tableDetail.GiroDiterimaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiroDiterimaNull() {
                this[this.tableDetail.GiroDiterimaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiroCairNull() {
                return this.IsNull(this.tableDetail.GiroCairColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiroCairNull() {
                this[this.tableDetail.GiroCairColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiroDitolakNull() {
                return this.IsNull(this.tableDetail.GiroDitolakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiroDitolakNull() {
                this[this.tableDetail.GiroDitolakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTempTransaksiGiroNull() {
                return this.IsNull(this.tableDetail.TempTransaksiGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTempTransaksiGiroNull() {
                this[this.tableDetail.TempTransaksiGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPiutanggiroNull() {
                return this.IsNull(this.tableDetail.TotalPiutanggiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPiutanggiroNull() {
                this[this.tableDetail.TotalPiutanggiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpBayarSubTotalNull() {
                return this.IsNull(this.tableDetail.RpBayarSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpBayarSubTotalNull() {
                this[this.tableDetail.RpBayarSubTotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RekapRow : global::System.Data.DataRow {
            
            private RekapDataTable tableRekap;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RekapRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRekap = ((RekapDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalTempo {
                get {
                    try {
                        return ((int)(this[this.tableRekap.TotalTempoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTempo\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.TotalTempoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalPlafon {
                get {
                    try {
                        return ((int)(this[this.tableRekap.TotalPlafonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPlafon\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.TotalPlafonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RataJual {
                get {
                    try {
                        return ((int)(this[this.tableRekap.RataJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RataJual\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.RataJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaxBayar {
                get {
                    try {
                        return ((int)(this[this.tableRekap.MaxBayarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxBayar\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.MaxBayarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalSaldoPiutang {
                get {
                    try {
                        return ((int)(this[this.tableRekap.TotalSaldoPiutangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSaldoPiutang\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.TotalSaldoPiutangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalOverdue {
                get {
                    try {
                        return ((int)(this[this.tableRekap.TotalOverdueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalOverdue\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.TotalOverdueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RasioBayar {
                get {
                    try {
                        return ((int)(this[this.tableRekap.RasioBayarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RasioBayar\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.RasioBayarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalRetur {
                get {
                    try {
                        return ((string)(this[this.tableRekap.TotalReturColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalRetur\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.TotalReturColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RataTagih {
                get {
                    try {
                        return ((string)(this[this.tableRekap.RataTagihColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RataTagih\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.RataTagihColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpGIT {
                get {
                    try {
                        return ((string)(this[this.tableRekap.RpGITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpGIT\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.RpGITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Plafon {
                get {
                    try {
                        return ((string)(this[this.tableRekap.PlafonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Plafon\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.PlafonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlafonTambahan {
                get {
                    try {
                        return ((string)(this[this.tableRekap.PlafonTambahanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlafonTambahan\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.PlafonTambahanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SisaPlafon {
                get {
                    try {
                        return ((string)(this[this.tableRekap.SisaPlafonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SisaPlafon\' in table \'Rekap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRekap.SisaPlafonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalTempoNull() {
                return this.IsNull(this.tableRekap.TotalTempoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalTempoNull() {
                this[this.tableRekap.TotalTempoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPlafonNull() {
                return this.IsNull(this.tableRekap.TotalPlafonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPlafonNull() {
                this[this.tableRekap.TotalPlafonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRataJualNull() {
                return this.IsNull(this.tableRekap.RataJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRataJualNull() {
                this[this.tableRekap.RataJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxBayarNull() {
                return this.IsNull(this.tableRekap.MaxBayarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxBayarNull() {
                this[this.tableRekap.MaxBayarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalSaldoPiutangNull() {
                return this.IsNull(this.tableRekap.TotalSaldoPiutangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalSaldoPiutangNull() {
                this[this.tableRekap.TotalSaldoPiutangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalOverdueNull() {
                return this.IsNull(this.tableRekap.TotalOverdueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalOverdueNull() {
                this[this.tableRekap.TotalOverdueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRasioBayarNull() {
                return this.IsNull(this.tableRekap.RasioBayarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRasioBayarNull() {
                this[this.tableRekap.RasioBayarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalReturNull() {
                return this.IsNull(this.tableRekap.TotalReturColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalReturNull() {
                this[this.tableRekap.TotalReturColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRataTagihNull() {
                return this.IsNull(this.tableRekap.RataTagihColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRataTagihNull() {
                this[this.tableRekap.RataTagihColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpGITNull() {
                return this.IsNull(this.tableRekap.RpGITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpGITNull() {
                this[this.tableRekap.RpGITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlafonNull() {
                return this.IsNull(this.tableRekap.PlafonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlafonNull() {
                this[this.tableRekap.PlafonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlafonTambahanNull() {
                return this.IsNull(this.tableRekap.PlafonTambahanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlafonTambahanNull() {
                this[this.tableRekap.PlafonTambahanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSisaPlafonNull() {
                return this.IsNull(this.tableRekap.SisaPlafonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSisaPlafonNull() {
                this[this.tableRekap.SisaPlafonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DetailRowChangeEvent : global::System.EventArgs {
            
            private DetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailRowChangeEvent(DetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RekapRowChangeEvent : global::System.EventArgs {
            
            private RekapRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RekapRowChangeEvent(RekapRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RekapRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591