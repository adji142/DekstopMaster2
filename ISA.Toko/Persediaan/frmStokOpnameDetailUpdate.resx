<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LnUpifnsUwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="cmdCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fwAAAABJRU5ErkJggg==
</value>
  </data>
</root>