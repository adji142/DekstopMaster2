//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Toko.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsEkspedisi")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsEkspedisi : global::System.Data.DataSet {
        
        private DataDataTable tableData;
        
        private Data2DataTable tableData2;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsEkspedisi() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsEkspedisi(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                if ((ds.Tables["Data2"] != null)) {
                    base.Tables.Add(new Data2DataTable(ds.Tables["Data2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data2DataTable Data2 {
            get {
                return this.tableData2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsEkspedisi cln = ((dsEkspedisi)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                if ((ds.Tables["Data2"] != null)) {
                    base.Tables.Add(new Data2DataTable(ds.Tables["Data2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
            this.tableData2 = ((Data2DataTable)(base.Tables["Data2"]));
            if ((initTable == true)) {
                if ((this.tableData2 != null)) {
                    this.tableData2.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsEkspedisi";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsEkspedisi.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
            this.tableData2 = new Data2DataTable();
            base.Tables.Add(this.tableData2);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsEkspedisi ds = new dsEkspedisi();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        
        public delegate void Data2RowChangeEventHandler(object sender, Data2RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.TypedTableBase<DataRow> {
            
            private global::System.Data.DataColumn columnTglKirim;
            
            private global::System.Data.DataColumn columnTglKembali;
            
            private global::System.Data.DataColumn columnNomorSJ;
            
            private global::System.Data.DataColumn columnNamaToko;
            
            private global::System.Data.DataColumn columnAlamat;
            
            private global::System.Data.DataColumn columnKota;
            
            private global::System.Data.DataColumn columnAlasanPending;
            
            private global::System.Data.DataColumn columnJmlKoli;
            
            private global::System.Data.DataColumn columnNoNota;
            
            private global::System.Data.DataColumn columnNamaSales;
            
            private global::System.Data.DataColumn columnTunaiKredit;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnJamKirim;
            
            private global::System.Data.DataColumn columnKMBrkt;
            
            private global::System.Data.DataColumn columnJamKembali;
            
            private global::System.Data.DataColumn columnKMKembali;
            
            private global::System.Data.DataColumn columnNoExp;
            
            private global::System.Data.DataColumn columnSopir;
            
            private global::System.Data.DataColumn columnQtyKoliBawa;
            
            private global::System.Data.DataColumn columnQtyKoliKirim;
            
            private global::System.Data.DataColumn columnTujuan;
            
            private global::System.Data.DataColumn columnNoKirim;
            
            private global::System.Data.DataColumn columnNoPolisi;
            
            private global::System.Data.DataColumn columnKernet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglKirimColumn {
                get {
                    return this.columnTglKirim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglKembaliColumn {
                get {
                    return this.columnTglKembali;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomorSJColumn {
                get {
                    return this.columnNomorSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaTokoColumn {
                get {
                    return this.columnNamaToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlamatColumn {
                get {
                    return this.columnAlamat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaColumn {
                get {
                    return this.columnKota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlasanPendingColumn {
                get {
                    return this.columnAlasanPending;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JmlKoliColumn {
                get {
                    return this.columnJmlKoli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoNotaColumn {
                get {
                    return this.columnNoNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaSalesColumn {
                get {
                    return this.columnNamaSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TunaiKreditColumn {
                get {
                    return this.columnTunaiKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JamKirimColumn {
                get {
                    return this.columnJamKirim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KMBrktColumn {
                get {
                    return this.columnKMBrkt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JamKembaliColumn {
                get {
                    return this.columnJamKembali;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KMKembaliColumn {
                get {
                    return this.columnKMKembali;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoExpColumn {
                get {
                    return this.columnNoExp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SopirColumn {
                get {
                    return this.columnSopir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyKoliBawaColumn {
                get {
                    return this.columnQtyKoliBawa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyKoliKirimColumn {
                get {
                    return this.columnQtyKoliKirim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TujuanColumn {
                get {
                    return this.columnTujuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoKirimColumn {
                get {
                    return this.columnNoKirim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoPolisiColumn {
                get {
                    return this.columnNoPolisi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KernetColumn {
                get {
                    return this.columnKernet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            
            public event DataRowChangeEventHandler DataRowChanging;
            
            public event DataRowChangeEventHandler DataRowChanged;
            
            public event DataRowChangeEventHandler DataRowDeleting;
            
            public event DataRowChangeEventHandler DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow AddDataRow(
                        System.DateTime TglKirim, 
                        System.DateTime TglKembali, 
                        string NomorSJ, 
                        string NamaToko, 
                        string Alamat, 
                        string Kota, 
                        string AlasanPending, 
                        int JmlKoli, 
                        string NoNota, 
                        string NamaSales, 
                        string TunaiKredit, 
                        string Uraian, 
                        string JamKirim, 
                        string KMBrkt, 
                        string JamKembali, 
                        string KMKembali, 
                        string NoExp, 
                        string Sopir, 
                        int QtyKoliBawa, 
                        int QtyKoliKirim, 
                        string Tujuan, 
                        string NoKirim, 
                        string NoPolisi, 
                        string Kernet) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TglKirim,
                        TglKembali,
                        NomorSJ,
                        NamaToko,
                        Alamat,
                        Kota,
                        AlasanPending,
                        JmlKoli,
                        NoNota,
                        NamaSales,
                        TunaiKredit,
                        Uraian,
                        JamKirim,
                        KMBrkt,
                        JamKembali,
                        KMKembali,
                        NoExp,
                        Sopir,
                        QtyKoliBawa,
                        QtyKoliKirim,
                        Tujuan,
                        NoKirim,
                        NoPolisi,
                        Kernet};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTglKirim = base.Columns["TglKirim"];
                this.columnTglKembali = base.Columns["TglKembali"];
                this.columnNomorSJ = base.Columns["NomorSJ"];
                this.columnNamaToko = base.Columns["NamaToko"];
                this.columnAlamat = base.Columns["Alamat"];
                this.columnKota = base.Columns["Kota"];
                this.columnAlasanPending = base.Columns["AlasanPending"];
                this.columnJmlKoli = base.Columns["JmlKoli"];
                this.columnNoNota = base.Columns["NoNota"];
                this.columnNamaSales = base.Columns["NamaSales"];
                this.columnTunaiKredit = base.Columns["TunaiKredit"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnJamKirim = base.Columns["JamKirim"];
                this.columnKMBrkt = base.Columns["KMBrkt"];
                this.columnJamKembali = base.Columns["JamKembali"];
                this.columnKMKembali = base.Columns["KMKembali"];
                this.columnNoExp = base.Columns["NoExp"];
                this.columnSopir = base.Columns["Sopir"];
                this.columnQtyKoliBawa = base.Columns["QtyKoliBawa"];
                this.columnQtyKoliKirim = base.Columns["QtyKoliKirim"];
                this.columnTujuan = base.Columns["Tujuan"];
                this.columnNoKirim = base.Columns["NoKirim"];
                this.columnNoPolisi = base.Columns["NoPolisi"];
                this.columnKernet = base.Columns["Kernet"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTglKirim = new global::System.Data.DataColumn("TglKirim", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglKirim);
                this.columnTglKembali = new global::System.Data.DataColumn("TglKembali", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglKembali);
                this.columnNomorSJ = new global::System.Data.DataColumn("NomorSJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomorSJ);
                this.columnNamaToko = new global::System.Data.DataColumn("NamaToko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaToko);
                this.columnAlamat = new global::System.Data.DataColumn("Alamat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlamat);
                this.columnKota = new global::System.Data.DataColumn("Kota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKota);
                this.columnAlasanPending = new global::System.Data.DataColumn("AlasanPending", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlasanPending);
                this.columnJmlKoli = new global::System.Data.DataColumn("JmlKoli", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJmlKoli);
                this.columnNoNota = new global::System.Data.DataColumn("NoNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoNota);
                this.columnNamaSales = new global::System.Data.DataColumn("NamaSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaSales);
                this.columnTunaiKredit = new global::System.Data.DataColumn("TunaiKredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTunaiKredit);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnJamKirim = new global::System.Data.DataColumn("JamKirim", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJamKirim);
                this.columnKMBrkt = new global::System.Data.DataColumn("KMBrkt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKMBrkt);
                this.columnJamKembali = new global::System.Data.DataColumn("JamKembali", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJamKembali);
                this.columnKMKembali = new global::System.Data.DataColumn("KMKembali", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKMKembali);
                this.columnNoExp = new global::System.Data.DataColumn("NoExp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoExp);
                this.columnSopir = new global::System.Data.DataColumn("Sopir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSopir);
                this.columnQtyKoliBawa = new global::System.Data.DataColumn("QtyKoliBawa", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyKoliBawa);
                this.columnQtyKoliKirim = new global::System.Data.DataColumn("QtyKoliKirim", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyKoliKirim);
                this.columnTujuan = new global::System.Data.DataColumn("Tujuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTujuan);
                this.columnNoKirim = new global::System.Data.DataColumn("NoKirim", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoKirim);
                this.columnNoPolisi = new global::System.Data.DataColumn("NoPolisi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoPolisi);
                this.columnKernet = new global::System.Data.DataColumn("Kernet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKernet);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEkspedisi ds = new dsEkspedisi();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Data2DataTable : global::System.Data.TypedTableBase<Data2Row> {
            
            private global::System.Data.DataColumn columnNo;
            
            private global::System.Data.DataColumn columnNoKirim;
            
            private global::System.Data.DataColumn columnKernet;
            
            private global::System.Data.DataColumn columnnKoliSopir;
            
            private global::System.Data.DataColumn columnnKoliKernet;
            
            private global::System.Data.DataColumn columnnTokoSupir;
            
            private global::System.Data.DataColumn columnnTokoKernet;
            
            private global::System.Data.DataColumn columnPenEkspedisi;
            
            private global::System.Data.DataColumn columnBBMRp;
            
            private global::System.Data.DataColumn columnBBMLtr;
            
            private global::System.Data.DataColumn columnUMSopir;
            
            private global::System.Data.DataColumn columnUMKernet;
            
            private global::System.Data.DataColumn columnParkir;
            
            private global::System.Data.DataColumn columnTol;
            
            private global::System.Data.DataColumn columnKuli;
            
            private global::System.Data.DataColumn columnLain;
            
            private global::System.Data.DataColumn columnKomisiSupir;
            
            private global::System.Data.DataColumn columnKomisiKernet;
            
            private global::System.Data.DataColumn columnTotalBiaya;
            
            private global::System.Data.DataColumn columnRugiLaba;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2DataTable() {
                this.TableName = "Data2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Data2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoColumn {
                get {
                    return this.columnNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoKirimColumn {
                get {
                    return this.columnNoKirim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KernetColumn {
                get {
                    return this.columnKernet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nKoliSopirColumn {
                get {
                    return this.columnnKoliSopir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nKoliKernetColumn {
                get {
                    return this.columnnKoliKernet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTokoSupirColumn {
                get {
                    return this.columnnTokoSupir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTokoKernetColumn {
                get {
                    return this.columnnTokoKernet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenEkspedisiColumn {
                get {
                    return this.columnPenEkspedisi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BBMRpColumn {
                get {
                    return this.columnBBMRp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BBMLtrColumn {
                get {
                    return this.columnBBMLtr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMSopirColumn {
                get {
                    return this.columnUMSopir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMKernetColumn {
                get {
                    return this.columnUMKernet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParkirColumn {
                get {
                    return this.columnParkir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TolColumn {
                get {
                    return this.columnTol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KuliColumn {
                get {
                    return this.columnKuli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainColumn {
                get {
                    return this.columnLain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KomisiSupirColumn {
                get {
                    return this.columnKomisiSupir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KomisiKernetColumn {
                get {
                    return this.columnKomisiKernet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalBiayaColumn {
                get {
                    return this.columnTotalBiaya;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RugiLabaColumn {
                get {
                    return this.columnRugiLaba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row this[int index] {
                get {
                    return ((Data2Row)(this.Rows[index]));
                }
            }
            
            public event Data2RowChangeEventHandler Data2RowChanging;
            
            public event Data2RowChangeEventHandler Data2RowChanged;
            
            public event Data2RowChangeEventHandler Data2RowDeleting;
            
            public event Data2RowChangeEventHandler Data2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddData2Row(Data2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row AddData2Row(
                        string No, 
                        string NoKirim, 
                        string Kernet, 
                        string nKoliSopir, 
                        string nKoliKernet, 
                        string nTokoSupir, 
                        string nTokoKernet, 
                        string PenEkspedisi, 
                        string BBMRp, 
                        string BBMLtr, 
                        string UMSopir, 
                        string UMKernet, 
                        string Parkir, 
                        string Tol, 
                        string Kuli, 
                        string Lain, 
                        string KomisiSupir, 
                        string KomisiKernet, 
                        string TotalBiaya, 
                        string RugiLaba) {
                Data2Row rowData2Row = ((Data2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        No,
                        NoKirim,
                        Kernet,
                        nKoliSopir,
                        nKoliKernet,
                        nTokoSupir,
                        nTokoKernet,
                        PenEkspedisi,
                        BBMRp,
                        BBMLtr,
                        UMSopir,
                        UMKernet,
                        Parkir,
                        Tol,
                        Kuli,
                        Lain,
                        KomisiSupir,
                        KomisiKernet,
                        TotalBiaya,
                        RugiLaba};
                rowData2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowData2Row);
                return rowData2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Data2DataTable cln = ((Data2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Data2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNo = base.Columns["No"];
                this.columnNoKirim = base.Columns["NoKirim"];
                this.columnKernet = base.Columns["Kernet"];
                this.columnnKoliSopir = base.Columns["nKoliSopir"];
                this.columnnKoliKernet = base.Columns["nKoliKernet"];
                this.columnnTokoSupir = base.Columns["nTokoSupir"];
                this.columnnTokoKernet = base.Columns["nTokoKernet"];
                this.columnPenEkspedisi = base.Columns["PenEkspedisi"];
                this.columnBBMRp = base.Columns["BBMRp"];
                this.columnBBMLtr = base.Columns["BBMLtr"];
                this.columnUMSopir = base.Columns["UMSopir"];
                this.columnUMKernet = base.Columns["UMKernet"];
                this.columnParkir = base.Columns["Parkir"];
                this.columnTol = base.Columns["Tol"];
                this.columnKuli = base.Columns["Kuli"];
                this.columnLain = base.Columns["Lain"];
                this.columnKomisiSupir = base.Columns["KomisiSupir"];
                this.columnKomisiKernet = base.Columns["KomisiKernet"];
                this.columnTotalBiaya = base.Columns["TotalBiaya"];
                this.columnRugiLaba = base.Columns["RugiLaba"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNo = new global::System.Data.DataColumn("No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo);
                this.columnNoKirim = new global::System.Data.DataColumn("NoKirim", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoKirim);
                this.columnKernet = new global::System.Data.DataColumn("Kernet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKernet);
                this.columnnKoliSopir = new global::System.Data.DataColumn("nKoliSopir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnKoliSopir);
                this.columnnKoliKernet = new global::System.Data.DataColumn("nKoliKernet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnKoliKernet);
                this.columnnTokoSupir = new global::System.Data.DataColumn("nTokoSupir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTokoSupir);
                this.columnnTokoKernet = new global::System.Data.DataColumn("nTokoKernet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTokoKernet);
                this.columnPenEkspedisi = new global::System.Data.DataColumn("PenEkspedisi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenEkspedisi);
                this.columnBBMRp = new global::System.Data.DataColumn("BBMRp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBBMRp);
                this.columnBBMLtr = new global::System.Data.DataColumn("BBMLtr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBBMLtr);
                this.columnUMSopir = new global::System.Data.DataColumn("UMSopir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMSopir);
                this.columnUMKernet = new global::System.Data.DataColumn("UMKernet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMKernet);
                this.columnParkir = new global::System.Data.DataColumn("Parkir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParkir);
                this.columnTol = new global::System.Data.DataColumn("Tol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTol);
                this.columnKuli = new global::System.Data.DataColumn("Kuli", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKuli);
                this.columnLain = new global::System.Data.DataColumn("Lain", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLain);
                this.columnKomisiSupir = new global::System.Data.DataColumn("KomisiSupir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKomisiSupir);
                this.columnKomisiKernet = new global::System.Data.DataColumn("KomisiKernet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKomisiKernet);
                this.columnTotalBiaya = new global::System.Data.DataColumn("TotalBiaya", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBiaya);
                this.columnRugiLaba = new global::System.Data.DataColumn("RugiLaba", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRugiLaba);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row NewData2Row() {
                return ((Data2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Data2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Data2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data2RowChanged != null)) {
                    this.Data2RowChanged(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data2RowChanging != null)) {
                    this.Data2RowChanging(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data2RowDeleted != null)) {
                    this.Data2RowDeleted(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data2RowDeleting != null)) {
                    this.Data2RowDeleting(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveData2Row(Data2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEkspedisi ds = new dsEkspedisi();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Data2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataRow : global::System.Data.DataRow {
            
            private DataDataTable tableData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TglKirim {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.TglKirimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglKirim\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglKirimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TglKembali {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.TglKembaliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglKembali\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglKembaliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NomorSJ {
                get {
                    try {
                        return ((string)(this[this.tableData.NomorSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NomorSJ\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NomorSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaToko {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaTokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaToko\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Alamat {
                get {
                    try {
                        return ((string)(this[this.tableData.AlamatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alamat\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AlamatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kota {
                get {
                    try {
                        return ((string)(this[this.tableData.KotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kota\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AlasanPending {
                get {
                    try {
                        return ((string)(this[this.tableData.AlasanPendingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlasanPending\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AlasanPendingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JmlKoli {
                get {
                    try {
                        return ((int)(this[this.tableData.JmlKoliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JmlKoli\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JmlKoliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoNota {
                get {
                    try {
                        return ((string)(this[this.tableData.NoNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoNota\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaSales {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaSales\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TunaiKredit {
                get {
                    try {
                        return ((string)(this[this.tableData.TunaiKreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TunaiKredit\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TunaiKreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableData.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JamKirim {
                get {
                    try {
                        return ((string)(this[this.tableData.JamKirimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JamKirim\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JamKirimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KMBrkt {
                get {
                    try {
                        return ((string)(this[this.tableData.KMBrktColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KMBrkt\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KMBrktColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JamKembali {
                get {
                    try {
                        return ((string)(this[this.tableData.JamKembaliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JamKembali\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JamKembaliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KMKembali {
                get {
                    try {
                        return ((string)(this[this.tableData.KMKembaliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KMKembali\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KMKembaliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoExp {
                get {
                    try {
                        return ((string)(this[this.tableData.NoExpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoExp\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoExpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sopir {
                get {
                    try {
                        return ((string)(this[this.tableData.SopirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sopir\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SopirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyKoliBawa {
                get {
                    try {
                        return ((int)(this[this.tableData.QtyKoliBawaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyKoliBawa\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.QtyKoliBawaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyKoliKirim {
                get {
                    try {
                        return ((int)(this[this.tableData.QtyKoliKirimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyKoliKirim\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.QtyKoliKirimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tujuan {
                get {
                    try {
                        return ((string)(this[this.tableData.TujuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tujuan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TujuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoKirim {
                get {
                    try {
                        return ((string)(this[this.tableData.NoKirimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoKirim\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoKirimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoPolisi {
                get {
                    try {
                        return ((string)(this[this.tableData.NoPolisiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoPolisi\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoPolisiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kernet {
                get {
                    try {
                        return ((string)(this[this.tableData.KernetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kernet\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KernetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglKirimNull() {
                return this.IsNull(this.tableData.TglKirimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglKirimNull() {
                this[this.tableData.TglKirimColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglKembaliNull() {
                return this.IsNull(this.tableData.TglKembaliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglKembaliNull() {
                this[this.tableData.TglKembaliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomorSJNull() {
                return this.IsNull(this.tableData.NomorSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomorSJNull() {
                this[this.tableData.NomorSJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaTokoNull() {
                return this.IsNull(this.tableData.NamaTokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaTokoNull() {
                this[this.tableData.NamaTokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlamatNull() {
                return this.IsNull(this.tableData.AlamatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlamatNull() {
                this[this.tableData.AlamatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKotaNull() {
                return this.IsNull(this.tableData.KotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKotaNull() {
                this[this.tableData.KotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlasanPendingNull() {
                return this.IsNull(this.tableData.AlasanPendingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlasanPendingNull() {
                this[this.tableData.AlasanPendingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJmlKoliNull() {
                return this.IsNull(this.tableData.JmlKoliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJmlKoliNull() {
                this[this.tableData.JmlKoliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoNotaNull() {
                return this.IsNull(this.tableData.NoNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoNotaNull() {
                this[this.tableData.NoNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaSalesNull() {
                return this.IsNull(this.tableData.NamaSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaSalesNull() {
                this[this.tableData.NamaSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTunaiKreditNull() {
                return this.IsNull(this.tableData.TunaiKreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTunaiKreditNull() {
                this[this.tableData.TunaiKreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableData.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableData.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJamKirimNull() {
                return this.IsNull(this.tableData.JamKirimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJamKirimNull() {
                this[this.tableData.JamKirimColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKMBrktNull() {
                return this.IsNull(this.tableData.KMBrktColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKMBrktNull() {
                this[this.tableData.KMBrktColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJamKembaliNull() {
                return this.IsNull(this.tableData.JamKembaliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJamKembaliNull() {
                this[this.tableData.JamKembaliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKMKembaliNull() {
                return this.IsNull(this.tableData.KMKembaliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKMKembaliNull() {
                this[this.tableData.KMKembaliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoExpNull() {
                return this.IsNull(this.tableData.NoExpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoExpNull() {
                this[this.tableData.NoExpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSopirNull() {
                return this.IsNull(this.tableData.SopirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSopirNull() {
                this[this.tableData.SopirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyKoliBawaNull() {
                return this.IsNull(this.tableData.QtyKoliBawaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyKoliBawaNull() {
                this[this.tableData.QtyKoliBawaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyKoliKirimNull() {
                return this.IsNull(this.tableData.QtyKoliKirimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyKoliKirimNull() {
                this[this.tableData.QtyKoliKirimColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTujuanNull() {
                return this.IsNull(this.tableData.TujuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTujuanNull() {
                this[this.tableData.TujuanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoKirimNull() {
                return this.IsNull(this.tableData.NoKirimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoKirimNull() {
                this[this.tableData.NoKirimColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoPolisiNull() {
                return this.IsNull(this.tableData.NoPolisiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoPolisiNull() {
                this[this.tableData.NoPolisiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKernetNull() {
                return this.IsNull(this.tableData.KernetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKernetNull() {
                this[this.tableData.KernetColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Data2Row : global::System.Data.DataRow {
            
            private Data2DataTable tableData2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData2 = ((Data2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string No {
                get {
                    try {
                        return ((string)(this[this.tableData2.NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoKirim {
                get {
                    try {
                        return ((string)(this[this.tableData2.NoKirimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoKirim\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.NoKirimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kernet {
                get {
                    try {
                        return ((string)(this[this.tableData2.KernetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kernet\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.KernetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nKoliSopir {
                get {
                    try {
                        return ((string)(this[this.tableData2.nKoliSopirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nKoliSopir\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.nKoliSopirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nKoliKernet {
                get {
                    try {
                        return ((string)(this[this.tableData2.nKoliKernetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nKoliKernet\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.nKoliKernetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTokoSupir {
                get {
                    try {
                        return ((string)(this[this.tableData2.nTokoSupirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTokoSupir\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.nTokoSupirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTokoKernet {
                get {
                    try {
                        return ((string)(this[this.tableData2.nTokoKernetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTokoKernet\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.nTokoKernetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PenEkspedisi {
                get {
                    try {
                        return ((string)(this[this.tableData2.PenEkspedisiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenEkspedisi\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.PenEkspedisiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BBMRp {
                get {
                    try {
                        return ((string)(this[this.tableData2.BBMRpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BBMRp\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.BBMRpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BBMLtr {
                get {
                    try {
                        return ((string)(this[this.tableData2.BBMLtrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BBMLtr\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.BBMLtrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UMSopir {
                get {
                    try {
                        return ((string)(this[this.tableData2.UMSopirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UMSopir\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.UMSopirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UMKernet {
                get {
                    try {
                        return ((string)(this[this.tableData2.UMKernetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UMKernet\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.UMKernetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Parkir {
                get {
                    try {
                        return ((string)(this[this.tableData2.ParkirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Parkir\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.ParkirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tol {
                get {
                    try {
                        return ((string)(this[this.tableData2.TolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tol\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.TolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kuli {
                get {
                    try {
                        return ((string)(this[this.tableData2.KuliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kuli\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.KuliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lain {
                get {
                    try {
                        return ((string)(this[this.tableData2.LainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lain\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.LainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KomisiSupir {
                get {
                    try {
                        return ((string)(this[this.tableData2.KomisiSupirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KomisiSupir\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.KomisiSupirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KomisiKernet {
                get {
                    try {
                        return ((string)(this[this.tableData2.KomisiKernetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KomisiKernet\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.KomisiKernetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalBiaya {
                get {
                    try {
                        return ((string)(this[this.tableData2.TotalBiayaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalBiaya\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.TotalBiayaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RugiLaba {
                get {
                    try {
                        return ((string)(this[this.tableData2.RugiLabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RugiLaba\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.RugiLabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoNull() {
                return this.IsNull(this.tableData2.NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoNull() {
                this[this.tableData2.NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoKirimNull() {
                return this.IsNull(this.tableData2.NoKirimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoKirimNull() {
                this[this.tableData2.NoKirimColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKernetNull() {
                return this.IsNull(this.tableData2.KernetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKernetNull() {
                this[this.tableData2.KernetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnKoliSopirNull() {
                return this.IsNull(this.tableData2.nKoliSopirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnKoliSopirNull() {
                this[this.tableData2.nKoliSopirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnKoliKernetNull() {
                return this.IsNull(this.tableData2.nKoliKernetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnKoliKernetNull() {
                this[this.tableData2.nKoliKernetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTokoSupirNull() {
                return this.IsNull(this.tableData2.nTokoSupirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTokoSupirNull() {
                this[this.tableData2.nTokoSupirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTokoKernetNull() {
                return this.IsNull(this.tableData2.nTokoKernetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTokoKernetNull() {
                this[this.tableData2.nTokoKernetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenEkspedisiNull() {
                return this.IsNull(this.tableData2.PenEkspedisiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenEkspedisiNull() {
                this[this.tableData2.PenEkspedisiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBBMRpNull() {
                return this.IsNull(this.tableData2.BBMRpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBBMRpNull() {
                this[this.tableData2.BBMRpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBBMLtrNull() {
                return this.IsNull(this.tableData2.BBMLtrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBBMLtrNull() {
                this[this.tableData2.BBMLtrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMSopirNull() {
                return this.IsNull(this.tableData2.UMSopirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMSopirNull() {
                this[this.tableData2.UMSopirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMKernetNull() {
                return this.IsNull(this.tableData2.UMKernetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMKernetNull() {
                this[this.tableData2.UMKernetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParkirNull() {
                return this.IsNull(this.tableData2.ParkirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParkirNull() {
                this[this.tableData2.ParkirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTolNull() {
                return this.IsNull(this.tableData2.TolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTolNull() {
                this[this.tableData2.TolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKuliNull() {
                return this.IsNull(this.tableData2.KuliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKuliNull() {
                this[this.tableData2.KuliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainNull() {
                return this.IsNull(this.tableData2.LainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainNull() {
                this[this.tableData2.LainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKomisiSupirNull() {
                return this.IsNull(this.tableData2.KomisiSupirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKomisiSupirNull() {
                this[this.tableData2.KomisiSupirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKomisiKernetNull() {
                return this.IsNull(this.tableData2.KomisiKernetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKomisiKernetNull() {
                this[this.tableData2.KomisiKernetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalBiayaNull() {
                return this.IsNull(this.tableData2.TotalBiayaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalBiayaNull() {
                this[this.tableData2.TotalBiayaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRugiLabaNull() {
                return this.IsNull(this.tableData2.RugiLabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRugiLabaNull() {
                this[this.tableData2.RugiLabaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            
            private DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Data2RowChangeEvent : global::System.EventArgs {
            
            private Data2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2RowChangeEvent(Data2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591