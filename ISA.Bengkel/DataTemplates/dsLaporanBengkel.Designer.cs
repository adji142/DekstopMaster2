//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4984
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Bengkel.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsLaporanBengkel")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsLaporanBengkel : global::System.Data.DataSet {
        
        private DataDataTable tableData;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsLaporanBengkel() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsLaporanBengkel(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsLaporanBengkel cln = ((dsLaporanBengkel)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsLaporanBengkel";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsLaporanBengkel.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsLaporanBengkel ds = new dsLaporanBengkel();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.TypedTableBase<DataRow> {
            
            private global::System.Data.DataColumn columntgl_srv;
            
            private global::System.Data.DataColumn columnnomor;
            
            private global::System.Data.DataColumn columnno_pol;
            
            private global::System.Data.DataColumn columnspm;
            
            private global::System.Data.DataColumn columnmekanik;
            
            private global::System.Data.DataColumn columnservice;
            
            private global::System.Data.DataColumn columnbiaya;
            
            private global::System.Data.DataColumn columnNamaStok;
            
            private global::System.Data.DataColumn columnBarangID;
            
            private global::System.Data.DataColumn columnKlp;
            
            private global::System.Data.DataColumn columnnominalFA;
            
            private global::System.Data.DataColumn columnnominalFB;
            
            private global::System.Data.DataColumn columnnominalFC;
            
            private global::System.Data.DataColumn columnnominalFE;
            
            private global::System.Data.DataColumn columnnominalFX;
            
            private global::System.Data.DataColumn columnlainlain;
            
            private global::System.Data.DataColumn columnBeliDiLuar;
            
            private global::System.Data.DataColumn columnketerangan;
            
            private global::System.Data.DataColumn columnQtySuratJalan;
            
            private global::System.Data.DataColumn columnsatjual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tgl_srvColumn {
                get {
                    return this.columntgl_srv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nomorColumn {
                get {
                    return this.columnnomor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn no_polColumn {
                get {
                    return this.columnno_pol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn spmColumn {
                get {
                    return this.columnspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mekanikColumn {
                get {
                    return this.columnmekanik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn serviceColumn {
                get {
                    return this.columnservice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn biayaColumn {
                get {
                    return this.columnbiaya;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStokColumn {
                get {
                    return this.columnNamaStok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarangIDColumn {
                get {
                    return this.columnBarangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KlpColumn {
                get {
                    return this.columnKlp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nominalFAColumn {
                get {
                    return this.columnnominalFA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nominalFBColumn {
                get {
                    return this.columnnominalFB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nominalFCColumn {
                get {
                    return this.columnnominalFC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nominalFEColumn {
                get {
                    return this.columnnominalFE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nominalFXColumn {
                get {
                    return this.columnnominalFX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lainlainColumn {
                get {
                    return this.columnlainlain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeliDiLuarColumn {
                get {
                    return this.columnBeliDiLuar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keteranganColumn {
                get {
                    return this.columnketerangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtySuratJalanColumn {
                get {
                    return this.columnQtySuratJalan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn satjualColumn {
                get {
                    return this.columnsatjual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            
            public event DataRowChangeEventHandler DataRowChanging;
            
            public event DataRowChangeEventHandler DataRowChanged;
            
            public event DataRowChangeEventHandler DataRowDeleting;
            
            public event DataRowChangeEventHandler DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow AddDataRow(
                        string tgl_srv, 
                        string nomor, 
                        string no_pol, 
                        string spm, 
                        string mekanik, 
                        string service, 
                        string biaya, 
                        string NamaStok, 
                        string BarangID, 
                        string Klp, 
                        string nominalFA, 
                        string nominalFB, 
                        string nominalFC, 
                        string nominalFE, 
                        string nominalFX, 
                        string lainlain, 
                        string BeliDiLuar, 
                        string keterangan, 
                        string QtySuratJalan, 
                        string satjual) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        tgl_srv,
                        nomor,
                        no_pol,
                        spm,
                        mekanik,
                        service,
                        biaya,
                        NamaStok,
                        BarangID,
                        Klp,
                        nominalFA,
                        nominalFB,
                        nominalFC,
                        nominalFE,
                        nominalFX,
                        lainlain,
                        BeliDiLuar,
                        keterangan,
                        QtySuratJalan,
                        satjual};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntgl_srv = base.Columns["tgl_srv"];
                this.columnnomor = base.Columns["nomor"];
                this.columnno_pol = base.Columns["no_pol"];
                this.columnspm = base.Columns["spm"];
                this.columnmekanik = base.Columns["mekanik"];
                this.columnservice = base.Columns["service"];
                this.columnbiaya = base.Columns["biaya"];
                this.columnNamaStok = base.Columns["NamaStok"];
                this.columnBarangID = base.Columns["BarangID"];
                this.columnKlp = base.Columns["Klp"];
                this.columnnominalFA = base.Columns["nominalFA"];
                this.columnnominalFB = base.Columns["nominalFB"];
                this.columnnominalFC = base.Columns["nominalFC"];
                this.columnnominalFE = base.Columns["nominalFE"];
                this.columnnominalFX = base.Columns["nominalFX"];
                this.columnlainlain = base.Columns["lainlain"];
                this.columnBeliDiLuar = base.Columns["BeliDiLuar"];
                this.columnketerangan = base.Columns["keterangan"];
                this.columnQtySuratJalan = base.Columns["QtySuratJalan"];
                this.columnsatjual = base.Columns["satjual"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntgl_srv = new global::System.Data.DataColumn("tgl_srv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntgl_srv);
                this.columnnomor = new global::System.Data.DataColumn("nomor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnomor);
                this.columnno_pol = new global::System.Data.DataColumn("no_pol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnno_pol);
                this.columnspm = new global::System.Data.DataColumn("spm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspm);
                this.columnmekanik = new global::System.Data.DataColumn("mekanik", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmekanik);
                this.columnservice = new global::System.Data.DataColumn("service", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnservice);
                this.columnbiaya = new global::System.Data.DataColumn("biaya", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbiaya);
                this.columnNamaStok = new global::System.Data.DataColumn("NamaStok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStok);
                this.columnBarangID = new global::System.Data.DataColumn("BarangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarangID);
                this.columnKlp = new global::System.Data.DataColumn("Klp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlp);
                this.columnnominalFA = new global::System.Data.DataColumn("nominalFA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnominalFA);
                this.columnnominalFB = new global::System.Data.DataColumn("nominalFB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnominalFB);
                this.columnnominalFC = new global::System.Data.DataColumn("nominalFC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnominalFC);
                this.columnnominalFE = new global::System.Data.DataColumn("nominalFE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnominalFE);
                this.columnnominalFX = new global::System.Data.DataColumn("nominalFX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnominalFX);
                this.columnlainlain = new global::System.Data.DataColumn("lainlain", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlainlain);
                this.columnBeliDiLuar = new global::System.Data.DataColumn("BeliDiLuar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeliDiLuar);
                this.columnketerangan = new global::System.Data.DataColumn("keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnketerangan);
                this.columnQtySuratJalan = new global::System.Data.DataColumn("QtySuratJalan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtySuratJalan);
                this.columnsatjual = new global::System.Data.DataColumn("satjual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsatjual);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsLaporanBengkel ds = new dsLaporanBengkel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataRow : global::System.Data.DataRow {
            
            private DataDataTable tableData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tgl_srv {
                get {
                    try {
                        return ((string)(this[this.tableData.tgl_srvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tgl_srv\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.tgl_srvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nomor {
                get {
                    try {
                        return ((string)(this[this.tableData.nomorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nomor\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.nomorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string no_pol {
                get {
                    try {
                        return ((string)(this[this.tableData.no_polColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'no_pol\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.no_polColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string spm {
                get {
                    try {
                        return ((string)(this[this.tableData.spmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'spm\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.spmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mekanik {
                get {
                    try {
                        return ((string)(this[this.tableData.mekanikColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mekanik\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.mekanikColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string service {
                get {
                    try {
                        return ((string)(this[this.tableData.serviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'service\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.serviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string biaya {
                get {
                    try {
                        return ((string)(this[this.tableData.biayaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'biaya\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.biayaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStok {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaStokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStok\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaStokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BarangID {
                get {
                    try {
                        return ((string)(this[this.tableData.BarangIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarangID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BarangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Klp {
                get {
                    try {
                        return ((string)(this[this.tableData.KlpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Klp\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KlpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nominalFA {
                get {
                    try {
                        return ((string)(this[this.tableData.nominalFAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nominalFA\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.nominalFAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nominalFB {
                get {
                    try {
                        return ((string)(this[this.tableData.nominalFBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nominalFB\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.nominalFBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nominalFC {
                get {
                    try {
                        return ((string)(this[this.tableData.nominalFCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nominalFC\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.nominalFCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nominalFE {
                get {
                    try {
                        return ((string)(this[this.tableData.nominalFEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nominalFE\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.nominalFEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nominalFX {
                get {
                    try {
                        return ((string)(this[this.tableData.nominalFXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nominalFX\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.nominalFXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lainlain {
                get {
                    try {
                        return ((string)(this[this.tableData.lainlainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lainlain\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.lainlainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BeliDiLuar {
                get {
                    try {
                        return ((string)(this[this.tableData.BeliDiLuarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeliDiLuar\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BeliDiLuarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string keterangan {
                get {
                    try {
                        return ((string)(this[this.tableData.keteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'keterangan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.keteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtySuratJalan {
                get {
                    try {
                        return ((string)(this[this.tableData.QtySuratJalanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtySuratJalan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.QtySuratJalanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string satjual {
                get {
                    try {
                        return ((string)(this[this.tableData.satjualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'satjual\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.satjualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istgl_srvNull() {
                return this.IsNull(this.tableData.tgl_srvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settgl_srvNull() {
                this[this.tableData.tgl_srvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnomorNull() {
                return this.IsNull(this.tableData.nomorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnomorNull() {
                this[this.tableData.nomorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isno_polNull() {
                return this.IsNull(this.tableData.no_polColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setno_polNull() {
                this[this.tableData.no_polColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsspmNull() {
                return this.IsNull(this.tableData.spmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetspmNull() {
                this[this.tableData.spmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmekanikNull() {
                return this.IsNull(this.tableData.mekanikColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmekanikNull() {
                this[this.tableData.mekanikColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsserviceNull() {
                return this.IsNull(this.tableData.serviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetserviceNull() {
                this[this.tableData.serviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbiayaNull() {
                return this.IsNull(this.tableData.biayaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbiayaNull() {
                this[this.tableData.biayaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStokNull() {
                return this.IsNull(this.tableData.NamaStokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStokNull() {
                this[this.tableData.NamaStokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarangIDNull() {
                return this.IsNull(this.tableData.BarangIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarangIDNull() {
                this[this.tableData.BarangIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKlpNull() {
                return this.IsNull(this.tableData.KlpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKlpNull() {
                this[this.tableData.KlpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnominalFANull() {
                return this.IsNull(this.tableData.nominalFAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnominalFANull() {
                this[this.tableData.nominalFAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnominalFBNull() {
                return this.IsNull(this.tableData.nominalFBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnominalFBNull() {
                this[this.tableData.nominalFBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnominalFCNull() {
                return this.IsNull(this.tableData.nominalFCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnominalFCNull() {
                this[this.tableData.nominalFCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnominalFENull() {
                return this.IsNull(this.tableData.nominalFEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnominalFENull() {
                this[this.tableData.nominalFEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnominalFXNull() {
                return this.IsNull(this.tableData.nominalFXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnominalFXNull() {
                this[this.tableData.nominalFXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslainlainNull() {
                return this.IsNull(this.tableData.lainlainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlainlainNull() {
                this[this.tableData.lainlainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeliDiLuarNull() {
                return this.IsNull(this.tableData.BeliDiLuarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeliDiLuarNull() {
                this[this.tableData.BeliDiLuarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsketeranganNull() {
                return this.IsNull(this.tableData.keteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetketeranganNull() {
                this[this.tableData.keteranganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtySuratJalanNull() {
                return this.IsNull(this.tableData.QtySuratJalanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtySuratJalanNull() {
                this[this.tableData.QtySuratJalanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssatjualNull() {
                return this.IsNull(this.tableData.satjualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsatjualNull() {
                this[this.tableData.satjualColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            
            private DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591