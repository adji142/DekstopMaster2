//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Trading.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDashboardKaDepo")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDashboardKaDepo : global::System.Data.DataSet {
        
        private DataPSDataTable tableDataPS;
        
        private DataOvdDataTable tableDataOvd;
        
        private DataLostSalesTokoDataTable tableDataLostSalesToko;
        
        private DataLostSalesWalkInDataTable tableDataLostSalesWalkIn;
        
        private DataStockAgingDataTable tableDataStockAging;
        
        private DataBarangFokusDataTable tableDataBarangFokus;
        
        private DataPSV2DataTable tableDataPSV2;
        
        private DataPICAreaDataTable tableDataPICArea;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDashboardKaDepo() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDashboardKaDepo(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataPS"] != null)) {
                    base.Tables.Add(new DataPSDataTable(ds.Tables["DataPS"]));
                }
                if ((ds.Tables["DataOvd"] != null)) {
                    base.Tables.Add(new DataOvdDataTable(ds.Tables["DataOvd"]));
                }
                if ((ds.Tables["DataLostSalesToko"] != null)) {
                    base.Tables.Add(new DataLostSalesTokoDataTable(ds.Tables["DataLostSalesToko"]));
                }
                if ((ds.Tables["DataLostSalesWalkIn"] != null)) {
                    base.Tables.Add(new DataLostSalesWalkInDataTable(ds.Tables["DataLostSalesWalkIn"]));
                }
                if ((ds.Tables["DataStockAging"] != null)) {
                    base.Tables.Add(new DataStockAgingDataTable(ds.Tables["DataStockAging"]));
                }
                if ((ds.Tables["DataBarangFokus"] != null)) {
                    base.Tables.Add(new DataBarangFokusDataTable(ds.Tables["DataBarangFokus"]));
                }
                if ((ds.Tables["DataPSV2"] != null)) {
                    base.Tables.Add(new DataPSV2DataTable(ds.Tables["DataPSV2"]));
                }
                if ((ds.Tables["DataPICArea"] != null)) {
                    base.Tables.Add(new DataPICAreaDataTable(ds.Tables["DataPICArea"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataPSDataTable DataPS {
            get {
                return this.tableDataPS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataOvdDataTable DataOvd {
            get {
                return this.tableDataOvd;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataLostSalesTokoDataTable DataLostSalesToko {
            get {
                return this.tableDataLostSalesToko;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataLostSalesWalkInDataTable DataLostSalesWalkIn {
            get {
                return this.tableDataLostSalesWalkIn;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataStockAgingDataTable DataStockAging {
            get {
                return this.tableDataStockAging;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataBarangFokusDataTable DataBarangFokus {
            get {
                return this.tableDataBarangFokus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataPSV2DataTable DataPSV2 {
            get {
                return this.tableDataPSV2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataPICAreaDataTable DataPICArea {
            get {
                return this.tableDataPICArea;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDashboardKaDepo cln = ((dsDashboardKaDepo)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataPS"] != null)) {
                    base.Tables.Add(new DataPSDataTable(ds.Tables["DataPS"]));
                }
                if ((ds.Tables["DataOvd"] != null)) {
                    base.Tables.Add(new DataOvdDataTable(ds.Tables["DataOvd"]));
                }
                if ((ds.Tables["DataLostSalesToko"] != null)) {
                    base.Tables.Add(new DataLostSalesTokoDataTable(ds.Tables["DataLostSalesToko"]));
                }
                if ((ds.Tables["DataLostSalesWalkIn"] != null)) {
                    base.Tables.Add(new DataLostSalesWalkInDataTable(ds.Tables["DataLostSalesWalkIn"]));
                }
                if ((ds.Tables["DataStockAging"] != null)) {
                    base.Tables.Add(new DataStockAgingDataTable(ds.Tables["DataStockAging"]));
                }
                if ((ds.Tables["DataBarangFokus"] != null)) {
                    base.Tables.Add(new DataBarangFokusDataTable(ds.Tables["DataBarangFokus"]));
                }
                if ((ds.Tables["DataPSV2"] != null)) {
                    base.Tables.Add(new DataPSV2DataTable(ds.Tables["DataPSV2"]));
                }
                if ((ds.Tables["DataPICArea"] != null)) {
                    base.Tables.Add(new DataPICAreaDataTable(ds.Tables["DataPICArea"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDataPS = ((DataPSDataTable)(base.Tables["DataPS"]));
            if ((initTable == true)) {
                if ((this.tableDataPS != null)) {
                    this.tableDataPS.InitVars();
                }
            }
            this.tableDataOvd = ((DataOvdDataTable)(base.Tables["DataOvd"]));
            if ((initTable == true)) {
                if ((this.tableDataOvd != null)) {
                    this.tableDataOvd.InitVars();
                }
            }
            this.tableDataLostSalesToko = ((DataLostSalesTokoDataTable)(base.Tables["DataLostSalesToko"]));
            if ((initTable == true)) {
                if ((this.tableDataLostSalesToko != null)) {
                    this.tableDataLostSalesToko.InitVars();
                }
            }
            this.tableDataLostSalesWalkIn = ((DataLostSalesWalkInDataTable)(base.Tables["DataLostSalesWalkIn"]));
            if ((initTable == true)) {
                if ((this.tableDataLostSalesWalkIn != null)) {
                    this.tableDataLostSalesWalkIn.InitVars();
                }
            }
            this.tableDataStockAging = ((DataStockAgingDataTable)(base.Tables["DataStockAging"]));
            if ((initTable == true)) {
                if ((this.tableDataStockAging != null)) {
                    this.tableDataStockAging.InitVars();
                }
            }
            this.tableDataBarangFokus = ((DataBarangFokusDataTable)(base.Tables["DataBarangFokus"]));
            if ((initTable == true)) {
                if ((this.tableDataBarangFokus != null)) {
                    this.tableDataBarangFokus.InitVars();
                }
            }
            this.tableDataPSV2 = ((DataPSV2DataTable)(base.Tables["DataPSV2"]));
            if ((initTable == true)) {
                if ((this.tableDataPSV2 != null)) {
                    this.tableDataPSV2.InitVars();
                }
            }
            this.tableDataPICArea = ((DataPICAreaDataTable)(base.Tables["DataPICArea"]));
            if ((initTable == true)) {
                if ((this.tableDataPICArea != null)) {
                    this.tableDataPICArea.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDashboardKaDepo";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsDashboardKaDepo.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataPS = new DataPSDataTable();
            base.Tables.Add(this.tableDataPS);
            this.tableDataOvd = new DataOvdDataTable();
            base.Tables.Add(this.tableDataOvd);
            this.tableDataLostSalesToko = new DataLostSalesTokoDataTable();
            base.Tables.Add(this.tableDataLostSalesToko);
            this.tableDataLostSalesWalkIn = new DataLostSalesWalkInDataTable();
            base.Tables.Add(this.tableDataLostSalesWalkIn);
            this.tableDataStockAging = new DataStockAgingDataTable();
            base.Tables.Add(this.tableDataStockAging);
            this.tableDataBarangFokus = new DataBarangFokusDataTable();
            base.Tables.Add(this.tableDataBarangFokus);
            this.tableDataPSV2 = new DataPSV2DataTable();
            base.Tables.Add(this.tableDataPSV2);
            this.tableDataPICArea = new DataPICAreaDataTable();
            base.Tables.Add(this.tableDataPICArea);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataPS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataOvd() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataLostSalesToko() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataLostSalesWalkIn() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataStockAging() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataBarangFokus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataPSV2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataPICArea() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDashboardKaDepo ds = new dsDashboardKaDepo();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataPSRowChangeEventHandler(object sender, DataPSRowChangeEvent e);
        
        public delegate void DataOvdRowChangeEventHandler(object sender, DataOvdRowChangeEvent e);
        
        public delegate void DataLostSalesTokoRowChangeEventHandler(object sender, DataLostSalesTokoRowChangeEvent e);
        
        public delegate void DataLostSalesWalkInRowChangeEventHandler(object sender, DataLostSalesWalkInRowChangeEvent e);
        
        public delegate void DataStockAgingRowChangeEventHandler(object sender, DataStockAgingRowChangeEvent e);
        
        public delegate void DataBarangFokusRowChangeEventHandler(object sender, DataBarangFokusRowChangeEvent e);
        
        public delegate void DataPSV2RowChangeEventHandler(object sender, DataPSV2RowChangeEvent e);
        
        public delegate void DataPICAreaRowChangeEventHandler(object sender, DataPICAreaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataPSDataTable : global::System.Data.TypedTableBase<DataPSRow> {
            
            private global::System.Data.DataColumn columnNamaSales;
            
            private global::System.Data.DataColumn columnTargetOmset;
            
            private global::System.Data.DataColumn columnActualOmset;
            
            private global::System.Data.DataColumn columnPiutangLancar;
            
            private global::System.Data.DataColumn columnPiutangOverdue;
            
            private global::System.Data.DataColumn columnNotaBawa;
            
            private global::System.Data.DataColumn columnActualTagih;
            
            private global::System.Data.DataColumn columnRencanaKunjungan;
            
            private global::System.Data.DataColumn columnHasilKunjungan;
            
            private global::System.Data.DataColumn columnActualOmsetPers;
            
            private global::System.Data.DataColumn columnActualTagihPers;
            
            private global::System.Data.DataColumn columnActualKunjungPers;
            
            private global::System.Data.DataColumn columnSalesID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSDataTable() {
                this.TableName = "DataPS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataPSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataPSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaSalesColumn {
                get {
                    return this.columnNamaSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetOmsetColumn {
                get {
                    return this.columnTargetOmset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualOmsetColumn {
                get {
                    return this.columnActualOmset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiutangLancarColumn {
                get {
                    return this.columnPiutangLancar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiutangOverdueColumn {
                get {
                    return this.columnPiutangOverdue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotaBawaColumn {
                get {
                    return this.columnNotaBawa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualTagihColumn {
                get {
                    return this.columnActualTagih;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RencanaKunjunganColumn {
                get {
                    return this.columnRencanaKunjungan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HasilKunjunganColumn {
                get {
                    return this.columnHasilKunjungan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualOmsetPersColumn {
                get {
                    return this.columnActualOmsetPers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualTagihPersColumn {
                get {
                    return this.columnActualTagihPers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualKunjungPersColumn {
                get {
                    return this.columnActualKunjungPers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesIDColumn {
                get {
                    return this.columnSalesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSRow this[int index] {
                get {
                    return ((DataPSRow)(this.Rows[index]));
                }
            }
            
            public event DataPSRowChangeEventHandler DataPSRowChanging;
            
            public event DataPSRowChangeEventHandler DataPSRowChanged;
            
            public event DataPSRowChangeEventHandler DataPSRowDeleting;
            
            public event DataPSRowChangeEventHandler DataPSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataPSRow(DataPSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSRow AddDataPSRow(string NamaSales, decimal TargetOmset, decimal ActualOmset, decimal PiutangLancar, decimal PiutangOverdue, decimal NotaBawa, decimal ActualTagih, int RencanaKunjungan, int HasilKunjungan, string ActualOmsetPers, string ActualTagihPers, string ActualKunjungPers, string SalesID) {
                DataPSRow rowDataPSRow = ((DataPSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaSales,
                        TargetOmset,
                        ActualOmset,
                        PiutangLancar,
                        PiutangOverdue,
                        NotaBawa,
                        ActualTagih,
                        RencanaKunjungan,
                        HasilKunjungan,
                        ActualOmsetPers,
                        ActualTagihPers,
                        ActualKunjungPers,
                        SalesID};
                rowDataPSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataPSRow);
                return rowDataPSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataPSDataTable cln = ((DataPSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataPSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaSales = base.Columns["NamaSales"];
                this.columnTargetOmset = base.Columns["TargetOmset"];
                this.columnActualOmset = base.Columns["ActualOmset"];
                this.columnPiutangLancar = base.Columns["PiutangLancar"];
                this.columnPiutangOverdue = base.Columns["PiutangOverdue"];
                this.columnNotaBawa = base.Columns["NotaBawa"];
                this.columnActualTagih = base.Columns["ActualTagih"];
                this.columnRencanaKunjungan = base.Columns["RencanaKunjungan"];
                this.columnHasilKunjungan = base.Columns["HasilKunjungan"];
                this.columnActualOmsetPers = base.Columns["ActualOmsetPers"];
                this.columnActualTagihPers = base.Columns["ActualTagihPers"];
                this.columnActualKunjungPers = base.Columns["ActualKunjungPers"];
                this.columnSalesID = base.Columns["SalesID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaSales = new global::System.Data.DataColumn("NamaSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaSales);
                this.columnTargetOmset = new global::System.Data.DataColumn("TargetOmset", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetOmset);
                this.columnActualOmset = new global::System.Data.DataColumn("ActualOmset", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualOmset);
                this.columnPiutangLancar = new global::System.Data.DataColumn("PiutangLancar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiutangLancar);
                this.columnPiutangOverdue = new global::System.Data.DataColumn("PiutangOverdue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiutangOverdue);
                this.columnNotaBawa = new global::System.Data.DataColumn("NotaBawa", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotaBawa);
                this.columnActualTagih = new global::System.Data.DataColumn("ActualTagih", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualTagih);
                this.columnRencanaKunjungan = new global::System.Data.DataColumn("RencanaKunjungan", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRencanaKunjungan);
                this.columnHasilKunjungan = new global::System.Data.DataColumn("HasilKunjungan", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasilKunjungan);
                this.columnActualOmsetPers = new global::System.Data.DataColumn("ActualOmsetPers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualOmsetPers);
                this.columnActualTagihPers = new global::System.Data.DataColumn("ActualTagihPers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualTagihPers);
                this.columnActualKunjungPers = new global::System.Data.DataColumn("ActualKunjungPers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualKunjungPers);
                this.columnSalesID = new global::System.Data.DataColumn("SalesID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSRow NewDataPSRow() {
                return ((DataPSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataPSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataPSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataPSRowChanged != null)) {
                    this.DataPSRowChanged(this, new DataPSRowChangeEvent(((DataPSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataPSRowChanging != null)) {
                    this.DataPSRowChanging(this, new DataPSRowChangeEvent(((DataPSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataPSRowDeleted != null)) {
                    this.DataPSRowDeleted(this, new DataPSRowChangeEvent(((DataPSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataPSRowDeleting != null)) {
                    this.DataPSRowDeleting(this, new DataPSRowChangeEvent(((DataPSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataPSRow(DataPSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDashboardKaDepo ds = new dsDashboardKaDepo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataPSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataOvdDataTable : global::System.Data.TypedTableBase<DataOvdRow> {
            
            private global::System.Data.DataColumn columnNamaSales;
            
            private global::System.Data.DataColumn columnLatestOverdue;
            
            private global::System.Data.DataColumn columnOldOverdue;
            
            private global::System.Data.DataColumn columnOverdueKecil;
            
            private global::System.Data.DataColumn columnOverdueMenengah;
            
            private global::System.Data.DataColumn columnOverdueBesar;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataOvdDataTable() {
                this.TableName = "DataOvd";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataOvdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataOvdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaSalesColumn {
                get {
                    return this.columnNamaSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatestOverdueColumn {
                get {
                    return this.columnLatestOverdue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldOverdueColumn {
                get {
                    return this.columnOldOverdue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverdueKecilColumn {
                get {
                    return this.columnOverdueKecil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverdueMenengahColumn {
                get {
                    return this.columnOverdueMenengah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverdueBesarColumn {
                get {
                    return this.columnOverdueBesar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataOvdRow this[int index] {
                get {
                    return ((DataOvdRow)(this.Rows[index]));
                }
            }
            
            public event DataOvdRowChangeEventHandler DataOvdRowChanging;
            
            public event DataOvdRowChangeEventHandler DataOvdRowChanged;
            
            public event DataOvdRowChangeEventHandler DataOvdRowDeleting;
            
            public event DataOvdRowChangeEventHandler DataOvdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataOvdRow(DataOvdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataOvdRow AddDataOvdRow(string NamaSales, string LatestOverdue, string OldOverdue, string OverdueKecil, string OverdueMenengah, string OverdueBesar) {
                DataOvdRow rowDataOvdRow = ((DataOvdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaSales,
                        LatestOverdue,
                        OldOverdue,
                        OverdueKecil,
                        OverdueMenengah,
                        OverdueBesar};
                rowDataOvdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataOvdRow);
                return rowDataOvdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataOvdDataTable cln = ((DataOvdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataOvdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaSales = base.Columns["NamaSales"];
                this.columnLatestOverdue = base.Columns["LatestOverdue"];
                this.columnOldOverdue = base.Columns["OldOverdue"];
                this.columnOverdueKecil = base.Columns["OverdueKecil"];
                this.columnOverdueMenengah = base.Columns["OverdueMenengah"];
                this.columnOverdueBesar = base.Columns["OverdueBesar"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaSales = new global::System.Data.DataColumn("NamaSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaSales);
                this.columnLatestOverdue = new global::System.Data.DataColumn("LatestOverdue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatestOverdue);
                this.columnOldOverdue = new global::System.Data.DataColumn("OldOverdue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldOverdue);
                this.columnOverdueKecil = new global::System.Data.DataColumn("OverdueKecil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdueKecil);
                this.columnOverdueMenengah = new global::System.Data.DataColumn("OverdueMenengah", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdueMenengah);
                this.columnOverdueBesar = new global::System.Data.DataColumn("OverdueBesar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdueBesar);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataOvdRow NewDataOvdRow() {
                return ((DataOvdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataOvdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataOvdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataOvdRowChanged != null)) {
                    this.DataOvdRowChanged(this, new DataOvdRowChangeEvent(((DataOvdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataOvdRowChanging != null)) {
                    this.DataOvdRowChanging(this, new DataOvdRowChangeEvent(((DataOvdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataOvdRowDeleted != null)) {
                    this.DataOvdRowDeleted(this, new DataOvdRowChangeEvent(((DataOvdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataOvdRowDeleting != null)) {
                    this.DataOvdRowDeleting(this, new DataOvdRowChangeEvent(((DataOvdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataOvdRow(DataOvdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDashboardKaDepo ds = new dsDashboardKaDepo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataOvdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataLostSalesTokoDataTable : global::System.Data.TypedTableBase<DataLostSalesTokoRow> {
            
            private global::System.Data.DataColumn columnNamaBarang;
            
            private global::System.Data.DataColumn columnBarangID;
            
            private global::System.Data.DataColumn columnQtyBO;
            
            private global::System.Data.DataColumn columnNominal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesTokoDataTable() {
                this.TableName = "DataLostSalesToko";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataLostSalesTokoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataLostSalesTokoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBarangColumn {
                get {
                    return this.columnNamaBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarangIDColumn {
                get {
                    return this.columnBarangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyBOColumn {
                get {
                    return this.columnQtyBO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesTokoRow this[int index] {
                get {
                    return ((DataLostSalesTokoRow)(this.Rows[index]));
                }
            }
            
            public event DataLostSalesTokoRowChangeEventHandler DataLostSalesTokoRowChanging;
            
            public event DataLostSalesTokoRowChangeEventHandler DataLostSalesTokoRowChanged;
            
            public event DataLostSalesTokoRowChangeEventHandler DataLostSalesTokoRowDeleting;
            
            public event DataLostSalesTokoRowChangeEventHandler DataLostSalesTokoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataLostSalesTokoRow(DataLostSalesTokoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesTokoRow AddDataLostSalesTokoRow(string NamaBarang, string BarangID, string QtyBO, string Nominal) {
                DataLostSalesTokoRow rowDataLostSalesTokoRow = ((DataLostSalesTokoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaBarang,
                        BarangID,
                        QtyBO,
                        Nominal};
                rowDataLostSalesTokoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataLostSalesTokoRow);
                return rowDataLostSalesTokoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataLostSalesTokoDataTable cln = ((DataLostSalesTokoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataLostSalesTokoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaBarang = base.Columns["NamaBarang"];
                this.columnBarangID = base.Columns["BarangID"];
                this.columnQtyBO = base.Columns["QtyBO"];
                this.columnNominal = base.Columns["Nominal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaBarang = new global::System.Data.DataColumn("NamaBarang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBarang);
                this.columnBarangID = new global::System.Data.DataColumn("BarangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarangID);
                this.columnQtyBO = new global::System.Data.DataColumn("QtyBO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyBO);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesTokoRow NewDataLostSalesTokoRow() {
                return ((DataLostSalesTokoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataLostSalesTokoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataLostSalesTokoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataLostSalesTokoRowChanged != null)) {
                    this.DataLostSalesTokoRowChanged(this, new DataLostSalesTokoRowChangeEvent(((DataLostSalesTokoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataLostSalesTokoRowChanging != null)) {
                    this.DataLostSalesTokoRowChanging(this, new DataLostSalesTokoRowChangeEvent(((DataLostSalesTokoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataLostSalesTokoRowDeleted != null)) {
                    this.DataLostSalesTokoRowDeleted(this, new DataLostSalesTokoRowChangeEvent(((DataLostSalesTokoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataLostSalesTokoRowDeleting != null)) {
                    this.DataLostSalesTokoRowDeleting(this, new DataLostSalesTokoRowChangeEvent(((DataLostSalesTokoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataLostSalesTokoRow(DataLostSalesTokoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDashboardKaDepo ds = new dsDashboardKaDepo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataLostSalesTokoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataLostSalesWalkInDataTable : global::System.Data.TypedTableBase<DataLostSalesWalkInRow> {
            
            private global::System.Data.DataColumn columnNamaBarang;
            
            private global::System.Data.DataColumn columnBarangID;
            
            private global::System.Data.DataColumn columnQtyBO;
            
            private global::System.Data.DataColumn columnNominal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesWalkInDataTable() {
                this.TableName = "DataLostSalesWalkIn";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataLostSalesWalkInDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataLostSalesWalkInDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBarangColumn {
                get {
                    return this.columnNamaBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarangIDColumn {
                get {
                    return this.columnBarangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyBOColumn {
                get {
                    return this.columnQtyBO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesWalkInRow this[int index] {
                get {
                    return ((DataLostSalesWalkInRow)(this.Rows[index]));
                }
            }
            
            public event DataLostSalesWalkInRowChangeEventHandler DataLostSalesWalkInRowChanging;
            
            public event DataLostSalesWalkInRowChangeEventHandler DataLostSalesWalkInRowChanged;
            
            public event DataLostSalesWalkInRowChangeEventHandler DataLostSalesWalkInRowDeleting;
            
            public event DataLostSalesWalkInRowChangeEventHandler DataLostSalesWalkInRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataLostSalesWalkInRow(DataLostSalesWalkInRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesWalkInRow AddDataLostSalesWalkInRow(string NamaBarang, string BarangID, string QtyBO, string Nominal) {
                DataLostSalesWalkInRow rowDataLostSalesWalkInRow = ((DataLostSalesWalkInRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaBarang,
                        BarangID,
                        QtyBO,
                        Nominal};
                rowDataLostSalesWalkInRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataLostSalesWalkInRow);
                return rowDataLostSalesWalkInRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataLostSalesWalkInDataTable cln = ((DataLostSalesWalkInDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataLostSalesWalkInDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaBarang = base.Columns["NamaBarang"];
                this.columnBarangID = base.Columns["BarangID"];
                this.columnQtyBO = base.Columns["QtyBO"];
                this.columnNominal = base.Columns["Nominal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaBarang = new global::System.Data.DataColumn("NamaBarang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBarang);
                this.columnBarangID = new global::System.Data.DataColumn("BarangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarangID);
                this.columnQtyBO = new global::System.Data.DataColumn("QtyBO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyBO);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesWalkInRow NewDataLostSalesWalkInRow() {
                return ((DataLostSalesWalkInRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataLostSalesWalkInRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataLostSalesWalkInRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataLostSalesWalkInRowChanged != null)) {
                    this.DataLostSalesWalkInRowChanged(this, new DataLostSalesWalkInRowChangeEvent(((DataLostSalesWalkInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataLostSalesWalkInRowChanging != null)) {
                    this.DataLostSalesWalkInRowChanging(this, new DataLostSalesWalkInRowChangeEvent(((DataLostSalesWalkInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataLostSalesWalkInRowDeleted != null)) {
                    this.DataLostSalesWalkInRowDeleted(this, new DataLostSalesWalkInRowChangeEvent(((DataLostSalesWalkInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataLostSalesWalkInRowDeleting != null)) {
                    this.DataLostSalesWalkInRowDeleting(this, new DataLostSalesWalkInRowChangeEvent(((DataLostSalesWalkInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataLostSalesWalkInRow(DataLostSalesWalkInRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDashboardKaDepo ds = new dsDashboardKaDepo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataLostSalesWalkInDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataStockAgingDataTable : global::System.Data.TypedTableBase<DataStockAgingRow> {
            
            private global::System.Data.DataColumn columnNamaBarang;
            
            private global::System.Data.DataColumn columnBarangID;
            
            private global::System.Data.DataColumn columnQtyStock;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnTglTerima;
            
            private global::System.Data.DataColumn columnUmurStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataStockAgingDataTable() {
                this.TableName = "DataStockAging";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataStockAgingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataStockAgingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBarangColumn {
                get {
                    return this.columnNamaBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarangIDColumn {
                get {
                    return this.columnBarangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyStockColumn {
                get {
                    return this.columnQtyStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglTerimaColumn {
                get {
                    return this.columnTglTerima;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UmurStockColumn {
                get {
                    return this.columnUmurStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataStockAgingRow this[int index] {
                get {
                    return ((DataStockAgingRow)(this.Rows[index]));
                }
            }
            
            public event DataStockAgingRowChangeEventHandler DataStockAgingRowChanging;
            
            public event DataStockAgingRowChangeEventHandler DataStockAgingRowChanged;
            
            public event DataStockAgingRowChangeEventHandler DataStockAgingRowDeleting;
            
            public event DataStockAgingRowChangeEventHandler DataStockAgingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataStockAgingRow(DataStockAgingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataStockAgingRow AddDataStockAgingRow(string NamaBarang, string BarangID, string QtyStock, string Nominal, string TglTerima, string UmurStock) {
                DataStockAgingRow rowDataStockAgingRow = ((DataStockAgingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaBarang,
                        BarangID,
                        QtyStock,
                        Nominal,
                        TglTerima,
                        UmurStock};
                rowDataStockAgingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataStockAgingRow);
                return rowDataStockAgingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataStockAgingDataTable cln = ((DataStockAgingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataStockAgingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaBarang = base.Columns["NamaBarang"];
                this.columnBarangID = base.Columns["BarangID"];
                this.columnQtyStock = base.Columns["QtyStock"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnTglTerima = base.Columns["TglTerima"];
                this.columnUmurStock = base.Columns["UmurStock"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaBarang = new global::System.Data.DataColumn("NamaBarang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBarang);
                this.columnBarangID = new global::System.Data.DataColumn("BarangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarangID);
                this.columnQtyStock = new global::System.Data.DataColumn("QtyStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyStock);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnTglTerima = new global::System.Data.DataColumn("TglTerima", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglTerima);
                this.columnUmurStock = new global::System.Data.DataColumn("UmurStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUmurStock);
                this.columnQtyStock.Caption = "QtyBO";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataStockAgingRow NewDataStockAgingRow() {
                return ((DataStockAgingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataStockAgingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataStockAgingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataStockAgingRowChanged != null)) {
                    this.DataStockAgingRowChanged(this, new DataStockAgingRowChangeEvent(((DataStockAgingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataStockAgingRowChanging != null)) {
                    this.DataStockAgingRowChanging(this, new DataStockAgingRowChangeEvent(((DataStockAgingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataStockAgingRowDeleted != null)) {
                    this.DataStockAgingRowDeleted(this, new DataStockAgingRowChangeEvent(((DataStockAgingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataStockAgingRowDeleting != null)) {
                    this.DataStockAgingRowDeleting(this, new DataStockAgingRowChangeEvent(((DataStockAgingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataStockAgingRow(DataStockAgingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDashboardKaDepo ds = new dsDashboardKaDepo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataStockAgingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataBarangFokusDataTable : global::System.Data.TypedTableBase<DataBarangFokusRow> {
            
            private global::System.Data.DataColumn columnNUMBER;
            
            private global::System.Data.DataColumn columnGROUPNAME;
            
            private global::System.Data.DataColumn columnTargetSKU;
            
            private global::System.Data.DataColumn columnActualSKU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataBarangFokusDataTable() {
                this.TableName = "DataBarangFokus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataBarangFokusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataBarangFokusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMBERColumn {
                get {
                    return this.columnNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GROUPNAMEColumn {
                get {
                    return this.columnGROUPNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetSKUColumn {
                get {
                    return this.columnTargetSKU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualSKUColumn {
                get {
                    return this.columnActualSKU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataBarangFokusRow this[int index] {
                get {
                    return ((DataBarangFokusRow)(this.Rows[index]));
                }
            }
            
            public event DataBarangFokusRowChangeEventHandler DataBarangFokusRowChanging;
            
            public event DataBarangFokusRowChangeEventHandler DataBarangFokusRowChanged;
            
            public event DataBarangFokusRowChangeEventHandler DataBarangFokusRowDeleting;
            
            public event DataBarangFokusRowChangeEventHandler DataBarangFokusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataBarangFokusRow(DataBarangFokusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataBarangFokusRow AddDataBarangFokusRow(string NUMBER, string GROUPNAME, string TargetSKU, string ActualSKU) {
                DataBarangFokusRow rowDataBarangFokusRow = ((DataBarangFokusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NUMBER,
                        GROUPNAME,
                        TargetSKU,
                        ActualSKU};
                rowDataBarangFokusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataBarangFokusRow);
                return rowDataBarangFokusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataBarangFokusDataTable cln = ((DataBarangFokusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataBarangFokusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNUMBER = base.Columns["NUMBER"];
                this.columnGROUPNAME = base.Columns["GROUPNAME"];
                this.columnTargetSKU = base.Columns["TargetSKU"];
                this.columnActualSKU = base.Columns["ActualSKU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNUMBER = new global::System.Data.DataColumn("NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMBER);
                this.columnGROUPNAME = new global::System.Data.DataColumn("GROUPNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUPNAME);
                this.columnTargetSKU = new global::System.Data.DataColumn("TargetSKU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetSKU);
                this.columnActualSKU = new global::System.Data.DataColumn("ActualSKU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualSKU);
                this.columnNUMBER.Caption = "NamaBarang";
                this.columnGROUPNAME.Caption = "BarangID";
                this.columnTargetSKU.Caption = "QtyBO";
                this.columnActualSKU.Caption = "Nominal";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataBarangFokusRow NewDataBarangFokusRow() {
                return ((DataBarangFokusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataBarangFokusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataBarangFokusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataBarangFokusRowChanged != null)) {
                    this.DataBarangFokusRowChanged(this, new DataBarangFokusRowChangeEvent(((DataBarangFokusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataBarangFokusRowChanging != null)) {
                    this.DataBarangFokusRowChanging(this, new DataBarangFokusRowChangeEvent(((DataBarangFokusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataBarangFokusRowDeleted != null)) {
                    this.DataBarangFokusRowDeleted(this, new DataBarangFokusRowChangeEvent(((DataBarangFokusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataBarangFokusRowDeleting != null)) {
                    this.DataBarangFokusRowDeleting(this, new DataBarangFokusRowChangeEvent(((DataBarangFokusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataBarangFokusRow(DataBarangFokusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDashboardKaDepo ds = new dsDashboardKaDepo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataBarangFokusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataPSV2DataTable : global::System.Data.TypedTableBase<DataPSV2Row> {
            
            private global::System.Data.DataColumn columnNamaSales;
            
            private global::System.Data.DataColumn columnKodeSales;
            
            private global::System.Data.DataColumn columnTargetBE;
            
            private global::System.Data.DataColumn columnTargetNonBE;
            
            private global::System.Data.DataColumn columnOmsetBE;
            
            private global::System.Data.DataColumn columnOmsetNonBE;
            
            private global::System.Data.DataColumn columnPiutangBE;
            
            private global::System.Data.DataColumn columnPiutangNonBE;
            
            private global::System.Data.DataColumn columnOverdueBE;
            
            private global::System.Data.DataColumn columnOverdueNonBE;
            
            private global::System.Data.DataColumn columnOverdue30;
            
            private global::System.Data.DataColumn columnOverdue60;
            
            private global::System.Data.DataColumn columnOverdue60Plus;
            
            private global::System.Data.DataColumn columnPrevOverdue;
            
            private global::System.Data.DataColumn columnCurOverdue;
            
            private global::System.Data.DataColumn columnPenjualanLuar;
            
            private global::System.Data.DataColumn columnPenjualanService;
            
            private global::System.Data.DataColumn columnUnitService;
            
            private global::System.Data.DataColumn columnCarWashOmset;
            
            private global::System.Data.DataColumn columnCarUnits;
            
            private global::System.Data.DataColumn columnFLAG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSV2DataTable() {
                this.TableName = "DataPSV2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataPSV2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataPSV2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaSalesColumn {
                get {
                    return this.columnNamaSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSalesColumn {
                get {
                    return this.columnKodeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetBEColumn {
                get {
                    return this.columnTargetBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetNonBEColumn {
                get {
                    return this.columnTargetNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OmsetBEColumn {
                get {
                    return this.columnOmsetBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OmsetNonBEColumn {
                get {
                    return this.columnOmsetNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiutangBEColumn {
                get {
                    return this.columnPiutangBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiutangNonBEColumn {
                get {
                    return this.columnPiutangNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverdueBEColumn {
                get {
                    return this.columnOverdueBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverdueNonBEColumn {
                get {
                    return this.columnOverdueNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Overdue30Column {
                get {
                    return this.columnOverdue30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Overdue60Column {
                get {
                    return this.columnOverdue60;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Overdue60PlusColumn {
                get {
                    return this.columnOverdue60Plus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrevOverdueColumn {
                get {
                    return this.columnPrevOverdue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurOverdueColumn {
                get {
                    return this.columnCurOverdue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenjualanLuarColumn {
                get {
                    return this.columnPenjualanLuar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenjualanServiceColumn {
                get {
                    return this.columnPenjualanService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitServiceColumn {
                get {
                    return this.columnUnitService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarWashOmsetColumn {
                get {
                    return this.columnCarWashOmset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarUnitsColumn {
                get {
                    return this.columnCarUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLAGColumn {
                get {
                    return this.columnFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSV2Row this[int index] {
                get {
                    return ((DataPSV2Row)(this.Rows[index]));
                }
            }
            
            public event DataPSV2RowChangeEventHandler DataPSV2RowChanging;
            
            public event DataPSV2RowChangeEventHandler DataPSV2RowChanged;
            
            public event DataPSV2RowChangeEventHandler DataPSV2RowDeleting;
            
            public event DataPSV2RowChangeEventHandler DataPSV2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataPSV2Row(DataPSV2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSV2Row AddDataPSV2Row(
                        string NamaSales, 
                        string KodeSales, 
                        decimal TargetBE, 
                        decimal TargetNonBE, 
                        decimal OmsetBE, 
                        decimal OmsetNonBE, 
                        decimal PiutangBE, 
                        decimal PiutangNonBE, 
                        decimal OverdueBE, 
                        decimal OverdueNonBE, 
                        decimal Overdue30, 
                        decimal Overdue60, 
                        decimal Overdue60Plus, 
                        decimal PrevOverdue, 
                        decimal CurOverdue, 
                        decimal PenjualanLuar, 
                        decimal PenjualanService, 
                        int UnitService, 
                        decimal CarWashOmset, 
                        int CarUnits, 
                        string FLAG) {
                DataPSV2Row rowDataPSV2Row = ((DataPSV2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaSales,
                        KodeSales,
                        TargetBE,
                        TargetNonBE,
                        OmsetBE,
                        OmsetNonBE,
                        PiutangBE,
                        PiutangNonBE,
                        OverdueBE,
                        OverdueNonBE,
                        Overdue30,
                        Overdue60,
                        Overdue60Plus,
                        PrevOverdue,
                        CurOverdue,
                        PenjualanLuar,
                        PenjualanService,
                        UnitService,
                        CarWashOmset,
                        CarUnits,
                        FLAG};
                rowDataPSV2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataPSV2Row);
                return rowDataPSV2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataPSV2DataTable cln = ((DataPSV2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataPSV2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaSales = base.Columns["NamaSales"];
                this.columnKodeSales = base.Columns["KodeSales"];
                this.columnTargetBE = base.Columns["TargetBE"];
                this.columnTargetNonBE = base.Columns["TargetNonBE"];
                this.columnOmsetBE = base.Columns["OmsetBE"];
                this.columnOmsetNonBE = base.Columns["OmsetNonBE"];
                this.columnPiutangBE = base.Columns["PiutangBE"];
                this.columnPiutangNonBE = base.Columns["PiutangNonBE"];
                this.columnOverdueBE = base.Columns["OverdueBE"];
                this.columnOverdueNonBE = base.Columns["OverdueNonBE"];
                this.columnOverdue30 = base.Columns["Overdue30"];
                this.columnOverdue60 = base.Columns["Overdue60"];
                this.columnOverdue60Plus = base.Columns["Overdue60Plus"];
                this.columnPrevOverdue = base.Columns["PrevOverdue"];
                this.columnCurOverdue = base.Columns["CurOverdue"];
                this.columnPenjualanLuar = base.Columns["PenjualanLuar"];
                this.columnPenjualanService = base.Columns["PenjualanService"];
                this.columnUnitService = base.Columns["UnitService"];
                this.columnCarWashOmset = base.Columns["CarWashOmset"];
                this.columnCarUnits = base.Columns["CarUnits"];
                this.columnFLAG = base.Columns["FLAG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaSales = new global::System.Data.DataColumn("NamaSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaSales);
                this.columnKodeSales = new global::System.Data.DataColumn("KodeSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSales);
                this.columnTargetBE = new global::System.Data.DataColumn("TargetBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetBE);
                this.columnTargetNonBE = new global::System.Data.DataColumn("TargetNonBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetNonBE);
                this.columnOmsetBE = new global::System.Data.DataColumn("OmsetBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmsetBE);
                this.columnOmsetNonBE = new global::System.Data.DataColumn("OmsetNonBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmsetNonBE);
                this.columnPiutangBE = new global::System.Data.DataColumn("PiutangBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiutangBE);
                this.columnPiutangNonBE = new global::System.Data.DataColumn("PiutangNonBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiutangNonBE);
                this.columnOverdueBE = new global::System.Data.DataColumn("OverdueBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdueBE);
                this.columnOverdueNonBE = new global::System.Data.DataColumn("OverdueNonBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdueNonBE);
                this.columnOverdue30 = new global::System.Data.DataColumn("Overdue30", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdue30);
                this.columnOverdue60 = new global::System.Data.DataColumn("Overdue60", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdue60);
                this.columnOverdue60Plus = new global::System.Data.DataColumn("Overdue60Plus", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdue60Plus);
                this.columnPrevOverdue = new global::System.Data.DataColumn("PrevOverdue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevOverdue);
                this.columnCurOverdue = new global::System.Data.DataColumn("CurOverdue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurOverdue);
                this.columnPenjualanLuar = new global::System.Data.DataColumn("PenjualanLuar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenjualanLuar);
                this.columnPenjualanService = new global::System.Data.DataColumn("PenjualanService", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenjualanService);
                this.columnUnitService = new global::System.Data.DataColumn("UnitService", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitService);
                this.columnCarWashOmset = new global::System.Data.DataColumn("CarWashOmset", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarWashOmset);
                this.columnCarUnits = new global::System.Data.DataColumn("CarUnits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarUnits);
                this.columnFLAG = new global::System.Data.DataColumn("FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLAG);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSV2Row NewDataPSV2Row() {
                return ((DataPSV2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataPSV2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataPSV2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataPSV2RowChanged != null)) {
                    this.DataPSV2RowChanged(this, new DataPSV2RowChangeEvent(((DataPSV2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataPSV2RowChanging != null)) {
                    this.DataPSV2RowChanging(this, new DataPSV2RowChangeEvent(((DataPSV2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataPSV2RowDeleted != null)) {
                    this.DataPSV2RowDeleted(this, new DataPSV2RowChangeEvent(((DataPSV2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataPSV2RowDeleting != null)) {
                    this.DataPSV2RowDeleting(this, new DataPSV2RowChangeEvent(((DataPSV2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataPSV2Row(DataPSV2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDashboardKaDepo ds = new dsDashboardKaDepo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataPSV2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataPICAreaDataTable : global::System.Data.TypedTableBase<DataPICAreaRow> {
            
            private global::System.Data.DataColumn columnNamaSales;
            
            private global::System.Data.DataColumn columnKodeSales;
            
            private global::System.Data.DataColumn columnTargetBE;
            
            private global::System.Data.DataColumn columnTargetNonBE;
            
            private global::System.Data.DataColumn columnOmsetBE;
            
            private global::System.Data.DataColumn columnOmsetNonBE;
            
            private global::System.Data.DataColumn columnPiutangBE;
            
            private global::System.Data.DataColumn columnPiutangNonBE;
            
            private global::System.Data.DataColumn columnOverdueBE;
            
            private global::System.Data.DataColumn columnOverdueNonBE;
            
            private global::System.Data.DataColumn columnOverdue30;
            
            private global::System.Data.DataColumn columnOverdue60;
            
            private global::System.Data.DataColumn columnOverdue60Plus;
            
            private global::System.Data.DataColumn columnPrevOverdue;
            
            private global::System.Data.DataColumn columnCurOverdue;
            
            private global::System.Data.DataColumn columnFLAG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPICAreaDataTable() {
                this.TableName = "DataPICArea";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataPICAreaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataPICAreaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaSalesColumn {
                get {
                    return this.columnNamaSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSalesColumn {
                get {
                    return this.columnKodeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetBEColumn {
                get {
                    return this.columnTargetBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetNonBEColumn {
                get {
                    return this.columnTargetNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OmsetBEColumn {
                get {
                    return this.columnOmsetBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OmsetNonBEColumn {
                get {
                    return this.columnOmsetNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiutangBEColumn {
                get {
                    return this.columnPiutangBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiutangNonBEColumn {
                get {
                    return this.columnPiutangNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverdueBEColumn {
                get {
                    return this.columnOverdueBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverdueNonBEColumn {
                get {
                    return this.columnOverdueNonBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Overdue30Column {
                get {
                    return this.columnOverdue30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Overdue60Column {
                get {
                    return this.columnOverdue60;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Overdue60PlusColumn {
                get {
                    return this.columnOverdue60Plus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrevOverdueColumn {
                get {
                    return this.columnPrevOverdue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurOverdueColumn {
                get {
                    return this.columnCurOverdue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLAGColumn {
                get {
                    return this.columnFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPICAreaRow this[int index] {
                get {
                    return ((DataPICAreaRow)(this.Rows[index]));
                }
            }
            
            public event DataPICAreaRowChangeEventHandler DataPICAreaRowChanging;
            
            public event DataPICAreaRowChangeEventHandler DataPICAreaRowChanged;
            
            public event DataPICAreaRowChangeEventHandler DataPICAreaRowDeleting;
            
            public event DataPICAreaRowChangeEventHandler DataPICAreaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataPICAreaRow(DataPICAreaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPICAreaRow AddDataPICAreaRow(
                        string NamaSales, 
                        string KodeSales, 
                        decimal TargetBE, 
                        decimal TargetNonBE, 
                        decimal OmsetBE, 
                        decimal OmsetNonBE, 
                        decimal PiutangBE, 
                        decimal PiutangNonBE, 
                        decimal OverdueBE, 
                        decimal OverdueNonBE, 
                        decimal Overdue30, 
                        decimal Overdue60, 
                        decimal Overdue60Plus, 
                        decimal PrevOverdue, 
                        decimal CurOverdue, 
                        string FLAG) {
                DataPICAreaRow rowDataPICAreaRow = ((DataPICAreaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaSales,
                        KodeSales,
                        TargetBE,
                        TargetNonBE,
                        OmsetBE,
                        OmsetNonBE,
                        PiutangBE,
                        PiutangNonBE,
                        OverdueBE,
                        OverdueNonBE,
                        Overdue30,
                        Overdue60,
                        Overdue60Plus,
                        PrevOverdue,
                        CurOverdue,
                        FLAG};
                rowDataPICAreaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataPICAreaRow);
                return rowDataPICAreaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataPICAreaDataTable cln = ((DataPICAreaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataPICAreaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaSales = base.Columns["NamaSales"];
                this.columnKodeSales = base.Columns["KodeSales"];
                this.columnTargetBE = base.Columns["TargetBE"];
                this.columnTargetNonBE = base.Columns["TargetNonBE"];
                this.columnOmsetBE = base.Columns["OmsetBE"];
                this.columnOmsetNonBE = base.Columns["OmsetNonBE"];
                this.columnPiutangBE = base.Columns["PiutangBE"];
                this.columnPiutangNonBE = base.Columns["PiutangNonBE"];
                this.columnOverdueBE = base.Columns["OverdueBE"];
                this.columnOverdueNonBE = base.Columns["OverdueNonBE"];
                this.columnOverdue30 = base.Columns["Overdue30"];
                this.columnOverdue60 = base.Columns["Overdue60"];
                this.columnOverdue60Plus = base.Columns["Overdue60Plus"];
                this.columnPrevOverdue = base.Columns["PrevOverdue"];
                this.columnCurOverdue = base.Columns["CurOverdue"];
                this.columnFLAG = base.Columns["FLAG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaSales = new global::System.Data.DataColumn("NamaSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaSales);
                this.columnKodeSales = new global::System.Data.DataColumn("KodeSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSales);
                this.columnTargetBE = new global::System.Data.DataColumn("TargetBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetBE);
                this.columnTargetNonBE = new global::System.Data.DataColumn("TargetNonBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetNonBE);
                this.columnOmsetBE = new global::System.Data.DataColumn("OmsetBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmsetBE);
                this.columnOmsetNonBE = new global::System.Data.DataColumn("OmsetNonBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmsetNonBE);
                this.columnPiutangBE = new global::System.Data.DataColumn("PiutangBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiutangBE);
                this.columnPiutangNonBE = new global::System.Data.DataColumn("PiutangNonBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiutangNonBE);
                this.columnOverdueBE = new global::System.Data.DataColumn("OverdueBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdueBE);
                this.columnOverdueNonBE = new global::System.Data.DataColumn("OverdueNonBE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdueNonBE);
                this.columnOverdue30 = new global::System.Data.DataColumn("Overdue30", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdue30);
                this.columnOverdue60 = new global::System.Data.DataColumn("Overdue60", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdue60);
                this.columnOverdue60Plus = new global::System.Data.DataColumn("Overdue60Plus", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdue60Plus);
                this.columnPrevOverdue = new global::System.Data.DataColumn("PrevOverdue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevOverdue);
                this.columnCurOverdue = new global::System.Data.DataColumn("CurOverdue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurOverdue);
                this.columnFLAG = new global::System.Data.DataColumn("FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLAG);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPICAreaRow NewDataPICAreaRow() {
                return ((DataPICAreaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataPICAreaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataPICAreaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataPICAreaRowChanged != null)) {
                    this.DataPICAreaRowChanged(this, new DataPICAreaRowChangeEvent(((DataPICAreaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataPICAreaRowChanging != null)) {
                    this.DataPICAreaRowChanging(this, new DataPICAreaRowChangeEvent(((DataPICAreaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataPICAreaRowDeleted != null)) {
                    this.DataPICAreaRowDeleted(this, new DataPICAreaRowChangeEvent(((DataPICAreaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataPICAreaRowDeleting != null)) {
                    this.DataPICAreaRowDeleting(this, new DataPICAreaRowChangeEvent(((DataPICAreaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataPICAreaRow(DataPICAreaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDashboardKaDepo ds = new dsDashboardKaDepo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataPICAreaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataPSRow : global::System.Data.DataRow {
            
            private DataPSDataTable tableDataPS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataPSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataPS = ((DataPSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaSales {
                get {
                    try {
                        return ((string)(this[this.tableDataPS.NamaSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaSales\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.NamaSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TargetOmset {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPS.TargetOmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetOmset\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.TargetOmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ActualOmset {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPS.ActualOmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualOmset\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.ActualOmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PiutangLancar {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPS.PiutangLancarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiutangLancar\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.PiutangLancarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PiutangOverdue {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPS.PiutangOverdueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiutangOverdue\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.PiutangOverdueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NotaBawa {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPS.NotaBawaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotaBawa\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.NotaBawaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ActualTagih {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPS.ActualTagihColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualTagih\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.ActualTagihColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RencanaKunjungan {
                get {
                    try {
                        return ((int)(this[this.tableDataPS.RencanaKunjunganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RencanaKunjungan\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.RencanaKunjunganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HasilKunjungan {
                get {
                    try {
                        return ((int)(this[this.tableDataPS.HasilKunjunganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasilKunjungan\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.HasilKunjunganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActualOmsetPers {
                get {
                    try {
                        return ((string)(this[this.tableDataPS.ActualOmsetPersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualOmsetPers\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.ActualOmsetPersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActualTagihPers {
                get {
                    try {
                        return ((string)(this[this.tableDataPS.ActualTagihPersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualTagihPers\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.ActualTagihPersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActualKunjungPers {
                get {
                    try {
                        return ((string)(this[this.tableDataPS.ActualKunjungPersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualKunjungPers\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.ActualKunjungPersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesID {
                get {
                    try {
                        return ((string)(this[this.tableDataPS.SalesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesID\' in table \'DataPS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPS.SalesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaSalesNull() {
                return this.IsNull(this.tableDataPS.NamaSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaSalesNull() {
                this[this.tableDataPS.NamaSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetOmsetNull() {
                return this.IsNull(this.tableDataPS.TargetOmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetOmsetNull() {
                this[this.tableDataPS.TargetOmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualOmsetNull() {
                return this.IsNull(this.tableDataPS.ActualOmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualOmsetNull() {
                this[this.tableDataPS.ActualOmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiutangLancarNull() {
                return this.IsNull(this.tableDataPS.PiutangLancarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiutangLancarNull() {
                this[this.tableDataPS.PiutangLancarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiutangOverdueNull() {
                return this.IsNull(this.tableDataPS.PiutangOverdueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiutangOverdueNull() {
                this[this.tableDataPS.PiutangOverdueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotaBawaNull() {
                return this.IsNull(this.tableDataPS.NotaBawaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotaBawaNull() {
                this[this.tableDataPS.NotaBawaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualTagihNull() {
                return this.IsNull(this.tableDataPS.ActualTagihColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualTagihNull() {
                this[this.tableDataPS.ActualTagihColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRencanaKunjunganNull() {
                return this.IsNull(this.tableDataPS.RencanaKunjunganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRencanaKunjunganNull() {
                this[this.tableDataPS.RencanaKunjunganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHasilKunjunganNull() {
                return this.IsNull(this.tableDataPS.HasilKunjunganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHasilKunjunganNull() {
                this[this.tableDataPS.HasilKunjunganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualOmsetPersNull() {
                return this.IsNull(this.tableDataPS.ActualOmsetPersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualOmsetPersNull() {
                this[this.tableDataPS.ActualOmsetPersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualTagihPersNull() {
                return this.IsNull(this.tableDataPS.ActualTagihPersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualTagihPersNull() {
                this[this.tableDataPS.ActualTagihPersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualKunjungPersNull() {
                return this.IsNull(this.tableDataPS.ActualKunjungPersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualKunjungPersNull() {
                this[this.tableDataPS.ActualKunjungPersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesIDNull() {
                return this.IsNull(this.tableDataPS.SalesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesIDNull() {
                this[this.tableDataPS.SalesIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataOvdRow : global::System.Data.DataRow {
            
            private DataOvdDataTable tableDataOvd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataOvdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataOvd = ((DataOvdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaSales {
                get {
                    try {
                        return ((string)(this[this.tableDataOvd.NamaSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaSales\' in table \'DataOvd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataOvd.NamaSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LatestOverdue {
                get {
                    try {
                        return ((string)(this[this.tableDataOvd.LatestOverdueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LatestOverdue\' in table \'DataOvd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataOvd.LatestOverdueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldOverdue {
                get {
                    try {
                        return ((string)(this[this.tableDataOvd.OldOverdueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldOverdue\' in table \'DataOvd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataOvd.OldOverdueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OverdueKecil {
                get {
                    try {
                        return ((string)(this[this.tableDataOvd.OverdueKecilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverdueKecil\' in table \'DataOvd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataOvd.OverdueKecilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OverdueMenengah {
                get {
                    try {
                        return ((string)(this[this.tableDataOvd.OverdueMenengahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverdueMenengah\' in table \'DataOvd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataOvd.OverdueMenengahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OverdueBesar {
                get {
                    try {
                        return ((string)(this[this.tableDataOvd.OverdueBesarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverdueBesar\' in table \'DataOvd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataOvd.OverdueBesarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaSalesNull() {
                return this.IsNull(this.tableDataOvd.NamaSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaSalesNull() {
                this[this.tableDataOvd.NamaSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatestOverdueNull() {
                return this.IsNull(this.tableDataOvd.LatestOverdueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatestOverdueNull() {
                this[this.tableDataOvd.LatestOverdueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldOverdueNull() {
                return this.IsNull(this.tableDataOvd.OldOverdueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldOverdueNull() {
                this[this.tableDataOvd.OldOverdueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdueKecilNull() {
                return this.IsNull(this.tableDataOvd.OverdueKecilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdueKecilNull() {
                this[this.tableDataOvd.OverdueKecilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdueMenengahNull() {
                return this.IsNull(this.tableDataOvd.OverdueMenengahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdueMenengahNull() {
                this[this.tableDataOvd.OverdueMenengahColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdueBesarNull() {
                return this.IsNull(this.tableDataOvd.OverdueBesarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdueBesarNull() {
                this[this.tableDataOvd.OverdueBesarColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataLostSalesTokoRow : global::System.Data.DataRow {
            
            private DataLostSalesTokoDataTable tableDataLostSalesToko;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataLostSalesTokoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataLostSalesToko = ((DataLostSalesTokoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBarang {
                get {
                    try {
                        return ((string)(this[this.tableDataLostSalesToko.NamaBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBarang\' in table \'DataLostSalesToko\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataLostSalesToko.NamaBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BarangID {
                get {
                    try {
                        return ((string)(this[this.tableDataLostSalesToko.BarangIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarangID\' in table \'DataLostSalesToko\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataLostSalesToko.BarangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyBO {
                get {
                    try {
                        return ((string)(this[this.tableDataLostSalesToko.QtyBOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyBO\' in table \'DataLostSalesToko\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataLostSalesToko.QtyBOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableDataLostSalesToko.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'DataLostSalesToko\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataLostSalesToko.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBarangNull() {
                return this.IsNull(this.tableDataLostSalesToko.NamaBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBarangNull() {
                this[this.tableDataLostSalesToko.NamaBarangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarangIDNull() {
                return this.IsNull(this.tableDataLostSalesToko.BarangIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarangIDNull() {
                this[this.tableDataLostSalesToko.BarangIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyBONull() {
                return this.IsNull(this.tableDataLostSalesToko.QtyBOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyBONull() {
                this[this.tableDataLostSalesToko.QtyBOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableDataLostSalesToko.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableDataLostSalesToko.NominalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataLostSalesWalkInRow : global::System.Data.DataRow {
            
            private DataLostSalesWalkInDataTable tableDataLostSalesWalkIn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataLostSalesWalkInRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataLostSalesWalkIn = ((DataLostSalesWalkInDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBarang {
                get {
                    try {
                        return ((string)(this[this.tableDataLostSalesWalkIn.NamaBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBarang\' in table \'DataLostSalesWalkIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataLostSalesWalkIn.NamaBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BarangID {
                get {
                    try {
                        return ((string)(this[this.tableDataLostSalesWalkIn.BarangIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarangID\' in table \'DataLostSalesWalkIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataLostSalesWalkIn.BarangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyBO {
                get {
                    try {
                        return ((string)(this[this.tableDataLostSalesWalkIn.QtyBOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyBO\' in table \'DataLostSalesWalkIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataLostSalesWalkIn.QtyBOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableDataLostSalesWalkIn.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'DataLostSalesWalkIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataLostSalesWalkIn.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBarangNull() {
                return this.IsNull(this.tableDataLostSalesWalkIn.NamaBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBarangNull() {
                this[this.tableDataLostSalesWalkIn.NamaBarangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarangIDNull() {
                return this.IsNull(this.tableDataLostSalesWalkIn.BarangIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarangIDNull() {
                this[this.tableDataLostSalesWalkIn.BarangIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyBONull() {
                return this.IsNull(this.tableDataLostSalesWalkIn.QtyBOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyBONull() {
                this[this.tableDataLostSalesWalkIn.QtyBOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableDataLostSalesWalkIn.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableDataLostSalesWalkIn.NominalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataStockAgingRow : global::System.Data.DataRow {
            
            private DataStockAgingDataTable tableDataStockAging;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataStockAgingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataStockAging = ((DataStockAgingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBarang {
                get {
                    try {
                        return ((string)(this[this.tableDataStockAging.NamaBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBarang\' in table \'DataStockAging\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataStockAging.NamaBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BarangID {
                get {
                    try {
                        return ((string)(this[this.tableDataStockAging.BarangIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarangID\' in table \'DataStockAging\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataStockAging.BarangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtyStock {
                get {
                    try {
                        return ((string)(this[this.tableDataStockAging.QtyStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyStock\' in table \'DataStockAging\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataStockAging.QtyStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableDataStockAging.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'DataStockAging\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataStockAging.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglTerima {
                get {
                    try {
                        return ((string)(this[this.tableDataStockAging.TglTerimaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglTerima\' in table \'DataStockAging\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataStockAging.TglTerimaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UmurStock {
                get {
                    try {
                        return ((string)(this[this.tableDataStockAging.UmurStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UmurStock\' in table \'DataStockAging\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataStockAging.UmurStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBarangNull() {
                return this.IsNull(this.tableDataStockAging.NamaBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBarangNull() {
                this[this.tableDataStockAging.NamaBarangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarangIDNull() {
                return this.IsNull(this.tableDataStockAging.BarangIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarangIDNull() {
                this[this.tableDataStockAging.BarangIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyStockNull() {
                return this.IsNull(this.tableDataStockAging.QtyStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyStockNull() {
                this[this.tableDataStockAging.QtyStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableDataStockAging.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableDataStockAging.NominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglTerimaNull() {
                return this.IsNull(this.tableDataStockAging.TglTerimaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglTerimaNull() {
                this[this.tableDataStockAging.TglTerimaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUmurStockNull() {
                return this.IsNull(this.tableDataStockAging.UmurStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUmurStockNull() {
                this[this.tableDataStockAging.UmurStockColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataBarangFokusRow : global::System.Data.DataRow {
            
            private DataBarangFokusDataTable tableDataBarangFokus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataBarangFokusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataBarangFokus = ((DataBarangFokusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableDataBarangFokus.NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMBER\' in table \'DataBarangFokus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataBarangFokus.NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GROUPNAME {
                get {
                    try {
                        return ((string)(this[this.tableDataBarangFokus.GROUPNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GROUPNAME\' in table \'DataBarangFokus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataBarangFokus.GROUPNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TargetSKU {
                get {
                    try {
                        return ((string)(this[this.tableDataBarangFokus.TargetSKUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetSKU\' in table \'DataBarangFokus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataBarangFokus.TargetSKUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActualSKU {
                get {
                    try {
                        return ((string)(this[this.tableDataBarangFokus.ActualSKUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualSKU\' in table \'DataBarangFokus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataBarangFokus.ActualSKUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMBERNull() {
                return this.IsNull(this.tableDataBarangFokus.NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMBERNull() {
                this[this.tableDataBarangFokus.NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGROUPNAMENull() {
                return this.IsNull(this.tableDataBarangFokus.GROUPNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGROUPNAMENull() {
                this[this.tableDataBarangFokus.GROUPNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetSKUNull() {
                return this.IsNull(this.tableDataBarangFokus.TargetSKUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetSKUNull() {
                this[this.tableDataBarangFokus.TargetSKUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualSKUNull() {
                return this.IsNull(this.tableDataBarangFokus.ActualSKUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualSKUNull() {
                this[this.tableDataBarangFokus.ActualSKUColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataPSV2Row : global::System.Data.DataRow {
            
            private DataPSV2DataTable tableDataPSV2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataPSV2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataPSV2 = ((DataPSV2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaSales {
                get {
                    try {
                        return ((string)(this[this.tableDataPSV2.NamaSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaSales\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.NamaSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSales {
                get {
                    try {
                        return ((string)(this[this.tableDataPSV2.KodeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSales\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.KodeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TargetBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.TargetBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetBE\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.TargetBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TargetNonBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.TargetNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetNonBE\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.TargetNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OmsetBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.OmsetBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OmsetBE\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.OmsetBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OmsetNonBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.OmsetNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OmsetNonBE\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.OmsetNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PiutangBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.PiutangBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiutangBE\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.PiutangBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PiutangNonBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.PiutangNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiutangNonBE\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.PiutangNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverdueBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.OverdueBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverdueBE\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.OverdueBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverdueNonBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.OverdueNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverdueNonBE\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.OverdueNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Overdue30 {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.Overdue30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Overdue30\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.Overdue30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Overdue60 {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.Overdue60Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Overdue60\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.Overdue60Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Overdue60Plus {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.Overdue60PlusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Overdue60Plus\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.Overdue60PlusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PrevOverdue {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.PrevOverdueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevOverdue\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.PrevOverdueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CurOverdue {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.CurOverdueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurOverdue\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.CurOverdueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PenjualanLuar {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.PenjualanLuarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenjualanLuar\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.PenjualanLuarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PenjualanService {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.PenjualanServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenjualanService\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.PenjualanServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitService {
                get {
                    try {
                        return ((int)(this[this.tableDataPSV2.UnitServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitService\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.UnitServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CarWashOmset {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPSV2.CarWashOmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarWashOmset\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.CarWashOmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CarUnits {
                get {
                    try {
                        return ((int)(this[this.tableDataPSV2.CarUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarUnits\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.CarUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLAG {
                get {
                    try {
                        return ((string)(this[this.tableDataPSV2.FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLAG\' in table \'DataPSV2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPSV2.FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaSalesNull() {
                return this.IsNull(this.tableDataPSV2.NamaSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaSalesNull() {
                this[this.tableDataPSV2.NamaSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSalesNull() {
                return this.IsNull(this.tableDataPSV2.KodeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSalesNull() {
                this[this.tableDataPSV2.KodeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetBENull() {
                return this.IsNull(this.tableDataPSV2.TargetBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetBENull() {
                this[this.tableDataPSV2.TargetBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetNonBENull() {
                return this.IsNull(this.tableDataPSV2.TargetNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetNonBENull() {
                this[this.tableDataPSV2.TargetNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmsetBENull() {
                return this.IsNull(this.tableDataPSV2.OmsetBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmsetBENull() {
                this[this.tableDataPSV2.OmsetBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmsetNonBENull() {
                return this.IsNull(this.tableDataPSV2.OmsetNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmsetNonBENull() {
                this[this.tableDataPSV2.OmsetNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiutangBENull() {
                return this.IsNull(this.tableDataPSV2.PiutangBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiutangBENull() {
                this[this.tableDataPSV2.PiutangBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiutangNonBENull() {
                return this.IsNull(this.tableDataPSV2.PiutangNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiutangNonBENull() {
                this[this.tableDataPSV2.PiutangNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdueBENull() {
                return this.IsNull(this.tableDataPSV2.OverdueBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdueBENull() {
                this[this.tableDataPSV2.OverdueBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdueNonBENull() {
                return this.IsNull(this.tableDataPSV2.OverdueNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdueNonBENull() {
                this[this.tableDataPSV2.OverdueNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdue30Null() {
                return this.IsNull(this.tableDataPSV2.Overdue30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdue30Null() {
                this[this.tableDataPSV2.Overdue30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdue60Null() {
                return this.IsNull(this.tableDataPSV2.Overdue60Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdue60Null() {
                this[this.tableDataPSV2.Overdue60Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdue60PlusNull() {
                return this.IsNull(this.tableDataPSV2.Overdue60PlusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdue60PlusNull() {
                this[this.tableDataPSV2.Overdue60PlusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrevOverdueNull() {
                return this.IsNull(this.tableDataPSV2.PrevOverdueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrevOverdueNull() {
                this[this.tableDataPSV2.PrevOverdueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurOverdueNull() {
                return this.IsNull(this.tableDataPSV2.CurOverdueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurOverdueNull() {
                this[this.tableDataPSV2.CurOverdueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenjualanLuarNull() {
                return this.IsNull(this.tableDataPSV2.PenjualanLuarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenjualanLuarNull() {
                this[this.tableDataPSV2.PenjualanLuarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenjualanServiceNull() {
                return this.IsNull(this.tableDataPSV2.PenjualanServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenjualanServiceNull() {
                this[this.tableDataPSV2.PenjualanServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitServiceNull() {
                return this.IsNull(this.tableDataPSV2.UnitServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitServiceNull() {
                this[this.tableDataPSV2.UnitServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarWashOmsetNull() {
                return this.IsNull(this.tableDataPSV2.CarWashOmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarWashOmsetNull() {
                this[this.tableDataPSV2.CarWashOmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarUnitsNull() {
                return this.IsNull(this.tableDataPSV2.CarUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarUnitsNull() {
                this[this.tableDataPSV2.CarUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLAGNull() {
                return this.IsNull(this.tableDataPSV2.FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLAGNull() {
                this[this.tableDataPSV2.FLAGColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataPICAreaRow : global::System.Data.DataRow {
            
            private DataPICAreaDataTable tableDataPICArea;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataPICAreaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataPICArea = ((DataPICAreaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaSales {
                get {
                    try {
                        return ((string)(this[this.tableDataPICArea.NamaSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaSales\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.NamaSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSales {
                get {
                    try {
                        return ((string)(this[this.tableDataPICArea.KodeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSales\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.KodeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TargetBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.TargetBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetBE\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.TargetBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TargetNonBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.TargetNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetNonBE\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.TargetNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OmsetBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.OmsetBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OmsetBE\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.OmsetBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OmsetNonBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.OmsetNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OmsetNonBE\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.OmsetNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PiutangBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.PiutangBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiutangBE\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.PiutangBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PiutangNonBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.PiutangNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiutangNonBE\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.PiutangNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverdueBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.OverdueBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverdueBE\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.OverdueBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OverdueNonBE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.OverdueNonBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverdueNonBE\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.OverdueNonBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Overdue30 {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.Overdue30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Overdue30\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.Overdue30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Overdue60 {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.Overdue60Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Overdue60\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.Overdue60Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Overdue60Plus {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.Overdue60PlusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Overdue60Plus\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.Overdue60PlusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PrevOverdue {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.PrevOverdueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevOverdue\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.PrevOverdueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CurOverdue {
                get {
                    try {
                        return ((decimal)(this[this.tableDataPICArea.CurOverdueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurOverdue\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.CurOverdueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLAG {
                get {
                    try {
                        return ((string)(this[this.tableDataPICArea.FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLAG\' in table \'DataPICArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataPICArea.FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaSalesNull() {
                return this.IsNull(this.tableDataPICArea.NamaSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaSalesNull() {
                this[this.tableDataPICArea.NamaSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSalesNull() {
                return this.IsNull(this.tableDataPICArea.KodeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSalesNull() {
                this[this.tableDataPICArea.KodeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetBENull() {
                return this.IsNull(this.tableDataPICArea.TargetBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetBENull() {
                this[this.tableDataPICArea.TargetBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetNonBENull() {
                return this.IsNull(this.tableDataPICArea.TargetNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetNonBENull() {
                this[this.tableDataPICArea.TargetNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmsetBENull() {
                return this.IsNull(this.tableDataPICArea.OmsetBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmsetBENull() {
                this[this.tableDataPICArea.OmsetBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmsetNonBENull() {
                return this.IsNull(this.tableDataPICArea.OmsetNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmsetNonBENull() {
                this[this.tableDataPICArea.OmsetNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiutangBENull() {
                return this.IsNull(this.tableDataPICArea.PiutangBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiutangBENull() {
                this[this.tableDataPICArea.PiutangBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiutangNonBENull() {
                return this.IsNull(this.tableDataPICArea.PiutangNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiutangNonBENull() {
                this[this.tableDataPICArea.PiutangNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdueBENull() {
                return this.IsNull(this.tableDataPICArea.OverdueBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdueBENull() {
                this[this.tableDataPICArea.OverdueBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdueNonBENull() {
                return this.IsNull(this.tableDataPICArea.OverdueNonBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdueNonBENull() {
                this[this.tableDataPICArea.OverdueNonBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdue30Null() {
                return this.IsNull(this.tableDataPICArea.Overdue30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdue30Null() {
                this[this.tableDataPICArea.Overdue30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdue60Null() {
                return this.IsNull(this.tableDataPICArea.Overdue60Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdue60Null() {
                this[this.tableDataPICArea.Overdue60Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdue60PlusNull() {
                return this.IsNull(this.tableDataPICArea.Overdue60PlusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdue60PlusNull() {
                this[this.tableDataPICArea.Overdue60PlusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrevOverdueNull() {
                return this.IsNull(this.tableDataPICArea.PrevOverdueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrevOverdueNull() {
                this[this.tableDataPICArea.PrevOverdueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurOverdueNull() {
                return this.IsNull(this.tableDataPICArea.CurOverdueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurOverdueNull() {
                this[this.tableDataPICArea.CurOverdueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLAGNull() {
                return this.IsNull(this.tableDataPICArea.FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLAGNull() {
                this[this.tableDataPICArea.FLAGColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataPSRowChangeEvent : global::System.EventArgs {
            
            private DataPSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSRowChangeEvent(DataPSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataOvdRowChangeEvent : global::System.EventArgs {
            
            private DataOvdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataOvdRowChangeEvent(DataOvdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataOvdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataLostSalesTokoRowChangeEvent : global::System.EventArgs {
            
            private DataLostSalesTokoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesTokoRowChangeEvent(DataLostSalesTokoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesTokoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataLostSalesWalkInRowChangeEvent : global::System.EventArgs {
            
            private DataLostSalesWalkInRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesWalkInRowChangeEvent(DataLostSalesWalkInRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataLostSalesWalkInRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataStockAgingRowChangeEvent : global::System.EventArgs {
            
            private DataStockAgingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataStockAgingRowChangeEvent(DataStockAgingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataStockAgingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataBarangFokusRowChangeEvent : global::System.EventArgs {
            
            private DataBarangFokusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataBarangFokusRowChangeEvent(DataBarangFokusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataBarangFokusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataPSV2RowChangeEvent : global::System.EventArgs {
            
            private DataPSV2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSV2RowChangeEvent(DataPSV2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPSV2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataPICAreaRowChangeEvent : global::System.EventArgs {
            
            private DataPICAreaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPICAreaRowChangeEvent(DataPICAreaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataPICAreaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591