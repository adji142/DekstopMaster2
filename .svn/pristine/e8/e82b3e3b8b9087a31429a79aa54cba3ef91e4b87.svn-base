//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8825
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Bengkel.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsCetakNotaBengkel")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsCetakNotaBengkel : global::System.Data.DataSet {
        
        private DataDataTable tableData;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsCetakNotaBengkel() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsCetakNotaBengkel(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsCetakNotaBengkel cln = ((dsCetakNotaBengkel)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsCetakNotaBengkel";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsCetakNotaBengkel.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsCetakNotaBengkel ds = new dsCetakNotaBengkel();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.TypedTableBase<DataRow> {
            
            private global::System.Data.DataColumn columnTgl_srv;
            
            private global::System.Data.DataColumn columnNomor;
            
            private global::System.Data.DataColumn columnNo_pol;
            
            private global::System.Data.DataColumn columnSpm;
            
            private global::System.Data.DataColumn columnMekanik;
            
            private global::System.Data.DataColumn columnKodeMekanik;
            
            private global::System.Data.DataColumn columnService;
            
            private global::System.Data.DataColumn columnBiaya;
            
            private global::System.Data.DataColumn columnBiayaNetto;
            
            private global::System.Data.DataColumn columnNamaStok;
            
            private global::System.Data.DataColumn columnBarangID;
            
            private global::System.Data.DataColumn columnKlp;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnHarga;
            
            private global::System.Data.DataColumn columnDisc1;
            
            private global::System.Data.DataColumn columnDisc2;
            
            private global::System.Data.DataColumn columnDisc3;
            
            private global::System.Data.DataColumn columnPot;
            
            private global::System.Data.DataColumn columnSat;
            
            private global::System.Data.DataColumn columnBeliluar;
            
            private global::System.Data.DataColumn columnLainlain;
            
            private global::System.Data.DataColumn columnHargaNet;
            
            private global::System.Data.DataColumn columnPemilik;
            
            private global::System.Data.DataColumn columnPemilikID;
            
            private global::System.Data.DataColumn columnSales;
            
            private global::System.Data.DataColumn columnNoSuratJalan;
            
            private global::System.Data.DataColumn columnJumlahNet;
            
            private global::System.Data.DataColumn columnno_telp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tgl_srvColumn {
                get {
                    return this.columnTgl_srv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomorColumn {
                get {
                    return this.columnNomor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn No_polColumn {
                get {
                    return this.columnNo_pol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpmColumn {
                get {
                    return this.columnSpm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MekanikColumn {
                get {
                    return this.columnMekanik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeMekanikColumn {
                get {
                    return this.columnKodeMekanik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceColumn {
                get {
                    return this.columnService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BiayaColumn {
                get {
                    return this.columnBiaya;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BiayaNettoColumn {
                get {
                    return this.columnBiayaNetto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStokColumn {
                get {
                    return this.columnNamaStok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarangIDColumn {
                get {
                    return this.columnBarangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KlpColumn {
                get {
                    return this.columnKlp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaColumn {
                get {
                    return this.columnHarga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Disc1Column {
                get {
                    return this.columnDisc1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Disc2Column {
                get {
                    return this.columnDisc2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Disc3Column {
                get {
                    return this.columnDisc3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PotColumn {
                get {
                    return this.columnPot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatColumn {
                get {
                    return this.columnSat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeliluarColumn {
                get {
                    return this.columnBeliluar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainlainColumn {
                get {
                    return this.columnLainlain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaNetColumn {
                get {
                    return this.columnHargaNet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PemilikColumn {
                get {
                    return this.columnPemilik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PemilikIDColumn {
                get {
                    return this.columnPemilikID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesColumn {
                get {
                    return this.columnSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoSuratJalanColumn {
                get {
                    return this.columnNoSuratJalan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JumlahNetColumn {
                get {
                    return this.columnJumlahNet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn no_telpColumn {
                get {
                    return this.columnno_telp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            
            public event DataRowChangeEventHandler DataRowChanging;
            
            public event DataRowChangeEventHandler DataRowChanged;
            
            public event DataRowChangeEventHandler DataRowDeleting;
            
            public event DataRowChangeEventHandler DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow AddDataRow(
                        string Tgl_srv, 
                        string Nomor, 
                        string No_pol, 
                        string Spm, 
                        string Mekanik, 
                        string KodeMekanik, 
                        string Service, 
                        string Biaya, 
                        string BiayaNetto, 
                        string NamaStok, 
                        string BarangID, 
                        string Klp, 
                        string Qty, 
                        string Harga, 
                        string Disc1, 
                        string Disc2, 
                        string Disc3, 
                        string Pot, 
                        string Sat, 
                        string Beliluar, 
                        string Lainlain, 
                        string HargaNet, 
                        string Pemilik, 
                        string PemilikID, 
                        string Sales, 
                        string NoSuratJalan, 
                        string JumlahNet, 
                        string no_telp) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Tgl_srv,
                        Nomor,
                        No_pol,
                        Spm,
                        Mekanik,
                        KodeMekanik,
                        Service,
                        Biaya,
                        BiayaNetto,
                        NamaStok,
                        BarangID,
                        Klp,
                        Qty,
                        Harga,
                        Disc1,
                        Disc2,
                        Disc3,
                        Pot,
                        Sat,
                        Beliluar,
                        Lainlain,
                        HargaNet,
                        Pemilik,
                        PemilikID,
                        Sales,
                        NoSuratJalan,
                        JumlahNet,
                        no_telp};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTgl_srv = base.Columns["Tgl_srv"];
                this.columnNomor = base.Columns["Nomor"];
                this.columnNo_pol = base.Columns["No_pol"];
                this.columnSpm = base.Columns["Spm"];
                this.columnMekanik = base.Columns["Mekanik"];
                this.columnKodeMekanik = base.Columns["KodeMekanik"];
                this.columnService = base.Columns["Service"];
                this.columnBiaya = base.Columns["Biaya"];
                this.columnBiayaNetto = base.Columns["BiayaNetto"];
                this.columnNamaStok = base.Columns["NamaStok"];
                this.columnBarangID = base.Columns["BarangID"];
                this.columnKlp = base.Columns["Klp"];
                this.columnQty = base.Columns["Qty"];
                this.columnHarga = base.Columns["Harga"];
                this.columnDisc1 = base.Columns["Disc1"];
                this.columnDisc2 = base.Columns["Disc2"];
                this.columnDisc3 = base.Columns["Disc3"];
                this.columnPot = base.Columns["Pot"];
                this.columnSat = base.Columns["Sat"];
                this.columnBeliluar = base.Columns["Beliluar"];
                this.columnLainlain = base.Columns["Lainlain"];
                this.columnHargaNet = base.Columns["HargaNet"];
                this.columnPemilik = base.Columns["Pemilik"];
                this.columnPemilikID = base.Columns["PemilikID"];
                this.columnSales = base.Columns["Sales"];
                this.columnNoSuratJalan = base.Columns["NoSuratJalan"];
                this.columnJumlahNet = base.Columns["JumlahNet"];
                this.columnno_telp = base.Columns["no_telp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTgl_srv = new global::System.Data.DataColumn("Tgl_srv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTgl_srv);
                this.columnNomor = new global::System.Data.DataColumn("Nomor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomor);
                this.columnNo_pol = new global::System.Data.DataColumn("No_pol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_pol);
                this.columnSpm = new global::System.Data.DataColumn("Spm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpm);
                this.columnMekanik = new global::System.Data.DataColumn("Mekanik", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMekanik);
                this.columnKodeMekanik = new global::System.Data.DataColumn("KodeMekanik", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeMekanik);
                this.columnService = new global::System.Data.DataColumn("Service", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService);
                this.columnBiaya = new global::System.Data.DataColumn("Biaya", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiaya);
                this.columnBiayaNetto = new global::System.Data.DataColumn("BiayaNetto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiayaNetto);
                this.columnNamaStok = new global::System.Data.DataColumn("NamaStok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStok);
                this.columnBarangID = new global::System.Data.DataColumn("BarangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarangID);
                this.columnKlp = new global::System.Data.DataColumn("Klp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlp);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnHarga = new global::System.Data.DataColumn("Harga", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarga);
                this.columnDisc1 = new global::System.Data.DataColumn("Disc1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisc1);
                this.columnDisc2 = new global::System.Data.DataColumn("Disc2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisc2);
                this.columnDisc3 = new global::System.Data.DataColumn("Disc3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisc3);
                this.columnPot = new global::System.Data.DataColumn("Pot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPot);
                this.columnSat = new global::System.Data.DataColumn("Sat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSat);
                this.columnBeliluar = new global::System.Data.DataColumn("Beliluar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeliluar);
                this.columnLainlain = new global::System.Data.DataColumn("Lainlain", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLainlain);
                this.columnHargaNet = new global::System.Data.DataColumn("HargaNet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaNet);
                this.columnPemilik = new global::System.Data.DataColumn("Pemilik", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPemilik);
                this.columnPemilikID = new global::System.Data.DataColumn("PemilikID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPemilikID);
                this.columnSales = new global::System.Data.DataColumn("Sales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales);
                this.columnNoSuratJalan = new global::System.Data.DataColumn("NoSuratJalan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoSuratJalan);
                this.columnJumlahNet = new global::System.Data.DataColumn("JumlahNet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJumlahNet);
                this.columnno_telp = new global::System.Data.DataColumn("no_telp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnno_telp);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsCetakNotaBengkel ds = new dsCetakNotaBengkel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataRow : global::System.Data.DataRow {
            
            private DataDataTable tableData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tgl_srv {
                get {
                    try {
                        return ((string)(this[this.tableData.Tgl_srvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tgl_srv\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Tgl_srvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nomor {
                get {
                    try {
                        return ((string)(this[this.tableData.NomorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nomor\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NomorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string No_pol {
                get {
                    try {
                        return ((string)(this[this.tableData.No_polColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_pol\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.No_polColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spm {
                get {
                    try {
                        return ((string)(this[this.tableData.SpmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spm\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SpmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mekanik {
                get {
                    try {
                        return ((string)(this[this.tableData.MekanikColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mekanik\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.MekanikColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeMekanik {
                get {
                    try {
                        return ((string)(this[this.tableData.KodeMekanikColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeMekanik\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KodeMekanikColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Service {
                get {
                    try {
                        return ((string)(this[this.tableData.ServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Service\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.ServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Biaya {
                get {
                    try {
                        return ((string)(this[this.tableData.BiayaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Biaya\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BiayaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BiayaNetto {
                get {
                    try {
                        return ((string)(this[this.tableData.BiayaNettoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiayaNetto\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BiayaNettoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStok {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaStokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStok\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaStokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BarangID {
                get {
                    try {
                        return ((string)(this[this.tableData.BarangIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarangID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BarangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Klp {
                get {
                    try {
                        return ((string)(this[this.tableData.KlpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Klp\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KlpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableData.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Harga {
                get {
                    try {
                        return ((string)(this[this.tableData.HargaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Harga\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.HargaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disc1 {
                get {
                    try {
                        return ((string)(this[this.tableData.Disc1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disc1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Disc1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disc2 {
                get {
                    try {
                        return ((string)(this[this.tableData.Disc2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disc2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Disc2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disc3 {
                get {
                    try {
                        return ((string)(this[this.tableData.Disc3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disc3\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Disc3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pot {
                get {
                    try {
                        return ((string)(this[this.tableData.PotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pot\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.PotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sat {
                get {
                    try {
                        return ((string)(this[this.tableData.SatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sat\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Beliluar {
                get {
                    try {
                        return ((string)(this[this.tableData.BeliluarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Beliluar\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BeliluarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lainlain {
                get {
                    try {
                        return ((string)(this[this.tableData.LainlainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lainlain\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.LainlainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HargaNet {
                get {
                    try {
                        return ((string)(this[this.tableData.HargaNetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaNet\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.HargaNetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pemilik {
                get {
                    try {
                        return ((string)(this[this.tableData.PemilikColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pemilik\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.PemilikColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PemilikID {
                get {
                    try {
                        return ((string)(this[this.tableData.PemilikIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PemilikID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.PemilikIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales {
                get {
                    try {
                        return ((string)(this[this.tableData.SalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoSuratJalan {
                get {
                    try {
                        return ((string)(this[this.tableData.NoSuratJalanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoSuratJalan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoSuratJalanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JumlahNet {
                get {
                    try {
                        return ((string)(this[this.tableData.JumlahNetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JumlahNet\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JumlahNetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string no_telp {
                get {
                    try {
                        return ((string)(this[this.tableData.no_telpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'no_telp\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.no_telpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTgl_srvNull() {
                return this.IsNull(this.tableData.Tgl_srvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTgl_srvNull() {
                this[this.tableData.Tgl_srvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomorNull() {
                return this.IsNull(this.tableData.NomorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomorNull() {
                this[this.tableData.NomorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNo_polNull() {
                return this.IsNull(this.tableData.No_polColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNo_polNull() {
                this[this.tableData.No_polColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpmNull() {
                return this.IsNull(this.tableData.SpmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpmNull() {
                this[this.tableData.SpmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMekanikNull() {
                return this.IsNull(this.tableData.MekanikColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMekanikNull() {
                this[this.tableData.MekanikColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeMekanikNull() {
                return this.IsNull(this.tableData.KodeMekanikColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeMekanikNull() {
                this[this.tableData.KodeMekanikColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceNull() {
                return this.IsNull(this.tableData.ServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceNull() {
                this[this.tableData.ServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBiayaNull() {
                return this.IsNull(this.tableData.BiayaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBiayaNull() {
                this[this.tableData.BiayaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBiayaNettoNull() {
                return this.IsNull(this.tableData.BiayaNettoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBiayaNettoNull() {
                this[this.tableData.BiayaNettoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStokNull() {
                return this.IsNull(this.tableData.NamaStokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStokNull() {
                this[this.tableData.NamaStokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarangIDNull() {
                return this.IsNull(this.tableData.BarangIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarangIDNull() {
                this[this.tableData.BarangIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKlpNull() {
                return this.IsNull(this.tableData.KlpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKlpNull() {
                this[this.tableData.KlpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableData.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableData.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaNull() {
                return this.IsNull(this.tableData.HargaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaNull() {
                this[this.tableData.HargaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisc1Null() {
                return this.IsNull(this.tableData.Disc1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisc1Null() {
                this[this.tableData.Disc1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisc2Null() {
                return this.IsNull(this.tableData.Disc2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisc2Null() {
                this[this.tableData.Disc2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisc3Null() {
                return this.IsNull(this.tableData.Disc3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisc3Null() {
                this[this.tableData.Disc3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPotNull() {
                return this.IsNull(this.tableData.PotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPotNull() {
                this[this.tableData.PotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatNull() {
                return this.IsNull(this.tableData.SatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatNull() {
                this[this.tableData.SatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeliluarNull() {
                return this.IsNull(this.tableData.BeliluarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeliluarNull() {
                this[this.tableData.BeliluarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainlainNull() {
                return this.IsNull(this.tableData.LainlainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainlainNull() {
                this[this.tableData.LainlainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaNetNull() {
                return this.IsNull(this.tableData.HargaNetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaNetNull() {
                this[this.tableData.HargaNetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPemilikNull() {
                return this.IsNull(this.tableData.PemilikColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPemilikNull() {
                this[this.tableData.PemilikColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPemilikIDNull() {
                return this.IsNull(this.tableData.PemilikIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPemilikIDNull() {
                this[this.tableData.PemilikIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNull() {
                return this.IsNull(this.tableData.SalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNull() {
                this[this.tableData.SalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoSuratJalanNull() {
                return this.IsNull(this.tableData.NoSuratJalanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoSuratJalanNull() {
                this[this.tableData.NoSuratJalanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJumlahNetNull() {
                return this.IsNull(this.tableData.JumlahNetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJumlahNetNull() {
                this[this.tableData.JumlahNetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isno_telpNull() {
                return this.IsNull(this.tableData.no_telpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setno_telpNull() {
                this[this.tableData.no_telpColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            
            private DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591