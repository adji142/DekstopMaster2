//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8669
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Finance.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsPenerimaanBlmIden")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsPenerimaanBlmIden : global::System.Data.DataSet {
        
        private DataDataTable tableData;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsPenerimaanBlmIden() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsPenerimaanBlmIden(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsPenerimaanBlmIden cln = ((dsPenerimaanBlmIden)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsPenerimaanBlmIden";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsPenerimaanBlmIden.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsPenerimaanBlmIden ds = new dsPenerimaanBlmIden();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.TypedTableBase<DataRow> {
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnTglKasir;
            
            private global::System.Data.DataColumn columnNamaCollector;
            
            private global::System.Data.DataColumn columnRpGiro;
            
            private global::System.Data.DataColumn columnNomor;
            
            private global::System.Data.DataColumn columnTglInden;
            
            private global::System.Data.DataColumn columnNoReg;
            
            private global::System.Data.DataColumn columnRpInden;
            
            private global::System.Data.DataColumn columnRef;
            
            private global::System.Data.DataColumn columnNamaToko;
            
            private global::System.Data.DataColumn columnTglTitip;
            
            private global::System.Data.DataColumn columnNamaBank;
            
            private global::System.Data.DataColumn columnLama;
            
            private global::System.Data.DataColumn columnNoTransaksi;
            
            private global::System.Data.DataColumn columnTglTransaksi;
            
            private global::System.Data.DataColumn columnKet;
            
            private global::System.Data.DataColumn columnNoAcc;
            
            private global::System.Data.DataColumn columnWilID;
            
            private global::System.Data.DataColumn columnRpNominal;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnBukti;
            
            private global::System.Data.DataColumn columnKAS;
            
            private global::System.Data.DataColumn columnTRN;
            
            private global::System.Data.DataColumn columnBGC;
            
            private global::System.Data.DataColumn columnCRD;
            
            private global::System.Data.DataColumn columnDBT;
            
            private global::System.Data.DataColumn columnKodeSales;
            
            private global::System.Data.DataColumn columnTglJt;
            
            private global::System.Data.DataColumn columnTglCair;
            
            private global::System.Data.DataColumn columnLokasi;
            
            private global::System.Data.DataColumn columnTglGiro;
            
            private global::System.Data.DataColumn columnttlNominal;
            
            private global::System.Data.DataColumn columnRecordID;
            
            private global::System.Data.DataColumn columnRpCash;
            
            private global::System.Data.DataColumn columnRpCrd;
            
            private global::System.Data.DataColumn columnRpDbt;
            
            private global::System.Data.DataColumn columnRpTrf;
            
            private global::System.Data.DataColumn columnTglTrf;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglKasirColumn {
                get {
                    return this.columnTglKasir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaCollectorColumn {
                get {
                    return this.columnNamaCollector;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpGiroColumn {
                get {
                    return this.columnRpGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomorColumn {
                get {
                    return this.columnNomor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglIndenColumn {
                get {
                    return this.columnTglInden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoRegColumn {
                get {
                    return this.columnNoReg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpIndenColumn {
                get {
                    return this.columnRpInden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefColumn {
                get {
                    return this.columnRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaTokoColumn {
                get {
                    return this.columnNamaToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglTitipColumn {
                get {
                    return this.columnTglTitip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBankColumn {
                get {
                    return this.columnNamaBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LamaColumn {
                get {
                    return this.columnLama;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoTransaksiColumn {
                get {
                    return this.columnNoTransaksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglTransaksiColumn {
                get {
                    return this.columnTglTransaksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KetColumn {
                get {
                    return this.columnKet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoAccColumn {
                get {
                    return this.columnNoAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WilIDColumn {
                get {
                    return this.columnWilID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpNominalColumn {
                get {
                    return this.columnRpNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuktiColumn {
                get {
                    return this.columnBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KASColumn {
                get {
                    return this.columnKAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRNColumn {
                get {
                    return this.columnTRN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BGCColumn {
                get {
                    return this.columnBGC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRDColumn {
                get {
                    return this.columnCRD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DBTColumn {
                get {
                    return this.columnDBT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSalesColumn {
                get {
                    return this.columnKodeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglJtColumn {
                get {
                    return this.columnTglJt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglCairColumn {
                get {
                    return this.columnTglCair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LokasiColumn {
                get {
                    return this.columnLokasi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglGiroColumn {
                get {
                    return this.columnTglGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ttlNominalColumn {
                get {
                    return this.columnttlNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordIDColumn {
                get {
                    return this.columnRecordID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpCashColumn {
                get {
                    return this.columnRpCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpCrdColumn {
                get {
                    return this.columnRpCrd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpDbtColumn {
                get {
                    return this.columnRpDbt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpTrfColumn {
                get {
                    return this.columnRpTrf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglTrfColumn {
                get {
                    return this.columnTglTrf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            
            public event DataRowChangeEventHandler DataRowChanging;
            
            public event DataRowChangeEventHandler DataRowChanged;
            
            public event DataRowChangeEventHandler DataRowDeleting;
            
            public event DataRowChangeEventHandler DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow AddDataRow(
                        string NoBukti, 
                        string TglKasir, 
                        string NamaCollector, 
                        string RpGiro, 
                        string Nomor, 
                        string TglInden, 
                        string NoReg, 
                        string RpInden, 
                        string Ref, 
                        string NamaToko, 
                        string TglTitip, 
                        string NamaBank, 
                        string Lama, 
                        string NoTransaksi, 
                        string TglTransaksi, 
                        string Ket, 
                        string NoAcc, 
                        string WilID, 
                        string RpNominal, 
                        string flag, 
                        string Bukti, 
                        string KAS, 
                        string TRN, 
                        string BGC, 
                        string CRD, 
                        string DBT, 
                        string KodeSales, 
                        string TglJt, 
                        string TglCair, 
                        string Lokasi, 
                        string TglGiro, 
                        string ttlNominal, 
                        string RecordID, 
                        string RpCash, 
                        string RpCrd, 
                        string RpDbt, 
                        string RpTrf, 
                        string TglTrf) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NoBukti,
                        TglKasir,
                        NamaCollector,
                        RpGiro,
                        Nomor,
                        TglInden,
                        NoReg,
                        RpInden,
                        Ref,
                        NamaToko,
                        TglTitip,
                        NamaBank,
                        Lama,
                        NoTransaksi,
                        TglTransaksi,
                        Ket,
                        NoAcc,
                        WilID,
                        RpNominal,
                        flag,
                        Bukti,
                        KAS,
                        TRN,
                        BGC,
                        CRD,
                        DBT,
                        KodeSales,
                        TglJt,
                        TglCair,
                        Lokasi,
                        TglGiro,
                        ttlNominal,
                        RecordID,
                        RpCash,
                        RpCrd,
                        RpDbt,
                        RpTrf,
                        TglTrf};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnTglKasir = base.Columns["TglKasir"];
                this.columnNamaCollector = base.Columns["NamaCollector"];
                this.columnRpGiro = base.Columns["RpGiro"];
                this.columnNomor = base.Columns["Nomor"];
                this.columnTglInden = base.Columns["TglInden"];
                this.columnNoReg = base.Columns["NoReg"];
                this.columnRpInden = base.Columns["RpInden"];
                this.columnRef = base.Columns["Ref"];
                this.columnNamaToko = base.Columns["NamaToko"];
                this.columnTglTitip = base.Columns["TglTitip"];
                this.columnNamaBank = base.Columns["NamaBank"];
                this.columnLama = base.Columns["Lama"];
                this.columnNoTransaksi = base.Columns["NoTransaksi"];
                this.columnTglTransaksi = base.Columns["TglTransaksi"];
                this.columnKet = base.Columns["Ket"];
                this.columnNoAcc = base.Columns["NoAcc"];
                this.columnWilID = base.Columns["WilID"];
                this.columnRpNominal = base.Columns["RpNominal"];
                this.columnflag = base.Columns["flag"];
                this.columnBukti = base.Columns["Bukti"];
                this.columnKAS = base.Columns["KAS"];
                this.columnTRN = base.Columns["TRN"];
                this.columnBGC = base.Columns["BGC"];
                this.columnCRD = base.Columns["CRD"];
                this.columnDBT = base.Columns["DBT"];
                this.columnKodeSales = base.Columns["KodeSales"];
                this.columnTglJt = base.Columns["TglJt"];
                this.columnTglCair = base.Columns["TglCair"];
                this.columnLokasi = base.Columns["Lokasi"];
                this.columnTglGiro = base.Columns["TglGiro"];
                this.columnttlNominal = base.Columns["ttlNominal"];
                this.columnRecordID = base.Columns["RecordID"];
                this.columnRpCash = base.Columns["RpCash"];
                this.columnRpCrd = base.Columns["RpCrd"];
                this.columnRpDbt = base.Columns["RpDbt"];
                this.columnRpTrf = base.Columns["RpTrf"];
                this.columnTglTrf = base.Columns["TglTrf"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnTglKasir = new global::System.Data.DataColumn("TglKasir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglKasir);
                this.columnNamaCollector = new global::System.Data.DataColumn("NamaCollector", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaCollector);
                this.columnRpGiro = new global::System.Data.DataColumn("RpGiro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpGiro);
                this.columnNomor = new global::System.Data.DataColumn("Nomor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomor);
                this.columnTglInden = new global::System.Data.DataColumn("TglInden", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglInden);
                this.columnNoReg = new global::System.Data.DataColumn("NoReg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoReg);
                this.columnRpInden = new global::System.Data.DataColumn("RpInden", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpInden);
                this.columnRef = new global::System.Data.DataColumn("Ref", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef);
                this.columnNamaToko = new global::System.Data.DataColumn("NamaToko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaToko);
                this.columnTglTitip = new global::System.Data.DataColumn("TglTitip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglTitip);
                this.columnNamaBank = new global::System.Data.DataColumn("NamaBank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBank);
                this.columnLama = new global::System.Data.DataColumn("Lama", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLama);
                this.columnNoTransaksi = new global::System.Data.DataColumn("NoTransaksi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoTransaksi);
                this.columnTglTransaksi = new global::System.Data.DataColumn("TglTransaksi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglTransaksi);
                this.columnKet = new global::System.Data.DataColumn("Ket", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKet);
                this.columnNoAcc = new global::System.Data.DataColumn("NoAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoAcc);
                this.columnWilID = new global::System.Data.DataColumn("WilID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWilID);
                this.columnRpNominal = new global::System.Data.DataColumn("RpNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpNominal);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnBukti = new global::System.Data.DataColumn("Bukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBukti);
                this.columnKAS = new global::System.Data.DataColumn("KAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKAS);
                this.columnTRN = new global::System.Data.DataColumn("TRN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRN);
                this.columnBGC = new global::System.Data.DataColumn("BGC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBGC);
                this.columnCRD = new global::System.Data.DataColumn("CRD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRD);
                this.columnDBT = new global::System.Data.DataColumn("DBT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBT);
                this.columnKodeSales = new global::System.Data.DataColumn("KodeSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSales);
                this.columnTglJt = new global::System.Data.DataColumn("TglJt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglJt);
                this.columnTglCair = new global::System.Data.DataColumn("TglCair", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglCair);
                this.columnLokasi = new global::System.Data.DataColumn("Lokasi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLokasi);
                this.columnTglGiro = new global::System.Data.DataColumn("TglGiro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglGiro);
                this.columnttlNominal = new global::System.Data.DataColumn("ttlNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnttlNominal);
                this.columnRecordID = new global::System.Data.DataColumn("RecordID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordID);
                this.columnRpCash = new global::System.Data.DataColumn("RpCash", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpCash);
                this.columnRpCrd = new global::System.Data.DataColumn("RpCrd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpCrd);
                this.columnRpDbt = new global::System.Data.DataColumn("RpDbt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpDbt);
                this.columnRpTrf = new global::System.Data.DataColumn("RpTrf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpTrf);
                this.columnTglTrf = new global::System.Data.DataColumn("TglTrf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglTrf);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPenerimaanBlmIden ds = new dsPenerimaanBlmIden();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataRow : global::System.Data.DataRow {
            
            private DataDataTable tableData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableData.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglKasir {
                get {
                    try {
                        return ((string)(this[this.tableData.TglKasirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglKasir\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglKasirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaCollector {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaCollectorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaCollector\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaCollectorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpGiro {
                get {
                    try {
                        return ((string)(this[this.tableData.RpGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpGiro\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RpGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nomor {
                get {
                    try {
                        return ((string)(this[this.tableData.NomorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nomor\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NomorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglInden {
                get {
                    try {
                        return ((string)(this[this.tableData.TglIndenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglInden\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglIndenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoReg {
                get {
                    try {
                        return ((string)(this[this.tableData.NoRegColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoReg\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoRegColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpInden {
                get {
                    try {
                        return ((string)(this[this.tableData.RpIndenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpInden\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RpIndenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ref {
                get {
                    try {
                        return ((string)(this[this.tableData.RefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaToko {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaTokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaToko\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglTitip {
                get {
                    try {
                        return ((string)(this[this.tableData.TglTitipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglTitip\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglTitipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBank {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaBankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBank\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaBankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lama {
                get {
                    try {
                        return ((string)(this[this.tableData.LamaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lama\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.LamaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoTransaksi {
                get {
                    try {
                        return ((string)(this[this.tableData.NoTransaksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoTransaksi\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoTransaksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglTransaksi {
                get {
                    try {
                        return ((string)(this[this.tableData.TglTransaksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglTransaksi\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglTransaksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ket {
                get {
                    try {
                        return ((string)(this[this.tableData.KetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ket\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoAcc {
                get {
                    try {
                        return ((string)(this[this.tableData.NoAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoAcc\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WilID {
                get {
                    try {
                        return ((string)(this[this.tableData.WilIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WilID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.WilIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpNominal {
                get {
                    try {
                        return ((string)(this[this.tableData.RpNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpNominal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RpNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flag {
                get {
                    try {
                        return ((string)(this[this.tableData.flagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flag\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bukti {
                get {
                    try {
                        return ((string)(this[this.tableData.BuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bukti\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KAS {
                get {
                    try {
                        return ((string)(this[this.tableData.KASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KAS\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRN {
                get {
                    try {
                        return ((string)(this[this.tableData.TRNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRN\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TRNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BGC {
                get {
                    try {
                        return ((string)(this[this.tableData.BGCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BGC\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BGCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CRD {
                get {
                    try {
                        return ((string)(this[this.tableData.CRDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CRD\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.CRDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DBT {
                get {
                    try {
                        return ((string)(this[this.tableData.DBTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DBT\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DBTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSales {
                get {
                    try {
                        return ((string)(this[this.tableData.KodeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSales\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KodeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglJt {
                get {
                    try {
                        return ((string)(this[this.tableData.TglJtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglJt\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglJtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglCair {
                get {
                    try {
                        return ((string)(this[this.tableData.TglCairColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglCair\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglCairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lokasi {
                get {
                    try {
                        return ((string)(this[this.tableData.LokasiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lokasi\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.LokasiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglGiro {
                get {
                    try {
                        return ((string)(this[this.tableData.TglGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglGiro\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ttlNominal {
                get {
                    try {
                        return ((string)(this[this.tableData.ttlNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ttlNominal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.ttlNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordID {
                get {
                    try {
                        return ((string)(this[this.tableData.RecordIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RecordIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpCash {
                get {
                    try {
                        return ((string)(this[this.tableData.RpCashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpCash\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RpCashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpCrd {
                get {
                    try {
                        return ((string)(this[this.tableData.RpCrdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpCrd\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RpCrdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpDbt {
                get {
                    try {
                        return ((string)(this[this.tableData.RpDbtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpDbt\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RpDbtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpTrf {
                get {
                    try {
                        return ((string)(this[this.tableData.RpTrfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpTrf\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RpTrfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglTrf {
                get {
                    try {
                        return ((string)(this[this.tableData.TglTrfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglTrf\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglTrfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableData.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableData.NoBuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglKasirNull() {
                return this.IsNull(this.tableData.TglKasirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglKasirNull() {
                this[this.tableData.TglKasirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaCollectorNull() {
                return this.IsNull(this.tableData.NamaCollectorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaCollectorNull() {
                this[this.tableData.NamaCollectorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpGiroNull() {
                return this.IsNull(this.tableData.RpGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpGiroNull() {
                this[this.tableData.RpGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomorNull() {
                return this.IsNull(this.tableData.NomorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomorNull() {
                this[this.tableData.NomorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglIndenNull() {
                return this.IsNull(this.tableData.TglIndenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglIndenNull() {
                this[this.tableData.TglIndenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoRegNull() {
                return this.IsNull(this.tableData.NoRegColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoRegNull() {
                this[this.tableData.NoRegColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpIndenNull() {
                return this.IsNull(this.tableData.RpIndenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpIndenNull() {
                this[this.tableData.RpIndenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefNull() {
                return this.IsNull(this.tableData.RefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefNull() {
                this[this.tableData.RefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaTokoNull() {
                return this.IsNull(this.tableData.NamaTokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaTokoNull() {
                this[this.tableData.NamaTokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglTitipNull() {
                return this.IsNull(this.tableData.TglTitipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglTitipNull() {
                this[this.tableData.TglTitipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBankNull() {
                return this.IsNull(this.tableData.NamaBankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBankNull() {
                this[this.tableData.NamaBankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLamaNull() {
                return this.IsNull(this.tableData.LamaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLamaNull() {
                this[this.tableData.LamaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoTransaksiNull() {
                return this.IsNull(this.tableData.NoTransaksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoTransaksiNull() {
                this[this.tableData.NoTransaksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglTransaksiNull() {
                return this.IsNull(this.tableData.TglTransaksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglTransaksiNull() {
                this[this.tableData.TglTransaksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKetNull() {
                return this.IsNull(this.tableData.KetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKetNull() {
                this[this.tableData.KetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoAccNull() {
                return this.IsNull(this.tableData.NoAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoAccNull() {
                this[this.tableData.NoAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWilIDNull() {
                return this.IsNull(this.tableData.WilIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWilIDNull() {
                this[this.tableData.WilIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpNominalNull() {
                return this.IsNull(this.tableData.RpNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpNominalNull() {
                this[this.tableData.RpNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableData.flagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableData.flagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuktiNull() {
                return this.IsNull(this.tableData.BuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuktiNull() {
                this[this.tableData.BuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKASNull() {
                return this.IsNull(this.tableData.KASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKASNull() {
                this[this.tableData.KASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRNNull() {
                return this.IsNull(this.tableData.TRNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRNNull() {
                this[this.tableData.TRNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBGCNull() {
                return this.IsNull(this.tableData.BGCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBGCNull() {
                this[this.tableData.BGCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCRDNull() {
                return this.IsNull(this.tableData.CRDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCRDNull() {
                this[this.tableData.CRDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDBTNull() {
                return this.IsNull(this.tableData.DBTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDBTNull() {
                this[this.tableData.DBTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSalesNull() {
                return this.IsNull(this.tableData.KodeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSalesNull() {
                this[this.tableData.KodeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglJtNull() {
                return this.IsNull(this.tableData.TglJtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglJtNull() {
                this[this.tableData.TglJtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglCairNull() {
                return this.IsNull(this.tableData.TglCairColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglCairNull() {
                this[this.tableData.TglCairColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLokasiNull() {
                return this.IsNull(this.tableData.LokasiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLokasiNull() {
                this[this.tableData.LokasiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglGiroNull() {
                return this.IsNull(this.tableData.TglGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglGiroNull() {
                this[this.tableData.TglGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsttlNominalNull() {
                return this.IsNull(this.tableData.ttlNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetttlNominalNull() {
                this[this.tableData.ttlNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordIDNull() {
                return this.IsNull(this.tableData.RecordIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordIDNull() {
                this[this.tableData.RecordIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpCashNull() {
                return this.IsNull(this.tableData.RpCashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpCashNull() {
                this[this.tableData.RpCashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpCrdNull() {
                return this.IsNull(this.tableData.RpCrdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpCrdNull() {
                this[this.tableData.RpCrdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpDbtNull() {
                return this.IsNull(this.tableData.RpDbtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpDbtNull() {
                this[this.tableData.RpDbtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpTrfNull() {
                return this.IsNull(this.tableData.RpTrfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpTrfNull() {
                this[this.tableData.RpTrfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglTrfNull() {
                return this.IsNull(this.tableData.TglTrfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglTrfNull() {
                this[this.tableData.TglTrfColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            
            private DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591