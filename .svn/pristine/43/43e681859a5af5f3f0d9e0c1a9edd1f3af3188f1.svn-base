//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Toko.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsSales")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsSales : global::System.Data.DataSet {
        
        private DataDataTable tableData;
        
        private Data1DataTable tableData1;
        
        private Data2DataTable tableData2;
        
        private Data3DataTable tableData3;
        
        private Data4DataTable tableData4;
        
        private Data5DataTable tableData5;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsSales() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsSales(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                if ((ds.Tables["Data1"] != null)) {
                    base.Tables.Add(new Data1DataTable(ds.Tables["Data1"]));
                }
                if ((ds.Tables["Data2"] != null)) {
                    base.Tables.Add(new Data2DataTable(ds.Tables["Data2"]));
                }
                if ((ds.Tables["Data3"] != null)) {
                    base.Tables.Add(new Data3DataTable(ds.Tables["Data3"]));
                }
                if ((ds.Tables["Data4"] != null)) {
                    base.Tables.Add(new Data4DataTable(ds.Tables["Data4"]));
                }
                if ((ds.Tables["Data5"] != null)) {
                    base.Tables.Add(new Data5DataTable(ds.Tables["Data5"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data1DataTable Data1 {
            get {
                return this.tableData1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data2DataTable Data2 {
            get {
                return this.tableData2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data3DataTable Data3 {
            get {
                return this.tableData3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data4DataTable Data4 {
            get {
                return this.tableData4;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data5DataTable Data5 {
            get {
                return this.tableData5;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsSales cln = ((dsSales)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                if ((ds.Tables["Data1"] != null)) {
                    base.Tables.Add(new Data1DataTable(ds.Tables["Data1"]));
                }
                if ((ds.Tables["Data2"] != null)) {
                    base.Tables.Add(new Data2DataTable(ds.Tables["Data2"]));
                }
                if ((ds.Tables["Data3"] != null)) {
                    base.Tables.Add(new Data3DataTable(ds.Tables["Data3"]));
                }
                if ((ds.Tables["Data4"] != null)) {
                    base.Tables.Add(new Data4DataTable(ds.Tables["Data4"]));
                }
                if ((ds.Tables["Data5"] != null)) {
                    base.Tables.Add(new Data5DataTable(ds.Tables["Data5"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
            this.tableData1 = ((Data1DataTable)(base.Tables["Data1"]));
            if ((initTable == true)) {
                if ((this.tableData1 != null)) {
                    this.tableData1.InitVars();
                }
            }
            this.tableData2 = ((Data2DataTable)(base.Tables["Data2"]));
            if ((initTable == true)) {
                if ((this.tableData2 != null)) {
                    this.tableData2.InitVars();
                }
            }
            this.tableData3 = ((Data3DataTable)(base.Tables["Data3"]));
            if ((initTable == true)) {
                if ((this.tableData3 != null)) {
                    this.tableData3.InitVars();
                }
            }
            this.tableData4 = ((Data4DataTable)(base.Tables["Data4"]));
            if ((initTable == true)) {
                if ((this.tableData4 != null)) {
                    this.tableData4.InitVars();
                }
            }
            this.tableData5 = ((Data5DataTable)(base.Tables["Data5"]));
            if ((initTable == true)) {
                if ((this.tableData5 != null)) {
                    this.tableData5.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsSales";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsSales.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
            this.tableData1 = new Data1DataTable();
            base.Tables.Add(this.tableData1);
            this.tableData2 = new Data2DataTable();
            base.Tables.Add(this.tableData2);
            this.tableData3 = new Data3DataTable();
            base.Tables.Add(this.tableData3);
            this.tableData4 = new Data4DataTable();
            base.Tables.Add(this.tableData4);
            this.tableData5 = new Data5DataTable();
            base.Tables.Add(this.tableData5);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData4() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData5() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsSales ds = new dsSales();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        
        public delegate void Data1RowChangeEventHandler(object sender, Data1RowChangeEvent e);
        
        public delegate void Data2RowChangeEventHandler(object sender, Data2RowChangeEvent e);
        
        public delegate void Data3RowChangeEventHandler(object sender, Data3RowChangeEvent e);
        
        public delegate void Data4RowChangeEventHandler(object sender, Data4RowChangeEvent e);
        
        public delegate void Data5RowChangeEventHandler(object sender, Data5RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.TypedTableBase<DataRow> {
            
            private global::System.Data.DataColumn columnKodeSales;
            
            private global::System.Data.DataColumn columnNamaBarang;
            
            private global::System.Data.DataColumn columnDO_A;
            
            private global::System.Data.DataColumn columnDO_B;
            
            private global::System.Data.DataColumn columnOmzet_A;
            
            private global::System.Data.DataColumn columnOmzet_B;
            
            private global::System.Data.DataColumn columnDO_PmbNominal;
            
            private global::System.Data.DataColumn columnDO_PmbPercent;
            
            private global::System.Data.DataColumn columnOmzet_PmbNominal;
            
            private global::System.Data.DataColumn columnOmzet_PmbPercent;
            
            private global::System.Data.DataColumn columnSls_AnaNominal;
            
            private global::System.Data.DataColumn columnSls_AnaPercent;
            
            private global::System.Data.DataColumn columnSls_PmbNominal;
            
            private global::System.Data.DataColumn columnSls_PmbPercent;
            
            private global::System.Data.DataColumn columnCab;
            
            private global::System.Data.DataColumn columnDO;
            
            private global::System.Data.DataColumn columnNota;
            
            private global::System.Data.DataColumn columnSales;
            
            private global::System.Data.DataColumn columnToko;
            
            private global::System.Data.DataColumn columnIdWil;
            
            private global::System.Data.DataColumn columnExpedisi;
            
            private global::System.Data.DataColumn columnNamaStok;
            
            private global::System.Data.DataColumn columnJumlah;
            
            private global::System.Data.DataColumn columnHarga;
            
            private global::System.Data.DataColumn columnnBruto;
            
            private global::System.Data.DataColumn columnDiskon;
            
            private global::System.Data.DataColumn columnCabang2;
            
            private global::System.Data.DataColumn columnTglNota;
            
            private global::System.Data.DataColumn columnTglDO;
            
            private global::System.Data.DataColumn columnAlamat;
            
            private global::System.Data.DataColumn columnKota;
            
            private global::System.Data.DataColumn columnnTotal;
            
            private global::System.Data.DataColumn columnnPot;
            
            private global::System.Data.DataColumn columnNota_A;
            
            private global::System.Data.DataColumn columnNota_B;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSalesColumn {
                get {
                    return this.columnKodeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBarangColumn {
                get {
                    return this.columnNamaBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_AColumn {
                get {
                    return this.columnDO_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_BColumn {
                get {
                    return this.columnDO_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_AColumn {
                get {
                    return this.columnOmzet_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_BColumn {
                get {
                    return this.columnOmzet_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_PmbNominalColumn {
                get {
                    return this.columnDO_PmbNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_PmbPercentColumn {
                get {
                    return this.columnDO_PmbPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_PmbNominalColumn {
                get {
                    return this.columnOmzet_PmbNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_PmbPercentColumn {
                get {
                    return this.columnOmzet_PmbPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_AnaNominalColumn {
                get {
                    return this.columnSls_AnaNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_AnaPercentColumn {
                get {
                    return this.columnSls_AnaPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_PmbNominalColumn {
                get {
                    return this.columnSls_PmbNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_PmbPercentColumn {
                get {
                    return this.columnSls_PmbPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabColumn {
                get {
                    return this.columnCab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOColumn {
                get {
                    return this.columnDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotaColumn {
                get {
                    return this.columnNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesColumn {
                get {
                    return this.columnSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TokoColumn {
                get {
                    return this.columnToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdWilColumn {
                get {
                    return this.columnIdWil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpedisiColumn {
                get {
                    return this.columnExpedisi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStokColumn {
                get {
                    return this.columnNamaStok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JumlahColumn {
                get {
                    return this.columnJumlah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaColumn {
                get {
                    return this.columnHarga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nBrutoColumn {
                get {
                    return this.columnnBruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiskonColumn {
                get {
                    return this.columnDiskon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cabang2Column {
                get {
                    return this.columnCabang2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglNotaColumn {
                get {
                    return this.columnTglNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglDOColumn {
                get {
                    return this.columnTglDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlamatColumn {
                get {
                    return this.columnAlamat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaColumn {
                get {
                    return this.columnKota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTotalColumn {
                get {
                    return this.columnnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nPotColumn {
                get {
                    return this.columnnPot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nota_AColumn {
                get {
                    return this.columnNota_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nota_BColumn {
                get {
                    return this.columnNota_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            
            public event DataRowChangeEventHandler DataRowChanging;
            
            public event DataRowChangeEventHandler DataRowChanged;
            
            public event DataRowChangeEventHandler DataRowDeleting;
            
            public event DataRowChangeEventHandler DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow AddDataRow(
                        string KodeSales, 
                        string NamaBarang, 
                        int DO_A, 
                        int DO_B, 
                        string Omzet_A, 
                        string Omzet_B, 
                        string DO_PmbNominal, 
                        string DO_PmbPercent, 
                        string Omzet_PmbNominal, 
                        string Omzet_PmbPercent, 
                        string Sls_AnaNominal, 
                        string Sls_AnaPercent, 
                        string Sls_PmbNominal, 
                        string Sls_PmbPercent, 
                        string Cab, 
                        string DO, 
                        string Nota, 
                        string Sales, 
                        string Toko, 
                        string IdWil, 
                        string Expedisi, 
                        string NamaStok, 
                        string Jumlah, 
                        string Harga, 
                        string nBruto, 
                        string Diskon, 
                        string Cabang2, 
                        string TglNota, 
                        string TglDO, 
                        string Alamat, 
                        string Kota, 
                        string nTotal, 
                        string nPot, 
                        int Nota_A, 
                        int Nota_B) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeSales,
                        NamaBarang,
                        DO_A,
                        DO_B,
                        Omzet_A,
                        Omzet_B,
                        DO_PmbNominal,
                        DO_PmbPercent,
                        Omzet_PmbNominal,
                        Omzet_PmbPercent,
                        Sls_AnaNominal,
                        Sls_AnaPercent,
                        Sls_PmbNominal,
                        Sls_PmbPercent,
                        Cab,
                        DO,
                        Nota,
                        Sales,
                        Toko,
                        IdWil,
                        Expedisi,
                        NamaStok,
                        Jumlah,
                        Harga,
                        nBruto,
                        Diskon,
                        Cabang2,
                        TglNota,
                        TglDO,
                        Alamat,
                        Kota,
                        nTotal,
                        nPot,
                        Nota_A,
                        Nota_B};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeSales = base.Columns["KodeSales"];
                this.columnNamaBarang = base.Columns["NamaBarang"];
                this.columnDO_A = base.Columns["DO_A"];
                this.columnDO_B = base.Columns["DO_B"];
                this.columnOmzet_A = base.Columns["Omzet_A"];
                this.columnOmzet_B = base.Columns["Omzet_B"];
                this.columnDO_PmbNominal = base.Columns["DO_PmbNominal"];
                this.columnDO_PmbPercent = base.Columns["DO_PmbPercent"];
                this.columnOmzet_PmbNominal = base.Columns["Omzet_PmbNominal"];
                this.columnOmzet_PmbPercent = base.Columns["Omzet_PmbPercent"];
                this.columnSls_AnaNominal = base.Columns["Sls_AnaNominal"];
                this.columnSls_AnaPercent = base.Columns["Sls_AnaPercent"];
                this.columnSls_PmbNominal = base.Columns["Sls_PmbNominal"];
                this.columnSls_PmbPercent = base.Columns["Sls_PmbPercent"];
                this.columnCab = base.Columns["Cab"];
                this.columnDO = base.Columns["DO"];
                this.columnNota = base.Columns["Nota"];
                this.columnSales = base.Columns["Sales"];
                this.columnToko = base.Columns["Toko"];
                this.columnIdWil = base.Columns["IdWil"];
                this.columnExpedisi = base.Columns["Expedisi"];
                this.columnNamaStok = base.Columns["NamaStok"];
                this.columnJumlah = base.Columns["Jumlah"];
                this.columnHarga = base.Columns["Harga"];
                this.columnnBruto = base.Columns["nBruto"];
                this.columnDiskon = base.Columns["Diskon"];
                this.columnCabang2 = base.Columns["Cabang2"];
                this.columnTglNota = base.Columns["TglNota"];
                this.columnTglDO = base.Columns["TglDO"];
                this.columnAlamat = base.Columns["Alamat"];
                this.columnKota = base.Columns["Kota"];
                this.columnnTotal = base.Columns["nTotal"];
                this.columnnPot = base.Columns["nPot"];
                this.columnNota_A = base.Columns["Nota_A"];
                this.columnNota_B = base.Columns["Nota_B"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeSales = new global::System.Data.DataColumn("KodeSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSales);
                this.columnNamaBarang = new global::System.Data.DataColumn("NamaBarang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBarang);
                this.columnDO_A = new global::System.Data.DataColumn("DO_A", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_A);
                this.columnDO_B = new global::System.Data.DataColumn("DO_B", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_B);
                this.columnOmzet_A = new global::System.Data.DataColumn("Omzet_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_A);
                this.columnOmzet_B = new global::System.Data.DataColumn("Omzet_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_B);
                this.columnDO_PmbNominal = new global::System.Data.DataColumn("DO_PmbNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_PmbNominal);
                this.columnDO_PmbPercent = new global::System.Data.DataColumn("DO_PmbPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_PmbPercent);
                this.columnOmzet_PmbNominal = new global::System.Data.DataColumn("Omzet_PmbNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_PmbNominal);
                this.columnOmzet_PmbPercent = new global::System.Data.DataColumn("Omzet_PmbPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_PmbPercent);
                this.columnSls_AnaNominal = new global::System.Data.DataColumn("Sls_AnaNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_AnaNominal);
                this.columnSls_AnaPercent = new global::System.Data.DataColumn("Sls_AnaPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_AnaPercent);
                this.columnSls_PmbNominal = new global::System.Data.DataColumn("Sls_PmbNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_PmbNominal);
                this.columnSls_PmbPercent = new global::System.Data.DataColumn("Sls_PmbPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_PmbPercent);
                this.columnCab = new global::System.Data.DataColumn("Cab", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCab);
                this.columnDO = new global::System.Data.DataColumn("DO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO);
                this.columnNota = new global::System.Data.DataColumn("Nota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNota);
                this.columnSales = new global::System.Data.DataColumn("Sales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales);
                this.columnToko = new global::System.Data.DataColumn("Toko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToko);
                this.columnIdWil = new global::System.Data.DataColumn("IdWil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdWil);
                this.columnExpedisi = new global::System.Data.DataColumn("Expedisi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpedisi);
                this.columnNamaStok = new global::System.Data.DataColumn("NamaStok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStok);
                this.columnJumlah = new global::System.Data.DataColumn("Jumlah", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJumlah);
                this.columnHarga = new global::System.Data.DataColumn("Harga", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarga);
                this.columnnBruto = new global::System.Data.DataColumn("nBruto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnBruto);
                this.columnDiskon = new global::System.Data.DataColumn("Diskon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiskon);
                this.columnCabang2 = new global::System.Data.DataColumn("Cabang2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabang2);
                this.columnTglNota = new global::System.Data.DataColumn("TglNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglNota);
                this.columnTglDO = new global::System.Data.DataColumn("TglDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglDO);
                this.columnAlamat = new global::System.Data.DataColumn("Alamat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlamat);
                this.columnKota = new global::System.Data.DataColumn("Kota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKota);
                this.columnnTotal = new global::System.Data.DataColumn("nTotal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTotal);
                this.columnnPot = new global::System.Data.DataColumn("nPot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnPot);
                this.columnNota_A = new global::System.Data.DataColumn("Nota_A", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNota_A);
                this.columnNota_B = new global::System.Data.DataColumn("Nota_B", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNota_B);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Data1DataTable : global::System.Data.TypedTableBase<Data1Row> {
            
            private global::System.Data.DataColumn columnKodeSales;
            
            private global::System.Data.DataColumn columnNamaBarang;
            
            private global::System.Data.DataColumn columnDO_A;
            
            private global::System.Data.DataColumn columnDO_B;
            
            private global::System.Data.DataColumn columnOmzet_A;
            
            private global::System.Data.DataColumn columnOmzet_B;
            
            private global::System.Data.DataColumn columnDO_PmbNominal;
            
            private global::System.Data.DataColumn columnDO_PmbPercent;
            
            private global::System.Data.DataColumn columnOmzet_PmbNominal;
            
            private global::System.Data.DataColumn columnOmzet_PmbPercent;
            
            private global::System.Data.DataColumn columnSls_AnaNominal;
            
            private global::System.Data.DataColumn columnSls_AnaPercent;
            
            private global::System.Data.DataColumn columnSls_PmbNominal;
            
            private global::System.Data.DataColumn columnSls_PmbPercent;
            
            private global::System.Data.DataColumn columnCab;
            
            private global::System.Data.DataColumn columnDO;
            
            private global::System.Data.DataColumn columnNota;
            
            private global::System.Data.DataColumn columnSales;
            
            private global::System.Data.DataColumn columnToko;
            
            private global::System.Data.DataColumn columnIdWil;
            
            private global::System.Data.DataColumn columnExpedisi;
            
            private global::System.Data.DataColumn columnNamaStok;
            
            private global::System.Data.DataColumn columnJumlah;
            
            private global::System.Data.DataColumn columnHarga;
            
            private global::System.Data.DataColumn columnnBruto;
            
            private global::System.Data.DataColumn columnDiskon;
            
            private global::System.Data.DataColumn columnCabang2;
            
            private global::System.Data.DataColumn columnTglNota;
            
            private global::System.Data.DataColumn columnTglDO;
            
            private global::System.Data.DataColumn columnAlamat;
            
            private global::System.Data.DataColumn columnKota;
            
            private global::System.Data.DataColumn columnnTotal;
            
            private global::System.Data.DataColumn columnQtyTokoPeriode1;
            
            private global::System.Data.DataColumn columnQtyTokoPeriode2;
            
            private global::System.Data.DataColumn columnQtyTargetToko;
            
            private global::System.Data.DataColumn columnQtyBarangPeriode1;
            
            private global::System.Data.DataColumn columnQtyBarangPeriode2;
            
            private global::System.Data.DataColumn columnQtyTargetBarang;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1DataTable() {
                this.TableName = "Data1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Data1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSalesColumn {
                get {
                    return this.columnKodeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBarangColumn {
                get {
                    return this.columnNamaBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_AColumn {
                get {
                    return this.columnDO_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_BColumn {
                get {
                    return this.columnDO_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_AColumn {
                get {
                    return this.columnOmzet_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_BColumn {
                get {
                    return this.columnOmzet_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_PmbNominalColumn {
                get {
                    return this.columnDO_PmbNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_PmbPercentColumn {
                get {
                    return this.columnDO_PmbPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_PmbNominalColumn {
                get {
                    return this.columnOmzet_PmbNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_PmbPercentColumn {
                get {
                    return this.columnOmzet_PmbPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_AnaNominalColumn {
                get {
                    return this.columnSls_AnaNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_AnaPercentColumn {
                get {
                    return this.columnSls_AnaPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_PmbNominalColumn {
                get {
                    return this.columnSls_PmbNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_PmbPercentColumn {
                get {
                    return this.columnSls_PmbPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabColumn {
                get {
                    return this.columnCab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOColumn {
                get {
                    return this.columnDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotaColumn {
                get {
                    return this.columnNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesColumn {
                get {
                    return this.columnSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TokoColumn {
                get {
                    return this.columnToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdWilColumn {
                get {
                    return this.columnIdWil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpedisiColumn {
                get {
                    return this.columnExpedisi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStokColumn {
                get {
                    return this.columnNamaStok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JumlahColumn {
                get {
                    return this.columnJumlah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaColumn {
                get {
                    return this.columnHarga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nBrutoColumn {
                get {
                    return this.columnnBruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiskonColumn {
                get {
                    return this.columnDiskon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cabang2Column {
                get {
                    return this.columnCabang2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglNotaColumn {
                get {
                    return this.columnTglNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglDOColumn {
                get {
                    return this.columnTglDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlamatColumn {
                get {
                    return this.columnAlamat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaColumn {
                get {
                    return this.columnKota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTotalColumn {
                get {
                    return this.columnnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyTokoPeriode1Column {
                get {
                    return this.columnQtyTokoPeriode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyTokoPeriode2Column {
                get {
                    return this.columnQtyTokoPeriode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyTargetTokoColumn {
                get {
                    return this.columnQtyTargetToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyBarangPeriode1Column {
                get {
                    return this.columnQtyBarangPeriode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyBarangPeriode2Column {
                get {
                    return this.columnQtyBarangPeriode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyTargetBarangColumn {
                get {
                    return this.columnQtyTargetBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row this[int index] {
                get {
                    return ((Data1Row)(this.Rows[index]));
                }
            }
            
            public event Data1RowChangeEventHandler Data1RowChanging;
            
            public event Data1RowChangeEventHandler Data1RowChanged;
            
            public event Data1RowChangeEventHandler Data1RowDeleting;
            
            public event Data1RowChangeEventHandler Data1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddData1Row(Data1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row AddData1Row(
                        string KodeSales, 
                        string NamaBarang, 
                        string DO_A, 
                        string DO_B, 
                        string Omzet_A, 
                        string Omzet_B, 
                        string DO_PmbNominal, 
                        string DO_PmbPercent, 
                        string Omzet_PmbNominal, 
                        string Omzet_PmbPercent, 
                        string Sls_AnaNominal, 
                        string Sls_AnaPercent, 
                        string Sls_PmbNominal, 
                        string Sls_PmbPercent, 
                        string Cab, 
                        string DO, 
                        string Nota, 
                        string Sales, 
                        string Toko, 
                        string IdWil, 
                        string Expedisi, 
                        string NamaStok, 
                        string Jumlah, 
                        string Harga, 
                        string nBruto, 
                        string Diskon, 
                        string Cabang2, 
                        string TglNota, 
                        string TglDO, 
                        string Alamat, 
                        string Kota, 
                        string nTotal, 
                        int QtyTokoPeriode1, 
                        int QtyTokoPeriode2, 
                        int QtyTargetToko, 
                        int QtyBarangPeriode1, 
                        int QtyBarangPeriode2, 
                        int QtyTargetBarang) {
                Data1Row rowData1Row = ((Data1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeSales,
                        NamaBarang,
                        DO_A,
                        DO_B,
                        Omzet_A,
                        Omzet_B,
                        DO_PmbNominal,
                        DO_PmbPercent,
                        Omzet_PmbNominal,
                        Omzet_PmbPercent,
                        Sls_AnaNominal,
                        Sls_AnaPercent,
                        Sls_PmbNominal,
                        Sls_PmbPercent,
                        Cab,
                        DO,
                        Nota,
                        Sales,
                        Toko,
                        IdWil,
                        Expedisi,
                        NamaStok,
                        Jumlah,
                        Harga,
                        nBruto,
                        Diskon,
                        Cabang2,
                        TglNota,
                        TglDO,
                        Alamat,
                        Kota,
                        nTotal,
                        QtyTokoPeriode1,
                        QtyTokoPeriode2,
                        QtyTargetToko,
                        QtyBarangPeriode1,
                        QtyBarangPeriode2,
                        QtyTargetBarang};
                rowData1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowData1Row);
                return rowData1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Data1DataTable cln = ((Data1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Data1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeSales = base.Columns["KodeSales"];
                this.columnNamaBarang = base.Columns["NamaBarang"];
                this.columnDO_A = base.Columns["DO_A"];
                this.columnDO_B = base.Columns["DO_B"];
                this.columnOmzet_A = base.Columns["Omzet_A"];
                this.columnOmzet_B = base.Columns["Omzet_B"];
                this.columnDO_PmbNominal = base.Columns["DO_PmbNominal"];
                this.columnDO_PmbPercent = base.Columns["DO_PmbPercent"];
                this.columnOmzet_PmbNominal = base.Columns["Omzet_PmbNominal"];
                this.columnOmzet_PmbPercent = base.Columns["Omzet_PmbPercent"];
                this.columnSls_AnaNominal = base.Columns["Sls_AnaNominal"];
                this.columnSls_AnaPercent = base.Columns["Sls_AnaPercent"];
                this.columnSls_PmbNominal = base.Columns["Sls_PmbNominal"];
                this.columnSls_PmbPercent = base.Columns["Sls_PmbPercent"];
                this.columnCab = base.Columns["Cab"];
                this.columnDO = base.Columns["DO"];
                this.columnNota = base.Columns["Nota"];
                this.columnSales = base.Columns["Sales"];
                this.columnToko = base.Columns["Toko"];
                this.columnIdWil = base.Columns["IdWil"];
                this.columnExpedisi = base.Columns["Expedisi"];
                this.columnNamaStok = base.Columns["NamaStok"];
                this.columnJumlah = base.Columns["Jumlah"];
                this.columnHarga = base.Columns["Harga"];
                this.columnnBruto = base.Columns["nBruto"];
                this.columnDiskon = base.Columns["Diskon"];
                this.columnCabang2 = base.Columns["Cabang2"];
                this.columnTglNota = base.Columns["TglNota"];
                this.columnTglDO = base.Columns["TglDO"];
                this.columnAlamat = base.Columns["Alamat"];
                this.columnKota = base.Columns["Kota"];
                this.columnnTotal = base.Columns["nTotal"];
                this.columnQtyTokoPeriode1 = base.Columns["QtyTokoPeriode1"];
                this.columnQtyTokoPeriode2 = base.Columns["QtyTokoPeriode2"];
                this.columnQtyTargetToko = base.Columns["QtyTargetToko"];
                this.columnQtyBarangPeriode1 = base.Columns["QtyBarangPeriode1"];
                this.columnQtyBarangPeriode2 = base.Columns["QtyBarangPeriode2"];
                this.columnQtyTargetBarang = base.Columns["QtyTargetBarang"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeSales = new global::System.Data.DataColumn("KodeSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSales);
                this.columnNamaBarang = new global::System.Data.DataColumn("NamaBarang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBarang);
                this.columnDO_A = new global::System.Data.DataColumn("DO_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_A);
                this.columnDO_B = new global::System.Data.DataColumn("DO_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_B);
                this.columnOmzet_A = new global::System.Data.DataColumn("Omzet_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_A);
                this.columnOmzet_B = new global::System.Data.DataColumn("Omzet_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_B);
                this.columnDO_PmbNominal = new global::System.Data.DataColumn("DO_PmbNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_PmbNominal);
                this.columnDO_PmbPercent = new global::System.Data.DataColumn("DO_PmbPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_PmbPercent);
                this.columnOmzet_PmbNominal = new global::System.Data.DataColumn("Omzet_PmbNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_PmbNominal);
                this.columnOmzet_PmbPercent = new global::System.Data.DataColumn("Omzet_PmbPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_PmbPercent);
                this.columnSls_AnaNominal = new global::System.Data.DataColumn("Sls_AnaNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_AnaNominal);
                this.columnSls_AnaPercent = new global::System.Data.DataColumn("Sls_AnaPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_AnaPercent);
                this.columnSls_PmbNominal = new global::System.Data.DataColumn("Sls_PmbNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_PmbNominal);
                this.columnSls_PmbPercent = new global::System.Data.DataColumn("Sls_PmbPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_PmbPercent);
                this.columnCab = new global::System.Data.DataColumn("Cab", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCab);
                this.columnDO = new global::System.Data.DataColumn("DO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO);
                this.columnNota = new global::System.Data.DataColumn("Nota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNota);
                this.columnSales = new global::System.Data.DataColumn("Sales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales);
                this.columnToko = new global::System.Data.DataColumn("Toko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToko);
                this.columnIdWil = new global::System.Data.DataColumn("IdWil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdWil);
                this.columnExpedisi = new global::System.Data.DataColumn("Expedisi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpedisi);
                this.columnNamaStok = new global::System.Data.DataColumn("NamaStok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStok);
                this.columnJumlah = new global::System.Data.DataColumn("Jumlah", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJumlah);
                this.columnHarga = new global::System.Data.DataColumn("Harga", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarga);
                this.columnnBruto = new global::System.Data.DataColumn("nBruto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnBruto);
                this.columnDiskon = new global::System.Data.DataColumn("Diskon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiskon);
                this.columnCabang2 = new global::System.Data.DataColumn("Cabang2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabang2);
                this.columnTglNota = new global::System.Data.DataColumn("TglNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglNota);
                this.columnTglDO = new global::System.Data.DataColumn("TglDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglDO);
                this.columnAlamat = new global::System.Data.DataColumn("Alamat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlamat);
                this.columnKota = new global::System.Data.DataColumn("Kota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKota);
                this.columnnTotal = new global::System.Data.DataColumn("nTotal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTotal);
                this.columnQtyTokoPeriode1 = new global::System.Data.DataColumn("QtyTokoPeriode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyTokoPeriode1);
                this.columnQtyTokoPeriode2 = new global::System.Data.DataColumn("QtyTokoPeriode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyTokoPeriode2);
                this.columnQtyTargetToko = new global::System.Data.DataColumn("QtyTargetToko", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyTargetToko);
                this.columnQtyBarangPeriode1 = new global::System.Data.DataColumn("QtyBarangPeriode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyBarangPeriode1);
                this.columnQtyBarangPeriode2 = new global::System.Data.DataColumn("QtyBarangPeriode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyBarangPeriode2);
                this.columnQtyTargetBarang = new global::System.Data.DataColumn("QtyTargetBarang", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyTargetBarang);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row NewData1Row() {
                return ((Data1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Data1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Data1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data1RowChanged != null)) {
                    this.Data1RowChanged(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data1RowChanging != null)) {
                    this.Data1RowChanging(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data1RowDeleted != null)) {
                    this.Data1RowDeleted(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data1RowDeleting != null)) {
                    this.Data1RowDeleting(this, new Data1RowChangeEvent(((Data1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveData1Row(Data1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Data1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Data2DataTable : global::System.Data.TypedTableBase<Data2Row> {
            
            private global::System.Data.DataColumn columnKodeSales;
            
            private global::System.Data.DataColumn columnNamaBarang;
            
            private global::System.Data.DataColumn columnDO_A;
            
            private global::System.Data.DataColumn columnDO_B;
            
            private global::System.Data.DataColumn columnOmzet_A;
            
            private global::System.Data.DataColumn columnOmzet_B;
            
            private global::System.Data.DataColumn columnDO_PmbNominal;
            
            private global::System.Data.DataColumn columnDO_PmbPercent;
            
            private global::System.Data.DataColumn columnOmzet_PmbNominal;
            
            private global::System.Data.DataColumn columnOmzet_PmbPercent;
            
            private global::System.Data.DataColumn columnSls_AnaNominal;
            
            private global::System.Data.DataColumn columnSls_AnaPercent;
            
            private global::System.Data.DataColumn columnSls_PmbNominal;
            
            private global::System.Data.DataColumn columnSls_PmbPercent;
            
            private global::System.Data.DataColumn columnCab;
            
            private global::System.Data.DataColumn columnDO;
            
            private global::System.Data.DataColumn columnNota;
            
            private global::System.Data.DataColumn columnSales;
            
            private global::System.Data.DataColumn columnToko;
            
            private global::System.Data.DataColumn columnIdWil;
            
            private global::System.Data.DataColumn columnExpedisi;
            
            private global::System.Data.DataColumn columnNamaStok;
            
            private global::System.Data.DataColumn columnJumlah;
            
            private global::System.Data.DataColumn columnHarga;
            
            private global::System.Data.DataColumn columnnBruto;
            
            private global::System.Data.DataColumn columnDiskon;
            
            private global::System.Data.DataColumn columnCabang2;
            
            private global::System.Data.DataColumn columnTglNota;
            
            private global::System.Data.DataColumn columnTglDO;
            
            private global::System.Data.DataColumn columnAlamat;
            
            private global::System.Data.DataColumn columnKota;
            
            private global::System.Data.DataColumn columnnTotal;
            
            private global::System.Data.DataColumn columnBOPeriode1;
            
            private global::System.Data.DataColumn columnBOPeriode2;
            
            private global::System.Data.DataColumn columnReturPeriode1;
            
            private global::System.Data.DataColumn columnReturPeriode2;
            
            private global::System.Data.DataColumn columnKodeGudang;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2DataTable() {
                this.TableName = "Data2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Data2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSalesColumn {
                get {
                    return this.columnKodeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBarangColumn {
                get {
                    return this.columnNamaBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_AColumn {
                get {
                    return this.columnDO_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_BColumn {
                get {
                    return this.columnDO_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_AColumn {
                get {
                    return this.columnOmzet_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_BColumn {
                get {
                    return this.columnOmzet_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_PmbNominalColumn {
                get {
                    return this.columnDO_PmbNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_PmbPercentColumn {
                get {
                    return this.columnDO_PmbPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_PmbNominalColumn {
                get {
                    return this.columnOmzet_PmbNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Omzet_PmbPercentColumn {
                get {
                    return this.columnOmzet_PmbPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_AnaNominalColumn {
                get {
                    return this.columnSls_AnaNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_AnaPercentColumn {
                get {
                    return this.columnSls_AnaPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_PmbNominalColumn {
                get {
                    return this.columnSls_PmbNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sls_PmbPercentColumn {
                get {
                    return this.columnSls_PmbPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabColumn {
                get {
                    return this.columnCab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOColumn {
                get {
                    return this.columnDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotaColumn {
                get {
                    return this.columnNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesColumn {
                get {
                    return this.columnSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TokoColumn {
                get {
                    return this.columnToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdWilColumn {
                get {
                    return this.columnIdWil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpedisiColumn {
                get {
                    return this.columnExpedisi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStokColumn {
                get {
                    return this.columnNamaStok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JumlahColumn {
                get {
                    return this.columnJumlah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaColumn {
                get {
                    return this.columnHarga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nBrutoColumn {
                get {
                    return this.columnnBruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiskonColumn {
                get {
                    return this.columnDiskon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cabang2Column {
                get {
                    return this.columnCabang2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglNotaColumn {
                get {
                    return this.columnTglNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglDOColumn {
                get {
                    return this.columnTglDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlamatColumn {
                get {
                    return this.columnAlamat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaColumn {
                get {
                    return this.columnKota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTotalColumn {
                get {
                    return this.columnnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOPeriode1Column {
                get {
                    return this.columnBOPeriode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOPeriode2Column {
                get {
                    return this.columnBOPeriode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturPeriode1Column {
                get {
                    return this.columnReturPeriode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturPeriode2Column {
                get {
                    return this.columnReturPeriode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeGudangColumn {
                get {
                    return this.columnKodeGudang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row this[int index] {
                get {
                    return ((Data2Row)(this.Rows[index]));
                }
            }
            
            public event Data2RowChangeEventHandler Data2RowChanging;
            
            public event Data2RowChangeEventHandler Data2RowChanged;
            
            public event Data2RowChangeEventHandler Data2RowDeleting;
            
            public event Data2RowChangeEventHandler Data2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddData2Row(Data2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row AddData2Row(
                        string KodeSales, 
                        string NamaBarang, 
                        string DO_A, 
                        string DO_B, 
                        string Omzet_A, 
                        string Omzet_B, 
                        string DO_PmbNominal, 
                        string DO_PmbPercent, 
                        string Omzet_PmbNominal, 
                        string Omzet_PmbPercent, 
                        string Sls_AnaNominal, 
                        string Sls_AnaPercent, 
                        string Sls_PmbNominal, 
                        string Sls_PmbPercent, 
                        string Cab, 
                        string DO, 
                        string Nota, 
                        string Sales, 
                        string Toko, 
                        string IdWil, 
                        string Expedisi, 
                        string NamaStok, 
                        string Jumlah, 
                        string Harga, 
                        string nBruto, 
                        string Diskon, 
                        string Cabang2, 
                        string TglNota, 
                        string TglDO, 
                        string Alamat, 
                        string Kota, 
                        string nTotal, 
                        int BOPeriode1, 
                        int BOPeriode2, 
                        int ReturPeriode1, 
                        int ReturPeriode2, 
                        string KodeGudang) {
                Data2Row rowData2Row = ((Data2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeSales,
                        NamaBarang,
                        DO_A,
                        DO_B,
                        Omzet_A,
                        Omzet_B,
                        DO_PmbNominal,
                        DO_PmbPercent,
                        Omzet_PmbNominal,
                        Omzet_PmbPercent,
                        Sls_AnaNominal,
                        Sls_AnaPercent,
                        Sls_PmbNominal,
                        Sls_PmbPercent,
                        Cab,
                        DO,
                        Nota,
                        Sales,
                        Toko,
                        IdWil,
                        Expedisi,
                        NamaStok,
                        Jumlah,
                        Harga,
                        nBruto,
                        Diskon,
                        Cabang2,
                        TglNota,
                        TglDO,
                        Alamat,
                        Kota,
                        nTotal,
                        BOPeriode1,
                        BOPeriode2,
                        ReturPeriode1,
                        ReturPeriode2,
                        KodeGudang};
                rowData2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowData2Row);
                return rowData2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Data2DataTable cln = ((Data2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Data2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeSales = base.Columns["KodeSales"];
                this.columnNamaBarang = base.Columns["NamaBarang"];
                this.columnDO_A = base.Columns["DO_A"];
                this.columnDO_B = base.Columns["DO_B"];
                this.columnOmzet_A = base.Columns["Omzet_A"];
                this.columnOmzet_B = base.Columns["Omzet_B"];
                this.columnDO_PmbNominal = base.Columns["DO_PmbNominal"];
                this.columnDO_PmbPercent = base.Columns["DO_PmbPercent"];
                this.columnOmzet_PmbNominal = base.Columns["Omzet_PmbNominal"];
                this.columnOmzet_PmbPercent = base.Columns["Omzet_PmbPercent"];
                this.columnSls_AnaNominal = base.Columns["Sls_AnaNominal"];
                this.columnSls_AnaPercent = base.Columns["Sls_AnaPercent"];
                this.columnSls_PmbNominal = base.Columns["Sls_PmbNominal"];
                this.columnSls_PmbPercent = base.Columns["Sls_PmbPercent"];
                this.columnCab = base.Columns["Cab"];
                this.columnDO = base.Columns["DO"];
                this.columnNota = base.Columns["Nota"];
                this.columnSales = base.Columns["Sales"];
                this.columnToko = base.Columns["Toko"];
                this.columnIdWil = base.Columns["IdWil"];
                this.columnExpedisi = base.Columns["Expedisi"];
                this.columnNamaStok = base.Columns["NamaStok"];
                this.columnJumlah = base.Columns["Jumlah"];
                this.columnHarga = base.Columns["Harga"];
                this.columnnBruto = base.Columns["nBruto"];
                this.columnDiskon = base.Columns["Diskon"];
                this.columnCabang2 = base.Columns["Cabang2"];
                this.columnTglNota = base.Columns["TglNota"];
                this.columnTglDO = base.Columns["TglDO"];
                this.columnAlamat = base.Columns["Alamat"];
                this.columnKota = base.Columns["Kota"];
                this.columnnTotal = base.Columns["nTotal"];
                this.columnBOPeriode1 = base.Columns["BOPeriode1"];
                this.columnBOPeriode2 = base.Columns["BOPeriode2"];
                this.columnReturPeriode1 = base.Columns["ReturPeriode1"];
                this.columnReturPeriode2 = base.Columns["ReturPeriode2"];
                this.columnKodeGudang = base.Columns["KodeGudang"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeSales = new global::System.Data.DataColumn("KodeSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSales);
                this.columnNamaBarang = new global::System.Data.DataColumn("NamaBarang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBarang);
                this.columnDO_A = new global::System.Data.DataColumn("DO_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_A);
                this.columnDO_B = new global::System.Data.DataColumn("DO_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_B);
                this.columnOmzet_A = new global::System.Data.DataColumn("Omzet_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_A);
                this.columnOmzet_B = new global::System.Data.DataColumn("Omzet_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_B);
                this.columnDO_PmbNominal = new global::System.Data.DataColumn("DO_PmbNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_PmbNominal);
                this.columnDO_PmbPercent = new global::System.Data.DataColumn("DO_PmbPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_PmbPercent);
                this.columnOmzet_PmbNominal = new global::System.Data.DataColumn("Omzet_PmbNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_PmbNominal);
                this.columnOmzet_PmbPercent = new global::System.Data.DataColumn("Omzet_PmbPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOmzet_PmbPercent);
                this.columnSls_AnaNominal = new global::System.Data.DataColumn("Sls_AnaNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_AnaNominal);
                this.columnSls_AnaPercent = new global::System.Data.DataColumn("Sls_AnaPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_AnaPercent);
                this.columnSls_PmbNominal = new global::System.Data.DataColumn("Sls_PmbNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_PmbNominal);
                this.columnSls_PmbPercent = new global::System.Data.DataColumn("Sls_PmbPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSls_PmbPercent);
                this.columnCab = new global::System.Data.DataColumn("Cab", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCab);
                this.columnDO = new global::System.Data.DataColumn("DO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO);
                this.columnNota = new global::System.Data.DataColumn("Nota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNota);
                this.columnSales = new global::System.Data.DataColumn("Sales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales);
                this.columnToko = new global::System.Data.DataColumn("Toko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToko);
                this.columnIdWil = new global::System.Data.DataColumn("IdWil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdWil);
                this.columnExpedisi = new global::System.Data.DataColumn("Expedisi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpedisi);
                this.columnNamaStok = new global::System.Data.DataColumn("NamaStok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStok);
                this.columnJumlah = new global::System.Data.DataColumn("Jumlah", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJumlah);
                this.columnHarga = new global::System.Data.DataColumn("Harga", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarga);
                this.columnnBruto = new global::System.Data.DataColumn("nBruto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnBruto);
                this.columnDiskon = new global::System.Data.DataColumn("Diskon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiskon);
                this.columnCabang2 = new global::System.Data.DataColumn("Cabang2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabang2);
                this.columnTglNota = new global::System.Data.DataColumn("TglNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglNota);
                this.columnTglDO = new global::System.Data.DataColumn("TglDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglDO);
                this.columnAlamat = new global::System.Data.DataColumn("Alamat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlamat);
                this.columnKota = new global::System.Data.DataColumn("Kota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKota);
                this.columnnTotal = new global::System.Data.DataColumn("nTotal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTotal);
                this.columnBOPeriode1 = new global::System.Data.DataColumn("BOPeriode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOPeriode1);
                this.columnBOPeriode2 = new global::System.Data.DataColumn("BOPeriode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOPeriode2);
                this.columnReturPeriode1 = new global::System.Data.DataColumn("ReturPeriode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturPeriode1);
                this.columnReturPeriode2 = new global::System.Data.DataColumn("ReturPeriode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturPeriode2);
                this.columnKodeGudang = new global::System.Data.DataColumn("KodeGudang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeGudang);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row NewData2Row() {
                return ((Data2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Data2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Data2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data2RowChanged != null)) {
                    this.Data2RowChanged(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data2RowChanging != null)) {
                    this.Data2RowChanging(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data2RowDeleted != null)) {
                    this.Data2RowDeleted(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data2RowDeleting != null)) {
                    this.Data2RowDeleting(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveData2Row(Data2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Data2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Data3DataTable : global::System.Data.TypedTableBase<Data3Row> {
            
            private global::System.Data.DataColumn columnKodeSales;
            
            private global::System.Data.DataColumn columnNettoBPeriode1;
            
            private global::System.Data.DataColumn columnNettoEPeriode2;
            
            private global::System.Data.DataColumn columnNettoBPeriode2;
            
            private global::System.Data.DataColumn columnNettoEPeriode1;
            
            private global::System.Data.DataColumn columnC1;
            
            private global::System.Data.DataColumn columnC2;
            
            private global::System.Data.DataColumn columnNoNota;
            
            private global::System.Data.DataColumn columnTglNota;
            
            private global::System.Data.DataColumn columnNoKoreksi;
            
            private global::System.Data.DataColumn columnNamaBarang;
            
            private global::System.Data.DataColumn columnSumber;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnHarga;
            
            private global::System.Data.DataColumn columnTglKoreksi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data3DataTable() {
                this.TableName = "Data3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Data3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSalesColumn {
                get {
                    return this.columnKodeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoBPeriode1Column {
                get {
                    return this.columnNettoBPeriode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoEPeriode2Column {
                get {
                    return this.columnNettoEPeriode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoBPeriode2Column {
                get {
                    return this.columnNettoBPeriode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoEPeriode1Column {
                get {
                    return this.columnNettoEPeriode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C1Column {
                get {
                    return this.columnC1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C2Column {
                get {
                    return this.columnC2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoNotaColumn {
                get {
                    return this.columnNoNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglNotaColumn {
                get {
                    return this.columnTglNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoKoreksiColumn {
                get {
                    return this.columnNoKoreksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBarangColumn {
                get {
                    return this.columnNamaBarang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumberColumn {
                get {
                    return this.columnSumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaColumn {
                get {
                    return this.columnHarga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglKoreksiColumn {
                get {
                    return this.columnTglKoreksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data3Row this[int index] {
                get {
                    return ((Data3Row)(this.Rows[index]));
                }
            }
            
            public event Data3RowChangeEventHandler Data3RowChanging;
            
            public event Data3RowChangeEventHandler Data3RowChanged;
            
            public event Data3RowChangeEventHandler Data3RowDeleting;
            
            public event Data3RowChangeEventHandler Data3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddData3Row(Data3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data3Row AddData3Row(string KodeSales, int NettoBPeriode1, int NettoEPeriode2, int NettoBPeriode2, int NettoEPeriode1, string C1, string C2, string NoNota, string TglNota, string NoKoreksi, string NamaBarang, string Sumber, string Qty, string Harga, string TglKoreksi) {
                Data3Row rowData3Row = ((Data3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeSales,
                        NettoBPeriode1,
                        NettoEPeriode2,
                        NettoBPeriode2,
                        NettoEPeriode1,
                        C1,
                        C2,
                        NoNota,
                        TglNota,
                        NoKoreksi,
                        NamaBarang,
                        Sumber,
                        Qty,
                        Harga,
                        TglKoreksi};
                rowData3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowData3Row);
                return rowData3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Data3DataTable cln = ((Data3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Data3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeSales = base.Columns["KodeSales"];
                this.columnNettoBPeriode1 = base.Columns["NettoBPeriode1"];
                this.columnNettoEPeriode2 = base.Columns["NettoEPeriode2"];
                this.columnNettoBPeriode2 = base.Columns["NettoBPeriode2"];
                this.columnNettoEPeriode1 = base.Columns["NettoEPeriode1"];
                this.columnC1 = base.Columns["C1"];
                this.columnC2 = base.Columns["C2"];
                this.columnNoNota = base.Columns["NoNota"];
                this.columnTglNota = base.Columns["TglNota"];
                this.columnNoKoreksi = base.Columns["NoKoreksi"];
                this.columnNamaBarang = base.Columns["NamaBarang"];
                this.columnSumber = base.Columns["Sumber"];
                this.columnQty = base.Columns["Qty"];
                this.columnHarga = base.Columns["Harga"];
                this.columnTglKoreksi = base.Columns["TglKoreksi"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeSales = new global::System.Data.DataColumn("KodeSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSales);
                this.columnNettoBPeriode1 = new global::System.Data.DataColumn("NettoBPeriode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoBPeriode1);
                this.columnNettoEPeriode2 = new global::System.Data.DataColumn("NettoEPeriode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoEPeriode2);
                this.columnNettoBPeriode2 = new global::System.Data.DataColumn("NettoBPeriode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoBPeriode2);
                this.columnNettoEPeriode1 = new global::System.Data.DataColumn("NettoEPeriode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoEPeriode1);
                this.columnC1 = new global::System.Data.DataColumn("C1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1);
                this.columnC2 = new global::System.Data.DataColumn("C2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2);
                this.columnNoNota = new global::System.Data.DataColumn("NoNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoNota);
                this.columnTglNota = new global::System.Data.DataColumn("TglNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglNota);
                this.columnNoKoreksi = new global::System.Data.DataColumn("NoKoreksi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoKoreksi);
                this.columnNamaBarang = new global::System.Data.DataColumn("NamaBarang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBarang);
                this.columnSumber = new global::System.Data.DataColumn("Sumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumber);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnHarga = new global::System.Data.DataColumn("Harga", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarga);
                this.columnTglKoreksi = new global::System.Data.DataColumn("TglKoreksi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglKoreksi);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data3Row NewData3Row() {
                return ((Data3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Data3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Data3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data3RowChanged != null)) {
                    this.Data3RowChanged(this, new Data3RowChangeEvent(((Data3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data3RowChanging != null)) {
                    this.Data3RowChanging(this, new Data3RowChangeEvent(((Data3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data3RowDeleted != null)) {
                    this.Data3RowDeleted(this, new Data3RowChangeEvent(((Data3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data3RowDeleting != null)) {
                    this.Data3RowDeleting(this, new Data3RowChangeEvent(((Data3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveData3Row(Data3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Data3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Data4DataTable : global::System.Data.TypedTableBase<Data4Row> {
            
            private global::System.Data.DataColumn columnKodeSales;
            
            private global::System.Data.DataColumn columnNettoBPeriode1;
            
            private global::System.Data.DataColumn columnNettoEPeriode2;
            
            private global::System.Data.DataColumn columnNettoBPeriode2;
            
            private global::System.Data.DataColumn columnNettoEPeriode1;
            
            private global::System.Data.DataColumn columnTargetNotaB;
            
            private global::System.Data.DataColumn columnTargetNotaE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data4DataTable() {
                this.TableName = "Data4";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data4DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Data4DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSalesColumn {
                get {
                    return this.columnKodeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoBPeriode1Column {
                get {
                    return this.columnNettoBPeriode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoEPeriode2Column {
                get {
                    return this.columnNettoEPeriode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoBPeriode2Column {
                get {
                    return this.columnNettoBPeriode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoEPeriode1Column {
                get {
                    return this.columnNettoEPeriode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetNotaBColumn {
                get {
                    return this.columnTargetNotaB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetNotaEColumn {
                get {
                    return this.columnTargetNotaE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data4Row this[int index] {
                get {
                    return ((Data4Row)(this.Rows[index]));
                }
            }
            
            public event Data4RowChangeEventHandler Data4RowChanging;
            
            public event Data4RowChangeEventHandler Data4RowChanged;
            
            public event Data4RowChangeEventHandler Data4RowDeleting;
            
            public event Data4RowChangeEventHandler Data4RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddData4Row(Data4Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data4Row AddData4Row(string KodeSales, int NettoBPeriode1, int NettoEPeriode2, int NettoBPeriode2, int NettoEPeriode1, int TargetNotaB, int TargetNotaE) {
                Data4Row rowData4Row = ((Data4Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeSales,
                        NettoBPeriode1,
                        NettoEPeriode2,
                        NettoBPeriode2,
                        NettoEPeriode1,
                        TargetNotaB,
                        TargetNotaE};
                rowData4Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowData4Row);
                return rowData4Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Data4DataTable cln = ((Data4DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Data4DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeSales = base.Columns["KodeSales"];
                this.columnNettoBPeriode1 = base.Columns["NettoBPeriode1"];
                this.columnNettoEPeriode2 = base.Columns["NettoEPeriode2"];
                this.columnNettoBPeriode2 = base.Columns["NettoBPeriode2"];
                this.columnNettoEPeriode1 = base.Columns["NettoEPeriode1"];
                this.columnTargetNotaB = base.Columns["TargetNotaB"];
                this.columnTargetNotaE = base.Columns["TargetNotaE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeSales = new global::System.Data.DataColumn("KodeSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSales);
                this.columnNettoBPeriode1 = new global::System.Data.DataColumn("NettoBPeriode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoBPeriode1);
                this.columnNettoEPeriode2 = new global::System.Data.DataColumn("NettoEPeriode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoEPeriode2);
                this.columnNettoBPeriode2 = new global::System.Data.DataColumn("NettoBPeriode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoBPeriode2);
                this.columnNettoEPeriode1 = new global::System.Data.DataColumn("NettoEPeriode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoEPeriode1);
                this.columnTargetNotaB = new global::System.Data.DataColumn("TargetNotaB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetNotaB);
                this.columnTargetNotaE = new global::System.Data.DataColumn("TargetNotaE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetNotaE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data4Row NewData4Row() {
                return ((Data4Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Data4Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Data4Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data4RowChanged != null)) {
                    this.Data4RowChanged(this, new Data4RowChangeEvent(((Data4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data4RowChanging != null)) {
                    this.Data4RowChanging(this, new Data4RowChangeEvent(((Data4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data4RowDeleted != null)) {
                    this.Data4RowDeleted(this, new Data4RowChangeEvent(((Data4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data4RowDeleting != null)) {
                    this.Data4RowDeleting(this, new Data4RowChangeEvent(((Data4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveData4Row(Data4Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Data4DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Data5DataTable : global::System.Data.TypedTableBase<Data5Row> {
            
            private global::System.Data.DataColumn columnKodeSales;
            
            private global::System.Data.DataColumn columnLaba1;
            
            private global::System.Data.DataColumn columnLaba2;
            
            private global::System.Data.DataColumn columnBiaya;
            
            private global::System.Data.DataColumn columnOverdue;
            
            private global::System.Data.DataColumn columnNettoBPeriode1;
            
            private global::System.Data.DataColumn columnNettoEPeriode2;
            
            private global::System.Data.DataColumn columnNettoBPeriode2;
            
            private global::System.Data.DataColumn columnNettoEPeriode1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data5DataTable() {
                this.TableName = "Data5";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data5DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Data5DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSalesColumn {
                get {
                    return this.columnKodeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Laba1Column {
                get {
                    return this.columnLaba1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Laba2Column {
                get {
                    return this.columnLaba2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BiayaColumn {
                get {
                    return this.columnBiaya;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverdueColumn {
                get {
                    return this.columnOverdue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoBPeriode1Column {
                get {
                    return this.columnNettoBPeriode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoEPeriode2Column {
                get {
                    return this.columnNettoEPeriode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoBPeriode2Column {
                get {
                    return this.columnNettoBPeriode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoEPeriode1Column {
                get {
                    return this.columnNettoEPeriode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data5Row this[int index] {
                get {
                    return ((Data5Row)(this.Rows[index]));
                }
            }
            
            public event Data5RowChangeEventHandler Data5RowChanging;
            
            public event Data5RowChangeEventHandler Data5RowChanged;
            
            public event Data5RowChangeEventHandler Data5RowDeleting;
            
            public event Data5RowChangeEventHandler Data5RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddData5Row(Data5Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data5Row AddData5Row(string KodeSales, int Laba1, int Laba2, int Biaya, int Overdue, int NettoBPeriode1, int NettoEPeriode2, int NettoBPeriode2, int NettoEPeriode1) {
                Data5Row rowData5Row = ((Data5Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeSales,
                        Laba1,
                        Laba2,
                        Biaya,
                        Overdue,
                        NettoBPeriode1,
                        NettoEPeriode2,
                        NettoBPeriode2,
                        NettoEPeriode1};
                rowData5Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowData5Row);
                return rowData5Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Data5DataTable cln = ((Data5DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Data5DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeSales = base.Columns["KodeSales"];
                this.columnLaba1 = base.Columns["Laba1"];
                this.columnLaba2 = base.Columns["Laba2"];
                this.columnBiaya = base.Columns["Biaya"];
                this.columnOverdue = base.Columns["Overdue"];
                this.columnNettoBPeriode1 = base.Columns["NettoBPeriode1"];
                this.columnNettoEPeriode2 = base.Columns["NettoEPeriode2"];
                this.columnNettoBPeriode2 = base.Columns["NettoBPeriode2"];
                this.columnNettoEPeriode1 = base.Columns["NettoEPeriode1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeSales = new global::System.Data.DataColumn("KodeSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSales);
                this.columnLaba1 = new global::System.Data.DataColumn("Laba1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaba1);
                this.columnLaba2 = new global::System.Data.DataColumn("Laba2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaba2);
                this.columnBiaya = new global::System.Data.DataColumn("Biaya", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiaya);
                this.columnOverdue = new global::System.Data.DataColumn("Overdue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverdue);
                this.columnNettoBPeriode1 = new global::System.Data.DataColumn("NettoBPeriode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoBPeriode1);
                this.columnNettoEPeriode2 = new global::System.Data.DataColumn("NettoEPeriode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoEPeriode2);
                this.columnNettoBPeriode2 = new global::System.Data.DataColumn("NettoBPeriode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoBPeriode2);
                this.columnNettoEPeriode1 = new global::System.Data.DataColumn("NettoEPeriode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettoEPeriode1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data5Row NewData5Row() {
                return ((Data5Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Data5Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Data5Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data5RowChanged != null)) {
                    this.Data5RowChanged(this, new Data5RowChangeEvent(((Data5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data5RowChanging != null)) {
                    this.Data5RowChanging(this, new Data5RowChangeEvent(((Data5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data5RowDeleted != null)) {
                    this.Data5RowDeleted(this, new Data5RowChangeEvent(((Data5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data5RowDeleting != null)) {
                    this.Data5RowDeleting(this, new Data5RowChangeEvent(((Data5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveData5Row(Data5Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSales ds = new dsSales();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Data5DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataRow : global::System.Data.DataRow {
            
            private DataDataTable tableData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSales {
                get {
                    try {
                        return ((string)(this[this.tableData.KodeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSales\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KodeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBarang {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBarang\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DO_A {
                get {
                    try {
                        return ((int)(this[this.tableData.DO_AColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_A\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DO_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DO_B {
                get {
                    try {
                        return ((int)(this[this.tableData.DO_BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_B\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DO_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_A {
                get {
                    try {
                        return ((string)(this[this.tableData.Omzet_AColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_A\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Omzet_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_B {
                get {
                    try {
                        return ((string)(this[this.tableData.Omzet_BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_B\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Omzet_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_PmbNominal {
                get {
                    try {
                        return ((string)(this[this.tableData.DO_PmbNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_PmbNominal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DO_PmbNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_PmbPercent {
                get {
                    try {
                        return ((string)(this[this.tableData.DO_PmbPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_PmbPercent\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DO_PmbPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_PmbNominal {
                get {
                    try {
                        return ((string)(this[this.tableData.Omzet_PmbNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_PmbNominal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Omzet_PmbNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_PmbPercent {
                get {
                    try {
                        return ((string)(this[this.tableData.Omzet_PmbPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_PmbPercent\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Omzet_PmbPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_AnaNominal {
                get {
                    try {
                        return ((string)(this[this.tableData.Sls_AnaNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_AnaNominal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Sls_AnaNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_AnaPercent {
                get {
                    try {
                        return ((string)(this[this.tableData.Sls_AnaPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_AnaPercent\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Sls_AnaPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_PmbNominal {
                get {
                    try {
                        return ((string)(this[this.tableData.Sls_PmbNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_PmbNominal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Sls_PmbNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_PmbPercent {
                get {
                    try {
                        return ((string)(this[this.tableData.Sls_PmbPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_PmbPercent\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Sls_PmbPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cab {
                get {
                    try {
                        return ((string)(this[this.tableData.CabColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cab\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.CabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO {
                get {
                    try {
                        return ((string)(this[this.tableData.DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nota {
                get {
                    try {
                        return ((string)(this[this.tableData.NotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nota\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales {
                get {
                    try {
                        return ((string)(this[this.tableData.SalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Toko {
                get {
                    try {
                        return ((string)(this[this.tableData.TokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Toko\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IdWil {
                get {
                    try {
                        return ((string)(this[this.tableData.IdWilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdWil\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.IdWilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expedisi {
                get {
                    try {
                        return ((string)(this[this.tableData.ExpedisiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expedisi\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.ExpedisiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStok {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaStokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStok\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaStokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jumlah {
                get {
                    try {
                        return ((string)(this[this.tableData.JumlahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jumlah\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JumlahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Harga {
                get {
                    try {
                        return ((string)(this[this.tableData.HargaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Harga\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.HargaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nBruto {
                get {
                    try {
                        return ((string)(this[this.tableData.nBrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nBruto\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.nBrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Diskon {
                get {
                    try {
                        return ((string)(this[this.tableData.DiskonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diskon\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DiskonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cabang2 {
                get {
                    try {
                        return ((string)(this[this.tableData.Cabang2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cabang2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Cabang2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglNota {
                get {
                    try {
                        return ((string)(this[this.tableData.TglNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglNota\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglDO {
                get {
                    try {
                        return ((string)(this[this.tableData.TglDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglDO\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TglDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Alamat {
                get {
                    try {
                        return ((string)(this[this.tableData.AlamatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alamat\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AlamatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kota {
                get {
                    try {
                        return ((string)(this[this.tableData.KotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kota\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTotal {
                get {
                    try {
                        return ((string)(this[this.tableData.nTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTotal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.nTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nPot {
                get {
                    try {
                        return ((string)(this[this.tableData.nPotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nPot\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.nPotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Nota_A {
                get {
                    try {
                        return ((int)(this[this.tableData.Nota_AColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nota_A\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Nota_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Nota_B {
                get {
                    try {
                        return ((int)(this[this.tableData.Nota_BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nota_B\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.Nota_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSalesNull() {
                return this.IsNull(this.tableData.KodeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSalesNull() {
                this[this.tableData.KodeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBarangNull() {
                return this.IsNull(this.tableData.NamaBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBarangNull() {
                this[this.tableData.NamaBarangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_ANull() {
                return this.IsNull(this.tableData.DO_AColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_ANull() {
                this[this.tableData.DO_AColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_BNull() {
                return this.IsNull(this.tableData.DO_BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_BNull() {
                this[this.tableData.DO_BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_ANull() {
                return this.IsNull(this.tableData.Omzet_AColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_ANull() {
                this[this.tableData.Omzet_AColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_BNull() {
                return this.IsNull(this.tableData.Omzet_BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_BNull() {
                this[this.tableData.Omzet_BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_PmbNominalNull() {
                return this.IsNull(this.tableData.DO_PmbNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_PmbNominalNull() {
                this[this.tableData.DO_PmbNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_PmbPercentNull() {
                return this.IsNull(this.tableData.DO_PmbPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_PmbPercentNull() {
                this[this.tableData.DO_PmbPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_PmbNominalNull() {
                return this.IsNull(this.tableData.Omzet_PmbNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_PmbNominalNull() {
                this[this.tableData.Omzet_PmbNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_PmbPercentNull() {
                return this.IsNull(this.tableData.Omzet_PmbPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_PmbPercentNull() {
                this[this.tableData.Omzet_PmbPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_AnaNominalNull() {
                return this.IsNull(this.tableData.Sls_AnaNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_AnaNominalNull() {
                this[this.tableData.Sls_AnaNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_AnaPercentNull() {
                return this.IsNull(this.tableData.Sls_AnaPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_AnaPercentNull() {
                this[this.tableData.Sls_AnaPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_PmbNominalNull() {
                return this.IsNull(this.tableData.Sls_PmbNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_PmbNominalNull() {
                this[this.tableData.Sls_PmbNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_PmbPercentNull() {
                return this.IsNull(this.tableData.Sls_PmbPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_PmbPercentNull() {
                this[this.tableData.Sls_PmbPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabNull() {
                return this.IsNull(this.tableData.CabColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabNull() {
                this[this.tableData.CabColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDONull() {
                return this.IsNull(this.tableData.DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDONull() {
                this[this.tableData.DOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotaNull() {
                return this.IsNull(this.tableData.NotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotaNull() {
                this[this.tableData.NotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNull() {
                return this.IsNull(this.tableData.SalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNull() {
                this[this.tableData.SalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTokoNull() {
                return this.IsNull(this.tableData.TokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTokoNull() {
                this[this.tableData.TokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdWilNull() {
                return this.IsNull(this.tableData.IdWilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdWilNull() {
                this[this.tableData.IdWilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpedisiNull() {
                return this.IsNull(this.tableData.ExpedisiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpedisiNull() {
                this[this.tableData.ExpedisiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStokNull() {
                return this.IsNull(this.tableData.NamaStokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStokNull() {
                this[this.tableData.NamaStokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJumlahNull() {
                return this.IsNull(this.tableData.JumlahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJumlahNull() {
                this[this.tableData.JumlahColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaNull() {
                return this.IsNull(this.tableData.HargaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaNull() {
                this[this.tableData.HargaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnBrutoNull() {
                return this.IsNull(this.tableData.nBrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnBrutoNull() {
                this[this.tableData.nBrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiskonNull() {
                return this.IsNull(this.tableData.DiskonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiskonNull() {
                this[this.tableData.DiskonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabang2Null() {
                return this.IsNull(this.tableData.Cabang2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabang2Null() {
                this[this.tableData.Cabang2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglNotaNull() {
                return this.IsNull(this.tableData.TglNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglNotaNull() {
                this[this.tableData.TglNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglDONull() {
                return this.IsNull(this.tableData.TglDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglDONull() {
                this[this.tableData.TglDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlamatNull() {
                return this.IsNull(this.tableData.AlamatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlamatNull() {
                this[this.tableData.AlamatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKotaNull() {
                return this.IsNull(this.tableData.KotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKotaNull() {
                this[this.tableData.KotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTotalNull() {
                return this.IsNull(this.tableData.nTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTotalNull() {
                this[this.tableData.nTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnPotNull() {
                return this.IsNull(this.tableData.nPotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnPotNull() {
                this[this.tableData.nPotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNota_ANull() {
                return this.IsNull(this.tableData.Nota_AColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNota_ANull() {
                this[this.tableData.Nota_AColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNota_BNull() {
                return this.IsNull(this.tableData.Nota_BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNota_BNull() {
                this[this.tableData.Nota_BColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Data1Row : global::System.Data.DataRow {
            
            private Data1DataTable tableData1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData1 = ((Data1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSales {
                get {
                    try {
                        return ((string)(this[this.tableData1.KodeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSales\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.KodeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBarang {
                get {
                    try {
                        return ((string)(this[this.tableData1.NamaBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBarang\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.NamaBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_A {
                get {
                    try {
                        return ((string)(this[this.tableData1.DO_AColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_A\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.DO_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_B {
                get {
                    try {
                        return ((string)(this[this.tableData1.DO_BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_B\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.DO_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_A {
                get {
                    try {
                        return ((string)(this[this.tableData1.Omzet_AColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_A\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.Omzet_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_B {
                get {
                    try {
                        return ((string)(this[this.tableData1.Omzet_BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_B\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.Omzet_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_PmbNominal {
                get {
                    try {
                        return ((string)(this[this.tableData1.DO_PmbNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_PmbNominal\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.DO_PmbNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_PmbPercent {
                get {
                    try {
                        return ((string)(this[this.tableData1.DO_PmbPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_PmbPercent\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.DO_PmbPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_PmbNominal {
                get {
                    try {
                        return ((string)(this[this.tableData1.Omzet_PmbNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_PmbNominal\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.Omzet_PmbNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_PmbPercent {
                get {
                    try {
                        return ((string)(this[this.tableData1.Omzet_PmbPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_PmbPercent\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.Omzet_PmbPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_AnaNominal {
                get {
                    try {
                        return ((string)(this[this.tableData1.Sls_AnaNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_AnaNominal\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.Sls_AnaNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_AnaPercent {
                get {
                    try {
                        return ((string)(this[this.tableData1.Sls_AnaPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_AnaPercent\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.Sls_AnaPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_PmbNominal {
                get {
                    try {
                        return ((string)(this[this.tableData1.Sls_PmbNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_PmbNominal\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.Sls_PmbNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_PmbPercent {
                get {
                    try {
                        return ((string)(this[this.tableData1.Sls_PmbPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_PmbPercent\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.Sls_PmbPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cab {
                get {
                    try {
                        return ((string)(this[this.tableData1.CabColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cab\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.CabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO {
                get {
                    try {
                        return ((string)(this[this.tableData1.DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nota {
                get {
                    try {
                        return ((string)(this[this.tableData1.NotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nota\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.NotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales {
                get {
                    try {
                        return ((string)(this[this.tableData1.SalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.SalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Toko {
                get {
                    try {
                        return ((string)(this[this.tableData1.TokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Toko\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.TokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IdWil {
                get {
                    try {
                        return ((string)(this[this.tableData1.IdWilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdWil\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.IdWilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expedisi {
                get {
                    try {
                        return ((string)(this[this.tableData1.ExpedisiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expedisi\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.ExpedisiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStok {
                get {
                    try {
                        return ((string)(this[this.tableData1.NamaStokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStok\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.NamaStokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jumlah {
                get {
                    try {
                        return ((string)(this[this.tableData1.JumlahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jumlah\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.JumlahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Harga {
                get {
                    try {
                        return ((string)(this[this.tableData1.HargaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Harga\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.HargaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nBruto {
                get {
                    try {
                        return ((string)(this[this.tableData1.nBrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nBruto\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.nBrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Diskon {
                get {
                    try {
                        return ((string)(this[this.tableData1.DiskonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diskon\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.DiskonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cabang2 {
                get {
                    try {
                        return ((string)(this[this.tableData1.Cabang2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cabang2\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.Cabang2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglNota {
                get {
                    try {
                        return ((string)(this[this.tableData1.TglNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglNota\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.TglNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglDO {
                get {
                    try {
                        return ((string)(this[this.tableData1.TglDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglDO\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.TglDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Alamat {
                get {
                    try {
                        return ((string)(this[this.tableData1.AlamatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alamat\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.AlamatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kota {
                get {
                    try {
                        return ((string)(this[this.tableData1.KotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kota\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.KotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTotal {
                get {
                    try {
                        return ((string)(this[this.tableData1.nTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTotal\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.nTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyTokoPeriode1 {
                get {
                    try {
                        return ((int)(this[this.tableData1.QtyTokoPeriode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyTokoPeriode1\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyTokoPeriode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyTokoPeriode2 {
                get {
                    try {
                        return ((int)(this[this.tableData1.QtyTokoPeriode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyTokoPeriode2\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyTokoPeriode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyTargetToko {
                get {
                    try {
                        return ((int)(this[this.tableData1.QtyTargetTokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyTargetToko\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyTargetTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyBarangPeriode1 {
                get {
                    try {
                        return ((int)(this[this.tableData1.QtyBarangPeriode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyBarangPeriode1\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyBarangPeriode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyBarangPeriode2 {
                get {
                    try {
                        return ((int)(this[this.tableData1.QtyBarangPeriode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyBarangPeriode2\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyBarangPeriode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QtyTargetBarang {
                get {
                    try {
                        return ((int)(this[this.tableData1.QtyTargetBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyTargetBarang\' in table \'Data1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData1.QtyTargetBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSalesNull() {
                return this.IsNull(this.tableData1.KodeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSalesNull() {
                this[this.tableData1.KodeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBarangNull() {
                return this.IsNull(this.tableData1.NamaBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBarangNull() {
                this[this.tableData1.NamaBarangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_ANull() {
                return this.IsNull(this.tableData1.DO_AColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_ANull() {
                this[this.tableData1.DO_AColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_BNull() {
                return this.IsNull(this.tableData1.DO_BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_BNull() {
                this[this.tableData1.DO_BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_ANull() {
                return this.IsNull(this.tableData1.Omzet_AColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_ANull() {
                this[this.tableData1.Omzet_AColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_BNull() {
                return this.IsNull(this.tableData1.Omzet_BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_BNull() {
                this[this.tableData1.Omzet_BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_PmbNominalNull() {
                return this.IsNull(this.tableData1.DO_PmbNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_PmbNominalNull() {
                this[this.tableData1.DO_PmbNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_PmbPercentNull() {
                return this.IsNull(this.tableData1.DO_PmbPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_PmbPercentNull() {
                this[this.tableData1.DO_PmbPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_PmbNominalNull() {
                return this.IsNull(this.tableData1.Omzet_PmbNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_PmbNominalNull() {
                this[this.tableData1.Omzet_PmbNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_PmbPercentNull() {
                return this.IsNull(this.tableData1.Omzet_PmbPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_PmbPercentNull() {
                this[this.tableData1.Omzet_PmbPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_AnaNominalNull() {
                return this.IsNull(this.tableData1.Sls_AnaNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_AnaNominalNull() {
                this[this.tableData1.Sls_AnaNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_AnaPercentNull() {
                return this.IsNull(this.tableData1.Sls_AnaPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_AnaPercentNull() {
                this[this.tableData1.Sls_AnaPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_PmbNominalNull() {
                return this.IsNull(this.tableData1.Sls_PmbNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_PmbNominalNull() {
                this[this.tableData1.Sls_PmbNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_PmbPercentNull() {
                return this.IsNull(this.tableData1.Sls_PmbPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_PmbPercentNull() {
                this[this.tableData1.Sls_PmbPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabNull() {
                return this.IsNull(this.tableData1.CabColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabNull() {
                this[this.tableData1.CabColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDONull() {
                return this.IsNull(this.tableData1.DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDONull() {
                this[this.tableData1.DOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotaNull() {
                return this.IsNull(this.tableData1.NotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotaNull() {
                this[this.tableData1.NotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNull() {
                return this.IsNull(this.tableData1.SalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNull() {
                this[this.tableData1.SalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTokoNull() {
                return this.IsNull(this.tableData1.TokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTokoNull() {
                this[this.tableData1.TokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdWilNull() {
                return this.IsNull(this.tableData1.IdWilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdWilNull() {
                this[this.tableData1.IdWilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpedisiNull() {
                return this.IsNull(this.tableData1.ExpedisiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpedisiNull() {
                this[this.tableData1.ExpedisiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStokNull() {
                return this.IsNull(this.tableData1.NamaStokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStokNull() {
                this[this.tableData1.NamaStokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJumlahNull() {
                return this.IsNull(this.tableData1.JumlahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJumlahNull() {
                this[this.tableData1.JumlahColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaNull() {
                return this.IsNull(this.tableData1.HargaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaNull() {
                this[this.tableData1.HargaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnBrutoNull() {
                return this.IsNull(this.tableData1.nBrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnBrutoNull() {
                this[this.tableData1.nBrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiskonNull() {
                return this.IsNull(this.tableData1.DiskonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiskonNull() {
                this[this.tableData1.DiskonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabang2Null() {
                return this.IsNull(this.tableData1.Cabang2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabang2Null() {
                this[this.tableData1.Cabang2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglNotaNull() {
                return this.IsNull(this.tableData1.TglNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglNotaNull() {
                this[this.tableData1.TglNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglDONull() {
                return this.IsNull(this.tableData1.TglDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglDONull() {
                this[this.tableData1.TglDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlamatNull() {
                return this.IsNull(this.tableData1.AlamatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlamatNull() {
                this[this.tableData1.AlamatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKotaNull() {
                return this.IsNull(this.tableData1.KotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKotaNull() {
                this[this.tableData1.KotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTotalNull() {
                return this.IsNull(this.tableData1.nTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTotalNull() {
                this[this.tableData1.nTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyTokoPeriode1Null() {
                return this.IsNull(this.tableData1.QtyTokoPeriode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyTokoPeriode1Null() {
                this[this.tableData1.QtyTokoPeriode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyTokoPeriode2Null() {
                return this.IsNull(this.tableData1.QtyTokoPeriode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyTokoPeriode2Null() {
                this[this.tableData1.QtyTokoPeriode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyTargetTokoNull() {
                return this.IsNull(this.tableData1.QtyTargetTokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyTargetTokoNull() {
                this[this.tableData1.QtyTargetTokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyBarangPeriode1Null() {
                return this.IsNull(this.tableData1.QtyBarangPeriode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyBarangPeriode1Null() {
                this[this.tableData1.QtyBarangPeriode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyBarangPeriode2Null() {
                return this.IsNull(this.tableData1.QtyBarangPeriode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyBarangPeriode2Null() {
                this[this.tableData1.QtyBarangPeriode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyTargetBarangNull() {
                return this.IsNull(this.tableData1.QtyTargetBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyTargetBarangNull() {
                this[this.tableData1.QtyTargetBarangColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Data2Row : global::System.Data.DataRow {
            
            private Data2DataTable tableData2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData2 = ((Data2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSales {
                get {
                    try {
                        return ((string)(this[this.tableData2.KodeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSales\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.KodeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBarang {
                get {
                    try {
                        return ((string)(this[this.tableData2.NamaBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBarang\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.NamaBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_A {
                get {
                    try {
                        return ((string)(this[this.tableData2.DO_AColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_A\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.DO_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_B {
                get {
                    try {
                        return ((string)(this[this.tableData2.DO_BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_B\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.DO_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_A {
                get {
                    try {
                        return ((string)(this[this.tableData2.Omzet_AColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_A\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.Omzet_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_B {
                get {
                    try {
                        return ((string)(this[this.tableData2.Omzet_BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_B\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.Omzet_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_PmbNominal {
                get {
                    try {
                        return ((string)(this[this.tableData2.DO_PmbNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_PmbNominal\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.DO_PmbNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_PmbPercent {
                get {
                    try {
                        return ((string)(this[this.tableData2.DO_PmbPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_PmbPercent\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.DO_PmbPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_PmbNominal {
                get {
                    try {
                        return ((string)(this[this.tableData2.Omzet_PmbNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_PmbNominal\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.Omzet_PmbNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Omzet_PmbPercent {
                get {
                    try {
                        return ((string)(this[this.tableData2.Omzet_PmbPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Omzet_PmbPercent\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.Omzet_PmbPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_AnaNominal {
                get {
                    try {
                        return ((string)(this[this.tableData2.Sls_AnaNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_AnaNominal\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.Sls_AnaNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_AnaPercent {
                get {
                    try {
                        return ((string)(this[this.tableData2.Sls_AnaPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_AnaPercent\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.Sls_AnaPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_PmbNominal {
                get {
                    try {
                        return ((string)(this[this.tableData2.Sls_PmbNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_PmbNominal\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.Sls_PmbNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sls_PmbPercent {
                get {
                    try {
                        return ((string)(this[this.tableData2.Sls_PmbPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sls_PmbPercent\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.Sls_PmbPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cab {
                get {
                    try {
                        return ((string)(this[this.tableData2.CabColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cab\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.CabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO {
                get {
                    try {
                        return ((string)(this[this.tableData2.DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nota {
                get {
                    try {
                        return ((string)(this[this.tableData2.NotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nota\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.NotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales {
                get {
                    try {
                        return ((string)(this[this.tableData2.SalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.SalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Toko {
                get {
                    try {
                        return ((string)(this[this.tableData2.TokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Toko\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.TokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IdWil {
                get {
                    try {
                        return ((string)(this[this.tableData2.IdWilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdWil\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.IdWilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expedisi {
                get {
                    try {
                        return ((string)(this[this.tableData2.ExpedisiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expedisi\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.ExpedisiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStok {
                get {
                    try {
                        return ((string)(this[this.tableData2.NamaStokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStok\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.NamaStokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jumlah {
                get {
                    try {
                        return ((string)(this[this.tableData2.JumlahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jumlah\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.JumlahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Harga {
                get {
                    try {
                        return ((string)(this[this.tableData2.HargaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Harga\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.HargaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nBruto {
                get {
                    try {
                        return ((string)(this[this.tableData2.nBrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nBruto\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.nBrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Diskon {
                get {
                    try {
                        return ((string)(this[this.tableData2.DiskonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diskon\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.DiskonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cabang2 {
                get {
                    try {
                        return ((string)(this[this.tableData2.Cabang2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cabang2\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.Cabang2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglNota {
                get {
                    try {
                        return ((string)(this[this.tableData2.TglNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglNota\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.TglNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglDO {
                get {
                    try {
                        return ((string)(this[this.tableData2.TglDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglDO\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.TglDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Alamat {
                get {
                    try {
                        return ((string)(this[this.tableData2.AlamatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alamat\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.AlamatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kota {
                get {
                    try {
                        return ((string)(this[this.tableData2.KotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kota\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.KotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTotal {
                get {
                    try {
                        return ((string)(this[this.tableData2.nTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTotal\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.nTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOPeriode1 {
                get {
                    try {
                        return ((int)(this[this.tableData2.BOPeriode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOPeriode1\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.BOPeriode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOPeriode2 {
                get {
                    try {
                        return ((int)(this[this.tableData2.BOPeriode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOPeriode2\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.BOPeriode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReturPeriode1 {
                get {
                    try {
                        return ((int)(this[this.tableData2.ReturPeriode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturPeriode1\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.ReturPeriode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReturPeriode2 {
                get {
                    try {
                        return ((int)(this[this.tableData2.ReturPeriode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturPeriode2\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.ReturPeriode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeGudang {
                get {
                    try {
                        return ((string)(this[this.tableData2.KodeGudangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeGudang\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.KodeGudangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSalesNull() {
                return this.IsNull(this.tableData2.KodeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSalesNull() {
                this[this.tableData2.KodeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBarangNull() {
                return this.IsNull(this.tableData2.NamaBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBarangNull() {
                this[this.tableData2.NamaBarangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_ANull() {
                return this.IsNull(this.tableData2.DO_AColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_ANull() {
                this[this.tableData2.DO_AColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_BNull() {
                return this.IsNull(this.tableData2.DO_BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_BNull() {
                this[this.tableData2.DO_BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_ANull() {
                return this.IsNull(this.tableData2.Omzet_AColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_ANull() {
                this[this.tableData2.Omzet_AColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_BNull() {
                return this.IsNull(this.tableData2.Omzet_BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_BNull() {
                this[this.tableData2.Omzet_BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_PmbNominalNull() {
                return this.IsNull(this.tableData2.DO_PmbNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_PmbNominalNull() {
                this[this.tableData2.DO_PmbNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_PmbPercentNull() {
                return this.IsNull(this.tableData2.DO_PmbPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_PmbPercentNull() {
                this[this.tableData2.DO_PmbPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_PmbNominalNull() {
                return this.IsNull(this.tableData2.Omzet_PmbNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_PmbNominalNull() {
                this[this.tableData2.Omzet_PmbNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOmzet_PmbPercentNull() {
                return this.IsNull(this.tableData2.Omzet_PmbPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOmzet_PmbPercentNull() {
                this[this.tableData2.Omzet_PmbPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_AnaNominalNull() {
                return this.IsNull(this.tableData2.Sls_AnaNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_AnaNominalNull() {
                this[this.tableData2.Sls_AnaNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_AnaPercentNull() {
                return this.IsNull(this.tableData2.Sls_AnaPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_AnaPercentNull() {
                this[this.tableData2.Sls_AnaPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_PmbNominalNull() {
                return this.IsNull(this.tableData2.Sls_PmbNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_PmbNominalNull() {
                this[this.tableData2.Sls_PmbNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSls_PmbPercentNull() {
                return this.IsNull(this.tableData2.Sls_PmbPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSls_PmbPercentNull() {
                this[this.tableData2.Sls_PmbPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabNull() {
                return this.IsNull(this.tableData2.CabColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabNull() {
                this[this.tableData2.CabColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDONull() {
                return this.IsNull(this.tableData2.DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDONull() {
                this[this.tableData2.DOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotaNull() {
                return this.IsNull(this.tableData2.NotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotaNull() {
                this[this.tableData2.NotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNull() {
                return this.IsNull(this.tableData2.SalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNull() {
                this[this.tableData2.SalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTokoNull() {
                return this.IsNull(this.tableData2.TokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTokoNull() {
                this[this.tableData2.TokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdWilNull() {
                return this.IsNull(this.tableData2.IdWilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdWilNull() {
                this[this.tableData2.IdWilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpedisiNull() {
                return this.IsNull(this.tableData2.ExpedisiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpedisiNull() {
                this[this.tableData2.ExpedisiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStokNull() {
                return this.IsNull(this.tableData2.NamaStokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStokNull() {
                this[this.tableData2.NamaStokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJumlahNull() {
                return this.IsNull(this.tableData2.JumlahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJumlahNull() {
                this[this.tableData2.JumlahColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaNull() {
                return this.IsNull(this.tableData2.HargaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaNull() {
                this[this.tableData2.HargaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnBrutoNull() {
                return this.IsNull(this.tableData2.nBrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnBrutoNull() {
                this[this.tableData2.nBrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiskonNull() {
                return this.IsNull(this.tableData2.DiskonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiskonNull() {
                this[this.tableData2.DiskonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabang2Null() {
                return this.IsNull(this.tableData2.Cabang2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabang2Null() {
                this[this.tableData2.Cabang2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglNotaNull() {
                return this.IsNull(this.tableData2.TglNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglNotaNull() {
                this[this.tableData2.TglNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglDONull() {
                return this.IsNull(this.tableData2.TglDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglDONull() {
                this[this.tableData2.TglDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlamatNull() {
                return this.IsNull(this.tableData2.AlamatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlamatNull() {
                this[this.tableData2.AlamatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKotaNull() {
                return this.IsNull(this.tableData2.KotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKotaNull() {
                this[this.tableData2.KotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTotalNull() {
                return this.IsNull(this.tableData2.nTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTotalNull() {
                this[this.tableData2.nTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOPeriode1Null() {
                return this.IsNull(this.tableData2.BOPeriode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOPeriode1Null() {
                this[this.tableData2.BOPeriode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOPeriode2Null() {
                return this.IsNull(this.tableData2.BOPeriode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOPeriode2Null() {
                this[this.tableData2.BOPeriode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturPeriode1Null() {
                return this.IsNull(this.tableData2.ReturPeriode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturPeriode1Null() {
                this[this.tableData2.ReturPeriode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturPeriode2Null() {
                return this.IsNull(this.tableData2.ReturPeriode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturPeriode2Null() {
                this[this.tableData2.ReturPeriode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeGudangNull() {
                return this.IsNull(this.tableData2.KodeGudangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeGudangNull() {
                this[this.tableData2.KodeGudangColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Data3Row : global::System.Data.DataRow {
            
            private Data3DataTable tableData3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData3 = ((Data3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSales {
                get {
                    try {
                        return ((string)(this[this.tableData3.KodeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSales\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.KodeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoBPeriode1 {
                get {
                    try {
                        return ((int)(this[this.tableData3.NettoBPeriode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoBPeriode1\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.NettoBPeriode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoEPeriode2 {
                get {
                    try {
                        return ((int)(this[this.tableData3.NettoEPeriode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoEPeriode2\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.NettoEPeriode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoBPeriode2 {
                get {
                    try {
                        return ((int)(this[this.tableData3.NettoBPeriode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoBPeriode2\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.NettoBPeriode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoEPeriode1 {
                get {
                    try {
                        return ((int)(this[this.tableData3.NettoEPeriode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoEPeriode1\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.NettoEPeriode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C1 {
                get {
                    try {
                        return ((string)(this[this.tableData3.C1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.C1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C2 {
                get {
                    try {
                        return ((string)(this[this.tableData3.C2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.C2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoNota {
                get {
                    try {
                        return ((string)(this[this.tableData3.NoNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoNota\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.NoNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglNota {
                get {
                    try {
                        return ((string)(this[this.tableData3.TglNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglNota\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.TglNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoKoreksi {
                get {
                    try {
                        return ((string)(this[this.tableData3.NoKoreksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoKoreksi\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.NoKoreksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBarang {
                get {
                    try {
                        return ((string)(this[this.tableData3.NamaBarangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBarang\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.NamaBarangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sumber {
                get {
                    try {
                        return ((string)(this[this.tableData3.SumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sumber\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.SumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableData3.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Harga {
                get {
                    try {
                        return ((string)(this[this.tableData3.HargaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Harga\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.HargaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglKoreksi {
                get {
                    try {
                        return ((string)(this[this.tableData3.TglKoreksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglKoreksi\' in table \'Data3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData3.TglKoreksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSalesNull() {
                return this.IsNull(this.tableData3.KodeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSalesNull() {
                this[this.tableData3.KodeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoBPeriode1Null() {
                return this.IsNull(this.tableData3.NettoBPeriode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoBPeriode1Null() {
                this[this.tableData3.NettoBPeriode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoEPeriode2Null() {
                return this.IsNull(this.tableData3.NettoEPeriode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoEPeriode2Null() {
                this[this.tableData3.NettoEPeriode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoBPeriode2Null() {
                return this.IsNull(this.tableData3.NettoBPeriode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoBPeriode2Null() {
                this[this.tableData3.NettoBPeriode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoEPeriode1Null() {
                return this.IsNull(this.tableData3.NettoEPeriode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoEPeriode1Null() {
                this[this.tableData3.NettoEPeriode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC1Null() {
                return this.IsNull(this.tableData3.C1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC1Null() {
                this[this.tableData3.C1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC2Null() {
                return this.IsNull(this.tableData3.C2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC2Null() {
                this[this.tableData3.C2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoNotaNull() {
                return this.IsNull(this.tableData3.NoNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoNotaNull() {
                this[this.tableData3.NoNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglNotaNull() {
                return this.IsNull(this.tableData3.TglNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglNotaNull() {
                this[this.tableData3.TglNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoKoreksiNull() {
                return this.IsNull(this.tableData3.NoKoreksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoKoreksiNull() {
                this[this.tableData3.NoKoreksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBarangNull() {
                return this.IsNull(this.tableData3.NamaBarangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBarangNull() {
                this[this.tableData3.NamaBarangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumberNull() {
                return this.IsNull(this.tableData3.SumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumberNull() {
                this[this.tableData3.SumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableData3.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableData3.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaNull() {
                return this.IsNull(this.tableData3.HargaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaNull() {
                this[this.tableData3.HargaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglKoreksiNull() {
                return this.IsNull(this.tableData3.TglKoreksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglKoreksiNull() {
                this[this.tableData3.TglKoreksiColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Data4Row : global::System.Data.DataRow {
            
            private Data4DataTable tableData4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data4Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData4 = ((Data4DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSales {
                get {
                    try {
                        return ((string)(this[this.tableData4.KodeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSales\' in table \'Data4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData4.KodeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoBPeriode1 {
                get {
                    try {
                        return ((int)(this[this.tableData4.NettoBPeriode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoBPeriode1\' in table \'Data4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData4.NettoBPeriode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoEPeriode2 {
                get {
                    try {
                        return ((int)(this[this.tableData4.NettoEPeriode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoEPeriode2\' in table \'Data4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData4.NettoEPeriode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoBPeriode2 {
                get {
                    try {
                        return ((int)(this[this.tableData4.NettoBPeriode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoBPeriode2\' in table \'Data4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData4.NettoBPeriode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoEPeriode1 {
                get {
                    try {
                        return ((int)(this[this.tableData4.NettoEPeriode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoEPeriode1\' in table \'Data4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData4.NettoEPeriode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TargetNotaB {
                get {
                    try {
                        return ((int)(this[this.tableData4.TargetNotaBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetNotaB\' in table \'Data4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData4.TargetNotaBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TargetNotaE {
                get {
                    try {
                        return ((int)(this[this.tableData4.TargetNotaEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetNotaE\' in table \'Data4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData4.TargetNotaEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSalesNull() {
                return this.IsNull(this.tableData4.KodeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSalesNull() {
                this[this.tableData4.KodeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoBPeriode1Null() {
                return this.IsNull(this.tableData4.NettoBPeriode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoBPeriode1Null() {
                this[this.tableData4.NettoBPeriode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoEPeriode2Null() {
                return this.IsNull(this.tableData4.NettoEPeriode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoEPeriode2Null() {
                this[this.tableData4.NettoEPeriode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoBPeriode2Null() {
                return this.IsNull(this.tableData4.NettoBPeriode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoBPeriode2Null() {
                this[this.tableData4.NettoBPeriode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoEPeriode1Null() {
                return this.IsNull(this.tableData4.NettoEPeriode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoEPeriode1Null() {
                this[this.tableData4.NettoEPeriode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetNotaBNull() {
                return this.IsNull(this.tableData4.TargetNotaBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetNotaBNull() {
                this[this.tableData4.TargetNotaBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetNotaENull() {
                return this.IsNull(this.tableData4.TargetNotaEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetNotaENull() {
                this[this.tableData4.TargetNotaEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Data5Row : global::System.Data.DataRow {
            
            private Data5DataTable tableData5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data5Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData5 = ((Data5DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSales {
                get {
                    try {
                        return ((string)(this[this.tableData5.KodeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSales\' in table \'Data5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData5.KodeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Laba1 {
                get {
                    try {
                        return ((int)(this[this.tableData5.Laba1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Laba1\' in table \'Data5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData5.Laba1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Laba2 {
                get {
                    try {
                        return ((int)(this[this.tableData5.Laba2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Laba2\' in table \'Data5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData5.Laba2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Biaya {
                get {
                    try {
                        return ((int)(this[this.tableData5.BiayaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Biaya\' in table \'Data5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData5.BiayaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Overdue {
                get {
                    try {
                        return ((int)(this[this.tableData5.OverdueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Overdue\' in table \'Data5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData5.OverdueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoBPeriode1 {
                get {
                    try {
                        return ((int)(this[this.tableData5.NettoBPeriode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoBPeriode1\' in table \'Data5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData5.NettoBPeriode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoEPeriode2 {
                get {
                    try {
                        return ((int)(this[this.tableData5.NettoEPeriode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoEPeriode2\' in table \'Data5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData5.NettoEPeriode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoBPeriode2 {
                get {
                    try {
                        return ((int)(this[this.tableData5.NettoBPeriode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoBPeriode2\' in table \'Data5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData5.NettoBPeriode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NettoEPeriode1 {
                get {
                    try {
                        return ((int)(this[this.tableData5.NettoEPeriode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NettoEPeriode1\' in table \'Data5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData5.NettoEPeriode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSalesNull() {
                return this.IsNull(this.tableData5.KodeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSalesNull() {
                this[this.tableData5.KodeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLaba1Null() {
                return this.IsNull(this.tableData5.Laba1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLaba1Null() {
                this[this.tableData5.Laba1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLaba2Null() {
                return this.IsNull(this.tableData5.Laba2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLaba2Null() {
                this[this.tableData5.Laba2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBiayaNull() {
                return this.IsNull(this.tableData5.BiayaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBiayaNull() {
                this[this.tableData5.BiayaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverdueNull() {
                return this.IsNull(this.tableData5.OverdueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverdueNull() {
                this[this.tableData5.OverdueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoBPeriode1Null() {
                return this.IsNull(this.tableData5.NettoBPeriode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoBPeriode1Null() {
                this[this.tableData5.NettoBPeriode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoEPeriode2Null() {
                return this.IsNull(this.tableData5.NettoEPeriode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoEPeriode2Null() {
                this[this.tableData5.NettoEPeriode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoBPeriode2Null() {
                return this.IsNull(this.tableData5.NettoBPeriode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoBPeriode2Null() {
                this[this.tableData5.NettoBPeriode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoEPeriode1Null() {
                return this.IsNull(this.tableData5.NettoEPeriode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoEPeriode1Null() {
                this[this.tableData5.NettoEPeriode1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            
            private DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Data1RowChangeEvent : global::System.EventArgs {
            
            private Data1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1RowChangeEvent(Data1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Data2RowChangeEvent : global::System.EventArgs {
            
            private Data2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2RowChangeEvent(Data2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Data3RowChangeEvent : global::System.EventArgs {
            
            private Data3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data3RowChangeEvent(Data3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Data4RowChangeEvent : global::System.EventArgs {
            
            private Data4Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data4RowChangeEvent(Data4Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data4Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Data5RowChangeEvent : global::System.EventArgs {
            
            private Data5Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data5RowChangeEvent(Data5Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data5Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591