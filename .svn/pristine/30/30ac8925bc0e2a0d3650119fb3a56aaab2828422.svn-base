//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Trading.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsTokoAktif")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsTokoAktif : global::System.Data.DataSet {
        
        private TokoBronzeDataTable tableTokoBronze;
        
        private TokoSilverDataTable tableTokoSilver;
        
        private TokoGoldDataTable tableTokoGold;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsTokoAktif() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsTokoAktif(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TokoBronze"] != null)) {
                    base.Tables.Add(new TokoBronzeDataTable(ds.Tables["TokoBronze"]));
                }
                if ((ds.Tables["TokoSilver"] != null)) {
                    base.Tables.Add(new TokoSilverDataTable(ds.Tables["TokoSilver"]));
                }
                if ((ds.Tables["TokoGold"] != null)) {
                    base.Tables.Add(new TokoGoldDataTable(ds.Tables["TokoGold"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TokoBronzeDataTable TokoBronze {
            get {
                return this.tableTokoBronze;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TokoSilverDataTable TokoSilver {
            get {
                return this.tableTokoSilver;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TokoGoldDataTable TokoGold {
            get {
                return this.tableTokoGold;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsTokoAktif cln = ((dsTokoAktif)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TokoBronze"] != null)) {
                    base.Tables.Add(new TokoBronzeDataTable(ds.Tables["TokoBronze"]));
                }
                if ((ds.Tables["TokoSilver"] != null)) {
                    base.Tables.Add(new TokoSilverDataTable(ds.Tables["TokoSilver"]));
                }
                if ((ds.Tables["TokoGold"] != null)) {
                    base.Tables.Add(new TokoGoldDataTable(ds.Tables["TokoGold"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTokoBronze = ((TokoBronzeDataTable)(base.Tables["TokoBronze"]));
            if ((initTable == true)) {
                if ((this.tableTokoBronze != null)) {
                    this.tableTokoBronze.InitVars();
                }
            }
            this.tableTokoSilver = ((TokoSilverDataTable)(base.Tables["TokoSilver"]));
            if ((initTable == true)) {
                if ((this.tableTokoSilver != null)) {
                    this.tableTokoSilver.InitVars();
                }
            }
            this.tableTokoGold = ((TokoGoldDataTable)(base.Tables["TokoGold"]));
            if ((initTable == true)) {
                if ((this.tableTokoGold != null)) {
                    this.tableTokoGold.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsTokoAktif";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsTokoAktif.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTokoBronze = new TokoBronzeDataTable();
            base.Tables.Add(this.tableTokoBronze);
            this.tableTokoSilver = new TokoSilverDataTable();
            base.Tables.Add(this.tableTokoSilver);
            this.tableTokoGold = new TokoGoldDataTable();
            base.Tables.Add(this.tableTokoGold);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTokoBronze() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTokoSilver() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTokoGold() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsTokoAktif ds = new dsTokoAktif();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TokoBronzeRowChangeEventHandler(object sender, TokoBronzeRowChangeEvent e);
        
        public delegate void TokoSilverRowChangeEventHandler(object sender, TokoSilverRowChangeEvent e);
        
        public delegate void TokoGoldRowChangeEventHandler(object sender, TokoGoldRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TokoBronzeDataTable : global::System.Data.TypedTableBase<TokoBronzeRow> {
            
            private global::System.Data.DataColumn columnKodeToko;
            
            private global::System.Data.DataColumn columnKota;
            
            private global::System.Data.DataColumn columnFB2Omset;
            
            private global::System.Data.DataColumn columnFB2Hpp;
            
            private global::System.Data.DataColumn columnFB2Laba;
            
            private global::System.Data.DataColumn columnFB4Omset;
            
            private global::System.Data.DataColumn columnFB4Hpp;
            
            private global::System.Data.DataColumn columnFB4Laba;
            
            private global::System.Data.DataColumn columnFE2Omset;
            
            private global::System.Data.DataColumn columnFE2Hpp;
            
            private global::System.Data.DataColumn columnFE2Laba;
            
            private global::System.Data.DataColumn columnFE4Omset;
            
            private global::System.Data.DataColumn columnFE4Hpp;
            
            private global::System.Data.DataColumn columnFE4Laba;
            
            private global::System.Data.DataColumn columnLainyaOmset;
            
            private global::System.Data.DataColumn columnLainyaHpp;
            
            private global::System.Data.DataColumn columnLainyaLaba;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoBronzeDataTable() {
                this.TableName = "TokoBronze";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TokoBronzeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TokoBronzeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeTokoColumn {
                get {
                    return this.columnKodeToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaColumn {
                get {
                    return this.columnKota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB2OmsetColumn {
                get {
                    return this.columnFB2Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB2HppColumn {
                get {
                    return this.columnFB2Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB2LabaColumn {
                get {
                    return this.columnFB2Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB4OmsetColumn {
                get {
                    return this.columnFB4Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB4HppColumn {
                get {
                    return this.columnFB4Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB4LabaColumn {
                get {
                    return this.columnFB4Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE2OmsetColumn {
                get {
                    return this.columnFE2Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE2HppColumn {
                get {
                    return this.columnFE2Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE2LabaColumn {
                get {
                    return this.columnFE2Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE4OmsetColumn {
                get {
                    return this.columnFE4Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE4HppColumn {
                get {
                    return this.columnFE4Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE4LabaColumn {
                get {
                    return this.columnFE4Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainyaOmsetColumn {
                get {
                    return this.columnLainyaOmset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainyaHppColumn {
                get {
                    return this.columnLainyaHpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainyaLabaColumn {
                get {
                    return this.columnLainyaLaba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoBronzeRow this[int index] {
                get {
                    return ((TokoBronzeRow)(this.Rows[index]));
                }
            }
            
            public event TokoBronzeRowChangeEventHandler TokoBronzeRowChanging;
            
            public event TokoBronzeRowChangeEventHandler TokoBronzeRowChanged;
            
            public event TokoBronzeRowChangeEventHandler TokoBronzeRowDeleting;
            
            public event TokoBronzeRowChangeEventHandler TokoBronzeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTokoBronzeRow(TokoBronzeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoBronzeRow AddTokoBronzeRow(
                        string KodeToko, 
                        string Kota, 
                        double FB2Omset, 
                        double FB2Hpp, 
                        double FB2Laba, 
                        double FB4Omset, 
                        double FB4Hpp, 
                        double FB4Laba, 
                        double FE2Omset, 
                        double FE2Hpp, 
                        double FE2Laba, 
                        double FE4Omset, 
                        double FE4Hpp, 
                        double FE4Laba, 
                        double LainyaOmset, 
                        double LainyaHpp, 
                        double LainyaLaba) {
                TokoBronzeRow rowTokoBronzeRow = ((TokoBronzeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeToko,
                        Kota,
                        FB2Omset,
                        FB2Hpp,
                        FB2Laba,
                        FB4Omset,
                        FB4Hpp,
                        FB4Laba,
                        FE2Omset,
                        FE2Hpp,
                        FE2Laba,
                        FE4Omset,
                        FE4Hpp,
                        FE4Laba,
                        LainyaOmset,
                        LainyaHpp,
                        LainyaLaba};
                rowTokoBronzeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTokoBronzeRow);
                return rowTokoBronzeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TokoBronzeDataTable cln = ((TokoBronzeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TokoBronzeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeToko = base.Columns["KodeToko"];
                this.columnKota = base.Columns["Kota"];
                this.columnFB2Omset = base.Columns["FB2Omset"];
                this.columnFB2Hpp = base.Columns["FB2Hpp"];
                this.columnFB2Laba = base.Columns["FB2Laba"];
                this.columnFB4Omset = base.Columns["FB4Omset"];
                this.columnFB4Hpp = base.Columns["FB4Hpp"];
                this.columnFB4Laba = base.Columns["FB4Laba"];
                this.columnFE2Omset = base.Columns["FE2Omset"];
                this.columnFE2Hpp = base.Columns["FE2Hpp"];
                this.columnFE2Laba = base.Columns["FE2Laba"];
                this.columnFE4Omset = base.Columns["FE4Omset"];
                this.columnFE4Hpp = base.Columns["FE4Hpp"];
                this.columnFE4Laba = base.Columns["FE4Laba"];
                this.columnLainyaOmset = base.Columns["LainyaOmset"];
                this.columnLainyaHpp = base.Columns["LainyaHpp"];
                this.columnLainyaLaba = base.Columns["LainyaLaba"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeToko = new global::System.Data.DataColumn("KodeToko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeToko);
                this.columnKota = new global::System.Data.DataColumn("Kota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKota);
                this.columnFB2Omset = new global::System.Data.DataColumn("FB2Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB2Omset);
                this.columnFB2Hpp = new global::System.Data.DataColumn("FB2Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB2Hpp);
                this.columnFB2Laba = new global::System.Data.DataColumn("FB2Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB2Laba);
                this.columnFB4Omset = new global::System.Data.DataColumn("FB4Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB4Omset);
                this.columnFB4Hpp = new global::System.Data.DataColumn("FB4Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB4Hpp);
                this.columnFB4Laba = new global::System.Data.DataColumn("FB4Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB4Laba);
                this.columnFE2Omset = new global::System.Data.DataColumn("FE2Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE2Omset);
                this.columnFE2Hpp = new global::System.Data.DataColumn("FE2Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE2Hpp);
                this.columnFE2Laba = new global::System.Data.DataColumn("FE2Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE2Laba);
                this.columnFE4Omset = new global::System.Data.DataColumn("FE4Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE4Omset);
                this.columnFE4Hpp = new global::System.Data.DataColumn("FE4Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE4Hpp);
                this.columnFE4Laba = new global::System.Data.DataColumn("FE4Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE4Laba);
                this.columnLainyaOmset = new global::System.Data.DataColumn("LainyaOmset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLainyaOmset);
                this.columnLainyaHpp = new global::System.Data.DataColumn("LainyaHpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLainyaHpp);
                this.columnLainyaLaba = new global::System.Data.DataColumn("LainyaLaba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLainyaLaba);
                this.columnKodeToko.DefaultValue = ((string)(""));
                this.columnKota.DefaultValue = ((string)(""));
                this.columnFB2Omset.DefaultValue = ((double)(0));
                this.columnFB2Hpp.DefaultValue = ((double)(0));
                this.columnFB2Laba.DefaultValue = ((double)(0));
                this.columnFB4Omset.DefaultValue = ((double)(0));
                this.columnFB4Hpp.DefaultValue = ((double)(0));
                this.columnFB4Laba.DefaultValue = ((double)(0));
                this.columnFE2Omset.DefaultValue = ((double)(0));
                this.columnFE2Hpp.DefaultValue = ((double)(0));
                this.columnFE2Laba.DefaultValue = ((double)(0));
                this.columnFE4Omset.DefaultValue = ((double)(0));
                this.columnFE4Hpp.DefaultValue = ((double)(0));
                this.columnFE4Laba.DefaultValue = ((double)(0));
                this.columnLainyaOmset.DefaultValue = ((double)(0));
                this.columnLainyaHpp.DefaultValue = ((double)(0));
                this.columnLainyaLaba.DefaultValue = ((double)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoBronzeRow NewTokoBronzeRow() {
                return ((TokoBronzeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TokoBronzeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TokoBronzeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TokoBronzeRowChanged != null)) {
                    this.TokoBronzeRowChanged(this, new TokoBronzeRowChangeEvent(((TokoBronzeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TokoBronzeRowChanging != null)) {
                    this.TokoBronzeRowChanging(this, new TokoBronzeRowChangeEvent(((TokoBronzeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TokoBronzeRowDeleted != null)) {
                    this.TokoBronzeRowDeleted(this, new TokoBronzeRowChangeEvent(((TokoBronzeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TokoBronzeRowDeleting != null)) {
                    this.TokoBronzeRowDeleting(this, new TokoBronzeRowChangeEvent(((TokoBronzeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTokoBronzeRow(TokoBronzeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsTokoAktif ds = new dsTokoAktif();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TokoBronzeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TokoSilverDataTable : global::System.Data.TypedTableBase<TokoSilverRow> {
            
            private global::System.Data.DataColumn columnKodeToko;
            
            private global::System.Data.DataColumn columnKota;
            
            private global::System.Data.DataColumn columnFB2Omset;
            
            private global::System.Data.DataColumn columnFB2Hpp;
            
            private global::System.Data.DataColumn columnFB2Laba;
            
            private global::System.Data.DataColumn columnFB4Omset;
            
            private global::System.Data.DataColumn columnFB4Hpp;
            
            private global::System.Data.DataColumn columnFB4Laba;
            
            private global::System.Data.DataColumn columnFE2Omset;
            
            private global::System.Data.DataColumn columnFE2Hpp;
            
            private global::System.Data.DataColumn columnFE2Laba;
            
            private global::System.Data.DataColumn columnFE4Omset;
            
            private global::System.Data.DataColumn columnFE4Hpp;
            
            private global::System.Data.DataColumn columnFE4Laba;
            
            private global::System.Data.DataColumn columnLainyaOmset;
            
            private global::System.Data.DataColumn columnLainyaHpp;
            
            private global::System.Data.DataColumn columnLainyaLaba;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoSilverDataTable() {
                this.TableName = "TokoSilver";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TokoSilverDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TokoSilverDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeTokoColumn {
                get {
                    return this.columnKodeToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaColumn {
                get {
                    return this.columnKota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB2OmsetColumn {
                get {
                    return this.columnFB2Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB2HppColumn {
                get {
                    return this.columnFB2Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB2LabaColumn {
                get {
                    return this.columnFB2Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB4OmsetColumn {
                get {
                    return this.columnFB4Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB4HppColumn {
                get {
                    return this.columnFB4Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB4LabaColumn {
                get {
                    return this.columnFB4Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE2OmsetColumn {
                get {
                    return this.columnFE2Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE2HppColumn {
                get {
                    return this.columnFE2Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE2LabaColumn {
                get {
                    return this.columnFE2Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE4OmsetColumn {
                get {
                    return this.columnFE4Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE4HppColumn {
                get {
                    return this.columnFE4Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE4LabaColumn {
                get {
                    return this.columnFE4Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainyaOmsetColumn {
                get {
                    return this.columnLainyaOmset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainyaHppColumn {
                get {
                    return this.columnLainyaHpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainyaLabaColumn {
                get {
                    return this.columnLainyaLaba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoSilverRow this[int index] {
                get {
                    return ((TokoSilverRow)(this.Rows[index]));
                }
            }
            
            public event TokoSilverRowChangeEventHandler TokoSilverRowChanging;
            
            public event TokoSilverRowChangeEventHandler TokoSilverRowChanged;
            
            public event TokoSilverRowChangeEventHandler TokoSilverRowDeleting;
            
            public event TokoSilverRowChangeEventHandler TokoSilverRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTokoSilverRow(TokoSilverRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoSilverRow AddTokoSilverRow(
                        string KodeToko, 
                        string Kota, 
                        double FB2Omset, 
                        double FB2Hpp, 
                        double FB2Laba, 
                        double FB4Omset, 
                        double FB4Hpp, 
                        double FB4Laba, 
                        double FE2Omset, 
                        double FE2Hpp, 
                        double FE2Laba, 
                        double FE4Omset, 
                        double FE4Hpp, 
                        double FE4Laba, 
                        double LainyaOmset, 
                        double LainyaHpp, 
                        double LainyaLaba) {
                TokoSilverRow rowTokoSilverRow = ((TokoSilverRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeToko,
                        Kota,
                        FB2Omset,
                        FB2Hpp,
                        FB2Laba,
                        FB4Omset,
                        FB4Hpp,
                        FB4Laba,
                        FE2Omset,
                        FE2Hpp,
                        FE2Laba,
                        FE4Omset,
                        FE4Hpp,
                        FE4Laba,
                        LainyaOmset,
                        LainyaHpp,
                        LainyaLaba};
                rowTokoSilverRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTokoSilverRow);
                return rowTokoSilverRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TokoSilverDataTable cln = ((TokoSilverDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TokoSilverDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeToko = base.Columns["KodeToko"];
                this.columnKota = base.Columns["Kota"];
                this.columnFB2Omset = base.Columns["FB2Omset"];
                this.columnFB2Hpp = base.Columns["FB2Hpp"];
                this.columnFB2Laba = base.Columns["FB2Laba"];
                this.columnFB4Omset = base.Columns["FB4Omset"];
                this.columnFB4Hpp = base.Columns["FB4Hpp"];
                this.columnFB4Laba = base.Columns["FB4Laba"];
                this.columnFE2Omset = base.Columns["FE2Omset"];
                this.columnFE2Hpp = base.Columns["FE2Hpp"];
                this.columnFE2Laba = base.Columns["FE2Laba"];
                this.columnFE4Omset = base.Columns["FE4Omset"];
                this.columnFE4Hpp = base.Columns["FE4Hpp"];
                this.columnFE4Laba = base.Columns["FE4Laba"];
                this.columnLainyaOmset = base.Columns["LainyaOmset"];
                this.columnLainyaHpp = base.Columns["LainyaHpp"];
                this.columnLainyaLaba = base.Columns["LainyaLaba"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeToko = new global::System.Data.DataColumn("KodeToko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeToko);
                this.columnKota = new global::System.Data.DataColumn("Kota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKota);
                this.columnFB2Omset = new global::System.Data.DataColumn("FB2Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB2Omset);
                this.columnFB2Hpp = new global::System.Data.DataColumn("FB2Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB2Hpp);
                this.columnFB2Laba = new global::System.Data.DataColumn("FB2Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB2Laba);
                this.columnFB4Omset = new global::System.Data.DataColumn("FB4Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB4Omset);
                this.columnFB4Hpp = new global::System.Data.DataColumn("FB4Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB4Hpp);
                this.columnFB4Laba = new global::System.Data.DataColumn("FB4Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB4Laba);
                this.columnFE2Omset = new global::System.Data.DataColumn("FE2Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE2Omset);
                this.columnFE2Hpp = new global::System.Data.DataColumn("FE2Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE2Hpp);
                this.columnFE2Laba = new global::System.Data.DataColumn("FE2Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE2Laba);
                this.columnFE4Omset = new global::System.Data.DataColumn("FE4Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE4Omset);
                this.columnFE4Hpp = new global::System.Data.DataColumn("FE4Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE4Hpp);
                this.columnFE4Laba = new global::System.Data.DataColumn("FE4Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE4Laba);
                this.columnLainyaOmset = new global::System.Data.DataColumn("LainyaOmset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLainyaOmset);
                this.columnLainyaHpp = new global::System.Data.DataColumn("LainyaHpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLainyaHpp);
                this.columnLainyaLaba = new global::System.Data.DataColumn("LainyaLaba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLainyaLaba);
                this.columnKodeToko.DefaultValue = ((string)(""));
                this.columnKota.DefaultValue = ((string)(""));
                this.columnFB2Omset.DefaultValue = ((double)(0));
                this.columnFB2Hpp.DefaultValue = ((double)(0));
                this.columnFB2Laba.DefaultValue = ((double)(0));
                this.columnFB4Omset.DefaultValue = ((double)(0));
                this.columnFB4Hpp.DefaultValue = ((double)(0));
                this.columnFB4Laba.DefaultValue = ((double)(0));
                this.columnFE2Omset.DefaultValue = ((double)(0));
                this.columnFE2Hpp.DefaultValue = ((double)(0));
                this.columnFE2Laba.DefaultValue = ((double)(0));
                this.columnFE4Omset.DefaultValue = ((double)(0));
                this.columnFE4Hpp.DefaultValue = ((double)(0));
                this.columnFE4Laba.DefaultValue = ((double)(0));
                this.columnLainyaOmset.DefaultValue = ((double)(0));
                this.columnLainyaHpp.DefaultValue = ((double)(0));
                this.columnLainyaLaba.DefaultValue = ((double)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoSilverRow NewTokoSilverRow() {
                return ((TokoSilverRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TokoSilverRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TokoSilverRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TokoSilverRowChanged != null)) {
                    this.TokoSilverRowChanged(this, new TokoSilverRowChangeEvent(((TokoSilverRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TokoSilverRowChanging != null)) {
                    this.TokoSilverRowChanging(this, new TokoSilverRowChangeEvent(((TokoSilverRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TokoSilverRowDeleted != null)) {
                    this.TokoSilverRowDeleted(this, new TokoSilverRowChangeEvent(((TokoSilverRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TokoSilverRowDeleting != null)) {
                    this.TokoSilverRowDeleting(this, new TokoSilverRowChangeEvent(((TokoSilverRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTokoSilverRow(TokoSilverRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsTokoAktif ds = new dsTokoAktif();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TokoSilverDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TokoGoldDataTable : global::System.Data.TypedTableBase<TokoGoldRow> {
            
            private global::System.Data.DataColumn columnKodeToko;
            
            private global::System.Data.DataColumn columnKota;
            
            private global::System.Data.DataColumn columnFB2Omset;
            
            private global::System.Data.DataColumn columnFB2Hpp;
            
            private global::System.Data.DataColumn columnFB2Laba;
            
            private global::System.Data.DataColumn columnFB4Omset;
            
            private global::System.Data.DataColumn columnFB4Hpp;
            
            private global::System.Data.DataColumn columnFB4Laba;
            
            private global::System.Data.DataColumn columnFE2Omset;
            
            private global::System.Data.DataColumn columnFE2Hpp;
            
            private global::System.Data.DataColumn columnFE2Laba;
            
            private global::System.Data.DataColumn columnFE4Omset;
            
            private global::System.Data.DataColumn columnFE4Hpp;
            
            private global::System.Data.DataColumn columnFE4Laba;
            
            private global::System.Data.DataColumn columnLainyaOmset;
            
            private global::System.Data.DataColumn columnLainyaHpp;
            
            private global::System.Data.DataColumn columnLainyaLaba;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoGoldDataTable() {
                this.TableName = "TokoGold";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TokoGoldDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TokoGoldDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeTokoColumn {
                get {
                    return this.columnKodeToko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaColumn {
                get {
                    return this.columnKota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB2OmsetColumn {
                get {
                    return this.columnFB2Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB2HppColumn {
                get {
                    return this.columnFB2Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB2LabaColumn {
                get {
                    return this.columnFB2Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB4OmsetColumn {
                get {
                    return this.columnFB4Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB4HppColumn {
                get {
                    return this.columnFB4Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FB4LabaColumn {
                get {
                    return this.columnFB4Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE2OmsetColumn {
                get {
                    return this.columnFE2Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE2HppColumn {
                get {
                    return this.columnFE2Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE2LabaColumn {
                get {
                    return this.columnFE2Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE4OmsetColumn {
                get {
                    return this.columnFE4Omset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE4HppColumn {
                get {
                    return this.columnFE4Hpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FE4LabaColumn {
                get {
                    return this.columnFE4Laba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainyaOmsetColumn {
                get {
                    return this.columnLainyaOmset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainyaHppColumn {
                get {
                    return this.columnLainyaHpp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LainyaLabaColumn {
                get {
                    return this.columnLainyaLaba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoGoldRow this[int index] {
                get {
                    return ((TokoGoldRow)(this.Rows[index]));
                }
            }
            
            public event TokoGoldRowChangeEventHandler TokoGoldRowChanging;
            
            public event TokoGoldRowChangeEventHandler TokoGoldRowChanged;
            
            public event TokoGoldRowChangeEventHandler TokoGoldRowDeleting;
            
            public event TokoGoldRowChangeEventHandler TokoGoldRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTokoGoldRow(TokoGoldRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoGoldRow AddTokoGoldRow(
                        string KodeToko, 
                        string Kota, 
                        double FB2Omset, 
                        double FB2Hpp, 
                        double FB2Laba, 
                        double FB4Omset, 
                        double FB4Hpp, 
                        double FB4Laba, 
                        double FE2Omset, 
                        double FE2Hpp, 
                        double FE2Laba, 
                        double FE4Omset, 
                        double FE4Hpp, 
                        double FE4Laba, 
                        double LainyaOmset, 
                        double LainyaHpp, 
                        double LainyaLaba) {
                TokoGoldRow rowTokoGoldRow = ((TokoGoldRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeToko,
                        Kota,
                        FB2Omset,
                        FB2Hpp,
                        FB2Laba,
                        FB4Omset,
                        FB4Hpp,
                        FB4Laba,
                        FE2Omset,
                        FE2Hpp,
                        FE2Laba,
                        FE4Omset,
                        FE4Hpp,
                        FE4Laba,
                        LainyaOmset,
                        LainyaHpp,
                        LainyaLaba};
                rowTokoGoldRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTokoGoldRow);
                return rowTokoGoldRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TokoGoldDataTable cln = ((TokoGoldDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TokoGoldDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeToko = base.Columns["KodeToko"];
                this.columnKota = base.Columns["Kota"];
                this.columnFB2Omset = base.Columns["FB2Omset"];
                this.columnFB2Hpp = base.Columns["FB2Hpp"];
                this.columnFB2Laba = base.Columns["FB2Laba"];
                this.columnFB4Omset = base.Columns["FB4Omset"];
                this.columnFB4Hpp = base.Columns["FB4Hpp"];
                this.columnFB4Laba = base.Columns["FB4Laba"];
                this.columnFE2Omset = base.Columns["FE2Omset"];
                this.columnFE2Hpp = base.Columns["FE2Hpp"];
                this.columnFE2Laba = base.Columns["FE2Laba"];
                this.columnFE4Omset = base.Columns["FE4Omset"];
                this.columnFE4Hpp = base.Columns["FE4Hpp"];
                this.columnFE4Laba = base.Columns["FE4Laba"];
                this.columnLainyaOmset = base.Columns["LainyaOmset"];
                this.columnLainyaHpp = base.Columns["LainyaHpp"];
                this.columnLainyaLaba = base.Columns["LainyaLaba"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeToko = new global::System.Data.DataColumn("KodeToko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeToko);
                this.columnKota = new global::System.Data.DataColumn("Kota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKota);
                this.columnFB2Omset = new global::System.Data.DataColumn("FB2Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB2Omset);
                this.columnFB2Hpp = new global::System.Data.DataColumn("FB2Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB2Hpp);
                this.columnFB2Laba = new global::System.Data.DataColumn("FB2Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB2Laba);
                this.columnFB4Omset = new global::System.Data.DataColumn("FB4Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB4Omset);
                this.columnFB4Hpp = new global::System.Data.DataColumn("FB4Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB4Hpp);
                this.columnFB4Laba = new global::System.Data.DataColumn("FB4Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFB4Laba);
                this.columnFE2Omset = new global::System.Data.DataColumn("FE2Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE2Omset);
                this.columnFE2Hpp = new global::System.Data.DataColumn("FE2Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE2Hpp);
                this.columnFE2Laba = new global::System.Data.DataColumn("FE2Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE2Laba);
                this.columnFE4Omset = new global::System.Data.DataColumn("FE4Omset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE4Omset);
                this.columnFE4Hpp = new global::System.Data.DataColumn("FE4Hpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE4Hpp);
                this.columnFE4Laba = new global::System.Data.DataColumn("FE4Laba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE4Laba);
                this.columnLainyaOmset = new global::System.Data.DataColumn("LainyaOmset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLainyaOmset);
                this.columnLainyaHpp = new global::System.Data.DataColumn("LainyaHpp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLainyaHpp);
                this.columnLainyaLaba = new global::System.Data.DataColumn("LainyaLaba", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLainyaLaba);
                this.columnKodeToko.DefaultValue = ((string)(""));
                this.columnKota.DefaultValue = ((string)(""));
                this.columnFB2Omset.DefaultValue = ((double)(0));
                this.columnFB2Hpp.DefaultValue = ((double)(0));
                this.columnFB2Laba.DefaultValue = ((double)(0));
                this.columnFB4Omset.DefaultValue = ((double)(0));
                this.columnFB4Hpp.DefaultValue = ((double)(0));
                this.columnFB4Laba.DefaultValue = ((double)(0));
                this.columnFE2Omset.DefaultValue = ((double)(0));
                this.columnFE2Hpp.DefaultValue = ((double)(0));
                this.columnFE2Laba.DefaultValue = ((double)(0));
                this.columnFE4Omset.DefaultValue = ((double)(0));
                this.columnFE4Hpp.DefaultValue = ((double)(0));
                this.columnFE4Laba.DefaultValue = ((double)(0));
                this.columnLainyaOmset.DefaultValue = ((double)(0));
                this.columnLainyaHpp.DefaultValue = ((double)(0));
                this.columnLainyaLaba.DefaultValue = ((double)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoGoldRow NewTokoGoldRow() {
                return ((TokoGoldRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TokoGoldRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TokoGoldRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TokoGoldRowChanged != null)) {
                    this.TokoGoldRowChanged(this, new TokoGoldRowChangeEvent(((TokoGoldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TokoGoldRowChanging != null)) {
                    this.TokoGoldRowChanging(this, new TokoGoldRowChangeEvent(((TokoGoldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TokoGoldRowDeleted != null)) {
                    this.TokoGoldRowDeleted(this, new TokoGoldRowChangeEvent(((TokoGoldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TokoGoldRowDeleting != null)) {
                    this.TokoGoldRowDeleting(this, new TokoGoldRowChangeEvent(((TokoGoldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTokoGoldRow(TokoGoldRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsTokoAktif ds = new dsTokoAktif();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TokoGoldDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TokoBronzeRow : global::System.Data.DataRow {
            
            private TokoBronzeDataTable tableTokoBronze;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TokoBronzeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTokoBronze = ((TokoBronzeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeToko {
                get {
                    try {
                        return ((string)(this[this.tableTokoBronze.KodeTokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeToko\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.KodeTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kota {
                get {
                    try {
                        return ((string)(this[this.tableTokoBronze.KotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kota\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.KotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB2Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FB2OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB2Omset\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FB2OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB2Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FB2HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB2Hpp\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FB2HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB2Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FB2LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB2Laba\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FB2LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB4Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FB4OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB4Omset\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FB4OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB4Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FB4HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB4Hpp\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FB4HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB4Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FB4LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB4Laba\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FB4LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE2Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FE2OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE2Omset\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FE2OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE2Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FE2HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE2Hpp\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FE2HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE2Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FE2LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE2Laba\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FE2LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE4Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FE4OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE4Omset\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FE4OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE4Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FE4HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE4Hpp\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FE4HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE4Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.FE4LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE4Laba\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.FE4LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LainyaOmset {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.LainyaOmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LainyaOmset\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.LainyaOmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LainyaHpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.LainyaHppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LainyaHpp\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.LainyaHppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LainyaLaba {
                get {
                    try {
                        return ((double)(this[this.tableTokoBronze.LainyaLabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LainyaLaba\' in table \'TokoBronze\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoBronze.LainyaLabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeTokoNull() {
                return this.IsNull(this.tableTokoBronze.KodeTokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeTokoNull() {
                this[this.tableTokoBronze.KodeTokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKotaNull() {
                return this.IsNull(this.tableTokoBronze.KotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKotaNull() {
                this[this.tableTokoBronze.KotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB2OmsetNull() {
                return this.IsNull(this.tableTokoBronze.FB2OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB2OmsetNull() {
                this[this.tableTokoBronze.FB2OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB2HppNull() {
                return this.IsNull(this.tableTokoBronze.FB2HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB2HppNull() {
                this[this.tableTokoBronze.FB2HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB2LabaNull() {
                return this.IsNull(this.tableTokoBronze.FB2LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB2LabaNull() {
                this[this.tableTokoBronze.FB2LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB4OmsetNull() {
                return this.IsNull(this.tableTokoBronze.FB4OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB4OmsetNull() {
                this[this.tableTokoBronze.FB4OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB4HppNull() {
                return this.IsNull(this.tableTokoBronze.FB4HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB4HppNull() {
                this[this.tableTokoBronze.FB4HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB4LabaNull() {
                return this.IsNull(this.tableTokoBronze.FB4LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB4LabaNull() {
                this[this.tableTokoBronze.FB4LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE2OmsetNull() {
                return this.IsNull(this.tableTokoBronze.FE2OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE2OmsetNull() {
                this[this.tableTokoBronze.FE2OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE2HppNull() {
                return this.IsNull(this.tableTokoBronze.FE2HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE2HppNull() {
                this[this.tableTokoBronze.FE2HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE2LabaNull() {
                return this.IsNull(this.tableTokoBronze.FE2LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE2LabaNull() {
                this[this.tableTokoBronze.FE2LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE4OmsetNull() {
                return this.IsNull(this.tableTokoBronze.FE4OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE4OmsetNull() {
                this[this.tableTokoBronze.FE4OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE4HppNull() {
                return this.IsNull(this.tableTokoBronze.FE4HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE4HppNull() {
                this[this.tableTokoBronze.FE4HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE4LabaNull() {
                return this.IsNull(this.tableTokoBronze.FE4LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE4LabaNull() {
                this[this.tableTokoBronze.FE4LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainyaOmsetNull() {
                return this.IsNull(this.tableTokoBronze.LainyaOmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainyaOmsetNull() {
                this[this.tableTokoBronze.LainyaOmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainyaHppNull() {
                return this.IsNull(this.tableTokoBronze.LainyaHppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainyaHppNull() {
                this[this.tableTokoBronze.LainyaHppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainyaLabaNull() {
                return this.IsNull(this.tableTokoBronze.LainyaLabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainyaLabaNull() {
                this[this.tableTokoBronze.LainyaLabaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TokoSilverRow : global::System.Data.DataRow {
            
            private TokoSilverDataTable tableTokoSilver;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TokoSilverRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTokoSilver = ((TokoSilverDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeToko {
                get {
                    try {
                        return ((string)(this[this.tableTokoSilver.KodeTokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeToko\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.KodeTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kota {
                get {
                    try {
                        return ((string)(this[this.tableTokoSilver.KotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kota\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.KotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB2Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FB2OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB2Omset\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FB2OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB2Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FB2HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB2Hpp\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FB2HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB2Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FB2LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB2Laba\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FB2LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB4Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FB4OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB4Omset\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FB4OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB4Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FB4HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB4Hpp\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FB4HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB4Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FB4LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB4Laba\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FB4LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE2Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FE2OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE2Omset\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FE2OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE2Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FE2HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE2Hpp\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FE2HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE2Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FE2LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE2Laba\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FE2LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE4Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FE4OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE4Omset\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FE4OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE4Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FE4HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE4Hpp\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FE4HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE4Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.FE4LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE4Laba\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.FE4LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LainyaOmset {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.LainyaOmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LainyaOmset\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.LainyaOmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LainyaHpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.LainyaHppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LainyaHpp\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.LainyaHppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LainyaLaba {
                get {
                    try {
                        return ((double)(this[this.tableTokoSilver.LainyaLabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LainyaLaba\' in table \'TokoSilver\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoSilver.LainyaLabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeTokoNull() {
                return this.IsNull(this.tableTokoSilver.KodeTokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeTokoNull() {
                this[this.tableTokoSilver.KodeTokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKotaNull() {
                return this.IsNull(this.tableTokoSilver.KotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKotaNull() {
                this[this.tableTokoSilver.KotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB2OmsetNull() {
                return this.IsNull(this.tableTokoSilver.FB2OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB2OmsetNull() {
                this[this.tableTokoSilver.FB2OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB2HppNull() {
                return this.IsNull(this.tableTokoSilver.FB2HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB2HppNull() {
                this[this.tableTokoSilver.FB2HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB2LabaNull() {
                return this.IsNull(this.tableTokoSilver.FB2LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB2LabaNull() {
                this[this.tableTokoSilver.FB2LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB4OmsetNull() {
                return this.IsNull(this.tableTokoSilver.FB4OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB4OmsetNull() {
                this[this.tableTokoSilver.FB4OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB4HppNull() {
                return this.IsNull(this.tableTokoSilver.FB4HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB4HppNull() {
                this[this.tableTokoSilver.FB4HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB4LabaNull() {
                return this.IsNull(this.tableTokoSilver.FB4LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB4LabaNull() {
                this[this.tableTokoSilver.FB4LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE2OmsetNull() {
                return this.IsNull(this.tableTokoSilver.FE2OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE2OmsetNull() {
                this[this.tableTokoSilver.FE2OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE2HppNull() {
                return this.IsNull(this.tableTokoSilver.FE2HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE2HppNull() {
                this[this.tableTokoSilver.FE2HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE2LabaNull() {
                return this.IsNull(this.tableTokoSilver.FE2LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE2LabaNull() {
                this[this.tableTokoSilver.FE2LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE4OmsetNull() {
                return this.IsNull(this.tableTokoSilver.FE4OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE4OmsetNull() {
                this[this.tableTokoSilver.FE4OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE4HppNull() {
                return this.IsNull(this.tableTokoSilver.FE4HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE4HppNull() {
                this[this.tableTokoSilver.FE4HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE4LabaNull() {
                return this.IsNull(this.tableTokoSilver.FE4LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE4LabaNull() {
                this[this.tableTokoSilver.FE4LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainyaOmsetNull() {
                return this.IsNull(this.tableTokoSilver.LainyaOmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainyaOmsetNull() {
                this[this.tableTokoSilver.LainyaOmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainyaHppNull() {
                return this.IsNull(this.tableTokoSilver.LainyaHppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainyaHppNull() {
                this[this.tableTokoSilver.LainyaHppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainyaLabaNull() {
                return this.IsNull(this.tableTokoSilver.LainyaLabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainyaLabaNull() {
                this[this.tableTokoSilver.LainyaLabaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TokoGoldRow : global::System.Data.DataRow {
            
            private TokoGoldDataTable tableTokoGold;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TokoGoldRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTokoGold = ((TokoGoldDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeToko {
                get {
                    try {
                        return ((string)(this[this.tableTokoGold.KodeTokoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeToko\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.KodeTokoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kota {
                get {
                    try {
                        return ((string)(this[this.tableTokoGold.KotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kota\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.KotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB2Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FB2OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB2Omset\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FB2OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB2Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FB2HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB2Hpp\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FB2HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB2Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FB2LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB2Laba\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FB2LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB4Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FB4OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB4Omset\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FB4OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB4Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FB4HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB4Hpp\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FB4HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FB4Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FB4LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FB4Laba\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FB4LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE2Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FE2OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE2Omset\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FE2OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE2Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FE2HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE2Hpp\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FE2HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE2Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FE2LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE2Laba\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FE2LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE4Omset {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FE4OmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE4Omset\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FE4OmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE4Hpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FE4HppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE4Hpp\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FE4HppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FE4Laba {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.FE4LabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE4Laba\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.FE4LabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LainyaOmset {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.LainyaOmsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LainyaOmset\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.LainyaOmsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LainyaHpp {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.LainyaHppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LainyaHpp\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.LainyaHppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LainyaLaba {
                get {
                    try {
                        return ((double)(this[this.tableTokoGold.LainyaLabaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LainyaLaba\' in table \'TokoGold\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTokoGold.LainyaLabaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeTokoNull() {
                return this.IsNull(this.tableTokoGold.KodeTokoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeTokoNull() {
                this[this.tableTokoGold.KodeTokoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKotaNull() {
                return this.IsNull(this.tableTokoGold.KotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKotaNull() {
                this[this.tableTokoGold.KotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB2OmsetNull() {
                return this.IsNull(this.tableTokoGold.FB2OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB2OmsetNull() {
                this[this.tableTokoGold.FB2OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB2HppNull() {
                return this.IsNull(this.tableTokoGold.FB2HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB2HppNull() {
                this[this.tableTokoGold.FB2HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB2LabaNull() {
                return this.IsNull(this.tableTokoGold.FB2LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB2LabaNull() {
                this[this.tableTokoGold.FB2LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB4OmsetNull() {
                return this.IsNull(this.tableTokoGold.FB4OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB4OmsetNull() {
                this[this.tableTokoGold.FB4OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB4HppNull() {
                return this.IsNull(this.tableTokoGold.FB4HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB4HppNull() {
                this[this.tableTokoGold.FB4HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFB4LabaNull() {
                return this.IsNull(this.tableTokoGold.FB4LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFB4LabaNull() {
                this[this.tableTokoGold.FB4LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE2OmsetNull() {
                return this.IsNull(this.tableTokoGold.FE2OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE2OmsetNull() {
                this[this.tableTokoGold.FE2OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE2HppNull() {
                return this.IsNull(this.tableTokoGold.FE2HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE2HppNull() {
                this[this.tableTokoGold.FE2HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE2LabaNull() {
                return this.IsNull(this.tableTokoGold.FE2LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE2LabaNull() {
                this[this.tableTokoGold.FE2LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE4OmsetNull() {
                return this.IsNull(this.tableTokoGold.FE4OmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE4OmsetNull() {
                this[this.tableTokoGold.FE4OmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE4HppNull() {
                return this.IsNull(this.tableTokoGold.FE4HppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE4HppNull() {
                this[this.tableTokoGold.FE4HppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFE4LabaNull() {
                return this.IsNull(this.tableTokoGold.FE4LabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFE4LabaNull() {
                this[this.tableTokoGold.FE4LabaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainyaOmsetNull() {
                return this.IsNull(this.tableTokoGold.LainyaOmsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainyaOmsetNull() {
                this[this.tableTokoGold.LainyaOmsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainyaHppNull() {
                return this.IsNull(this.tableTokoGold.LainyaHppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainyaHppNull() {
                this[this.tableTokoGold.LainyaHppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLainyaLabaNull() {
                return this.IsNull(this.tableTokoGold.LainyaLabaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLainyaLabaNull() {
                this[this.tableTokoGold.LainyaLabaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TokoBronzeRowChangeEvent : global::System.EventArgs {
            
            private TokoBronzeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoBronzeRowChangeEvent(TokoBronzeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoBronzeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TokoSilverRowChangeEvent : global::System.EventArgs {
            
            private TokoSilverRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoSilverRowChangeEvent(TokoSilverRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoSilverRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TokoGoldRowChangeEvent : global::System.EventArgs {
            
            private TokoGoldRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoGoldRowChangeEvent(TokoGoldRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TokoGoldRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591